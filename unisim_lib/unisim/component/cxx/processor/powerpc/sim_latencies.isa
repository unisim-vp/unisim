/*
 *  Copyright (c) 2007,
 *  INRIA Futurs
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Sylvain Girbal (sylvain.girbal@inria.fr)
 *          David Parello (david.parello@univ-perp.fr)
 */


{

typedef unsigned int latencies_t[8];
#define LAT(lat) (latencies[nstages++] = (lat), latency += (lat))

}

var latency : {unsigned int} = {0}
var nstages : {int} = {0}
var latencies : {latencies_t}

/**
 * Initilize the latency values of each instrucion
 */ 
constructor action initialize_latencies() {
}

/** Branch **/
b.initialize_latencies =       { LAT(1); }
bc.initialize_latencies =      { LAT(1); }
bcctr.initialize_latencies =   { LAT(1); }
bclr.initialize_latencies =    { LAT(1); }

/** Condition **/
crand.initialize_latencies =   { LAT(1); }
crandc.initialize_latencies =  { LAT(1); }
creqv.initialize_latencies =   { LAT(1); }
crnand.initialize_latencies =  { LAT(1); }
crnor.initialize_latencies =   { LAT(1); }
cror.initialize_latencies =    { LAT(1); }
crorc.initialize_latencies =   { LAT(1); }
crxor.initialize_latencies =   { LAT(1); }
mcrf.initialize_latencies =    { LAT(1); }

/** Floating **/
fabs.initialize_latencies =    { LAT(3); }
fadd.initialize_latencies =    { LAT(3); }
fadds.initialize_latencies =   { LAT(3); }
fdiv.initialize_latencies =    { LAT(31); }
fdivs.initialize_latencies =   { LAT(17); }
fres.initialize_latencies =    { LAT(10); }
fcmpo.initialize_latencies =   { LAT(3); }
fcmpu.initialize_latencies =   { LAT(3); }
fctiw.initialize_latencies =   { LAT(3); }
fctiwz.initialize_latencies =  { LAT(3); }
fmr.initialize_latencies =     { LAT(3); }
fmul.initialize_latencies =    { LAT(3); }
fmuls.initialize_latencies =   { LAT(4); }
fmadd.initialize_latencies =   { LAT(4); }
fmadds.initialize_latencies =  { LAT(3); }
fmsub.initialize_latencies =   { LAT(4); }
fmsubs.initialize_latencies =  { LAT(3); }
fnabs.initialize_latencies =   { LAT(3); }
fneg.initialize_latencies =    { LAT(3); }
fnmadd.initialize_latencies =  { LAT(4); }
fnmadds.initialize_latencies = { LAT(3); }
fnmsub.initialize_latencies =  { LAT(4); }
fnmsubs.initialize_latencies = { LAT(3); }
frsp.initialize_latencies =    { LAT(3); }
frsqrte.initialize_latencies = { LAT(3); }
fsub.initialize_latencies =    { LAT(3); }
fsubs.initialize_latencies =   { LAT(3); }
fsel.initialize_latencies =    { LAT(3); }
fsqrt.initialize_latencies =   { LAT(1); }
fsqrts.initialize_latencies =  { LAT(1); }
mcrfs.initialize_latencies =   { LAT(3); }
mffs.initialize_latencies =    { LAT(3); }
mtfsb0.initialize_latencies =  { LAT(3); }
mtfsb1.initialize_latencies =  { LAT(3); }
mtfsf.initialize_latencies =   { LAT(3); }
mtfsfi.initialize_latencies =  { LAT(3); }

/** Integer **/
add.initialize_latencies =    { LAT(1); }
addc.initialize_latencies =   { LAT(1); }
adde.initialize_latencies =   { LAT(1); }
addi.initialize_latencies =   { LAT(1); }
addic.initialize_latencies =  { LAT(1); }
addic_.initialize_latencies = { LAT(1); }
addis.initialize_latencies =  { LAT(1); }
addme.initialize_latencies =  { LAT(1); }
addze.initialize_latencies =  { LAT(1); }
divw.initialize_latencies =   { LAT(35); }
divwu.initialize_latencies =  { LAT(35); }
mulhw.initialize_latencies =  { LAT(5); }
mulhwu.initialize_latencies = { LAT(5); }
mulli.initialize_latencies =  { LAT(3); }
mullw.initialize_latencies =  { if (oe) LAT(5); else LAT(4); }
neg.initialize_latencies =    { LAT(1); }
subf.initialize_latencies =   { LAT(1); }
subfc.initialize_latencies =  { LAT(1); }
subfe.initialize_latencies =  { LAT(1); }
subfic.initialize_latencies = { LAT(1); }
subfme.initialize_latencies = { LAT(1); }
subfze.initialize_latencies = { LAT(1); }
cmp.initialize_latencies =    { LAT(1); }
cmpi.initialize_latencies =   { LAT(1); }
cmpl.initialize_latencies =   { LAT(1); }
cmpli.initialize_latencies =  { LAT(1); }
and.initialize_latencies =    { LAT(1); }
andc.initialize_latencies =   { LAT(1); }
andi_.initialize_latencies =  { LAT(1); }
andis_.initialize_latencies = { LAT(1); }
cntlzw.initialize_latencies = { LAT(1); }
eqv.initialize_latencies =    { LAT(1); }
extsb.initialize_latencies =  { LAT(1); }
extsh.initialize_latencies =  { LAT(1); }
nand.initialize_latencies =   { LAT(1); }
nor.initialize_latencies =    { LAT(1); }
or.initialize_latencies =     { LAT(1); }
orc.initialize_latencies =    { LAT(1); }
ori.initialize_latencies =    { LAT(1); }
oris.initialize_latencies =   { LAT(1); }
xor.initialize_latencies =    { LAT(1); }
xori.initialize_latencies =   { LAT(1); }
xoris.initialize_latencies =  { LAT(1); }
rlwimi.initialize_latencies = { LAT(1); }
rlwinm.initialize_latencies = { LAT(1); }
rlwnm.initialize_latencies =  { LAT(1); }
slw.initialize_latencies =    { LAT(1); }
sraw.initialize_latencies =   { LAT(1); }
srawi.initialize_latencies =  { LAT(1); }
srw.initialize_latencies =    { LAT(1); }

/** Load Store **/
lbz.initialize_latencies =     { LAT(3); }
lbzu.initialize_latencies =    { LAT(3); }
lbzux.initialize_latencies =   { LAT(3); }
lbzx.initialize_latencies =    { LAT(3); }
lha.initialize_latencies =     { LAT(3); }
lhau.initialize_latencies =    { LAT(3); }
lhaux.initialize_latencies =   { LAT(3); }
lhax.initialize_latencies =    { LAT(3); }
lhz.initialize_latencies =     { LAT(3); }
lhzu.initialize_latencies =    { LAT(3); }
lhzux.initialize_latencies =   { LAT(3); }
lhzx.initialize_latencies =    { LAT(3); }
lwz.initialize_latencies =     { LAT(3); }
lwzu.initialize_latencies =    { LAT(3); }
lwzux.initialize_latencies =   { LAT(3); }
lwzx.initialize_latencies =    { LAT(3); }
stb.initialize_latencies =     { LAT(3); }
stbu.initialize_latencies =    { LAT(3); }
stbux.initialize_latencies =   { LAT(3); }
stbx.initialize_latencies =    { LAT(3); }
sth.initialize_latencies =     { LAT(3); }
sthu.initialize_latencies =    { LAT(3); }
sthux.initialize_latencies =   { LAT(3); }
sthx.initialize_latencies =    { LAT(3); }
stw.initialize_latencies =     { LAT(3); }
stwu.initialize_latencies =    { LAT(3); }
stwux.initialize_latencies =   { LAT(3); }
stwx.initialize_latencies =    { LAT(3); }
lhbrx.initialize_latencies =   { LAT(3); }
lwbrx.initialize_latencies =   { LAT(3); }
sthbrx.initialize_latencies =  { LAT(3); }
stwbrx.initialize_latencies =  { LAT(3); }
lswi.initialize_latencies =    { LAT(2); }
lswx.initialize_latencies =    { LAT(2); }
stswi.initialize_latencies =   { LAT(2); }
stswx.initialize_latencies =   { LAT(2); }
lmw.initialize_latencies =     { LAT(2); }
stmw.initialize_latencies =    { LAT(2); }
lfd.initialize_latencies =     { LAT(3); }
lfdu.initialize_latencies =    { LAT(3); }
lfdux.initialize_latencies =   { LAT(3); }
lfdx.initialize_latencies =    { LAT(3); }
lfs.initialize_latencies =     { LAT(3); }
lfsu.initialize_latencies =    { LAT(3); }
lfsux.initialize_latencies =   { LAT(3); }
lfsx.initialize_latencies =    { LAT(3); }
stfd.initialize_latencies =    { LAT(3); }
stfdu.initialize_latencies =   { LAT(3); }
stfdux.initialize_latencies =  { LAT(3); }
stfdx.initialize_latencies =   { LAT(3); }
stfiwx.initialize_latencies =  { LAT(3); }
stfs.initialize_latencies =    { LAT(3); }
stfsu.initialize_latencies =   { LAT(3); }
stfsux.initialize_latencies =  { LAT(3); }
stfsx.initialize_latencies =   { LAT(3); }
dcba.initialize_latencies =    { LAT(3); }
dcbf.initialize_latencies =    { LAT(8); }
dcbi.initialize_latencies =    { LAT(6); }
dcbst.initialize_latencies =   { LAT(3); }
dcbt.initialize_latencies =    { LAT(3); }
dcbtst.initialize_latencies =  { LAT(3); }
dcbz.initialize_latencies =    { LAT(3); }
icbi.initialize_latencies =    { LAT(3); }
tlbia.initialize_latencies =   { LAT(3); }
tlbie.initialize_latencies =   { LAT(3); }
tlbsync.initialize_latencies = { LAT(3); }
eciwx.initialize_latencies =   { LAT(3); }
ecowx.initialize_latencies =   { LAT(3); }
eieio.initialize_latencies =   { LAT(3); }
isync.initialize_latencies =   { LAT(3); }
lwarx.initialize_latencies =   { LAT(4); }
stwcx_.initialize_latencies =  { LAT(16); }
sync.initialize_latencies =    { LAT(3); }

/** Misc **/
sc.initialize_latencies =      { LAT(2); }
rfi.initialize_latencies =     { LAT(2); }
tw.initialize_latencies =      { LAT(2); }
twi.initialize_latencies =     { LAT(2); }
mcrxr.initialize_latencies =   { LAT(1); }
mfcr.initialize_latencies =    { LAT(1); }
mfmsr.initialize_latencies =   { LAT(1); }
mfspr.initialize_latencies =   { LAT(3); }
mftb.initialize_latencies =    { LAT(1); }
mtcrf.initialize_latencies =   { LAT(1); }
mtmsr.initialize_latencies =   { LAT(1); }
mtspr.initialize_latencies =   { LAT(2); }
mfsr.initialize_latencies =    { LAT(3); }
mfsrin.initialize_latencies =  { LAT(3); }
mtsr.initialize_latencies =    { LAT(2); }
mtsrin.initialize_latencies =  { LAT(2); }
