/*
 *  Copyright (c) 2007,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Gilles Mouchard (gilles.mouchard@cea.fr)
 */

decl {

#include <iosfwd>
#include <unisim/component/cxx/processor/powerpc/exception.hh>

}

set addressclass {typename CONFIG::address_t}
template <{class} {CONFIG}>

action {void} execute({typename CONFIG::STATE *} {cpu}) {
	throw IllegalInstructionException<CONFIG>();
}

action {void} disasm({typename CONFIG::STATE *} {cpu}, {std::ostream&} {os}) {
	os << "???";
}

include "unisim/component/cxx/processor/powerpc/isa/integer.isa"
include "unisim/component/cxx/processor/powerpc/isa/floating.isa"
include "unisim/component/cxx/processor/powerpc/isa/optional_floating.isa"
include "unisim/component/cxx/processor/powerpc/isa/branch.isa"
include "unisim/component/cxx/processor/powerpc/isa/condition.isa"
include "unisim/component/cxx/processor/powerpc/isa/int_load_store.isa"
include "unisim/component/cxx/processor/powerpc/isa/byte_reverse_load_store.isa"
include "unisim/component/cxx/processor/powerpc/isa/string_load_store.isa"
include "unisim/component/cxx/processor/powerpc/isa/multiple_load_store.isa"
include "unisim/component/cxx/processor/powerpc/isa/fp_load_store.isa"
include "unisim/component/cxx/processor/powerpc/isa/external_control.isa"
include "unisim/component/cxx/processor/powerpc/isa/synchronization.isa"
include "unisim/component/cxx/processor/powerpc/isa/cache_management.isa"
include "unisim/component/cxx/processor/powerpc/isa/tlb_management.isa"
include "unisim/component/cxx/processor/powerpc/isa/misc.isa"
include "unisim/component/cxx/processor/powerpc/isa/altivec.isa"
include "unisim/component/cxx/processor/powerpc/isa/specialization.isa"

/*
include "sim_ppc.isa"
include "sim_latencies.isa"
include "sim_dependencies.isa"
include "sim_branch.isa"
include "sim_load.isa"
*/