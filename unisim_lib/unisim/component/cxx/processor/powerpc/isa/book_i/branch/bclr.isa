/*
 *  Copyright (c) 2007,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Gilles Mouchard (gilles.mouchard@cea.fr)
 */

/* Branch Conditional to Link Register */
op bclr(19[6]: bo[5]: bi[5]:?[5]:16[10]:lk[1]);

bclr.execute = {
	BOOL ctr_ok = BOOL(true), cond_ok = BOOL(true);
	
	if (((bo & 16) == 0))
	{
		/* Conditional branch */
		UINT const msb = ~(UINT(-1)>>1);
		if(bo & 8) {
			/* Branch if condition is true */
			cond_ok = ((cpu->GetCR() << bi) & msb) != 0;
		}
		else {
			/* Branch if condition is false */
			cond_ok = ((cpu->GetCR() << bi) & msb) == 0;
		}
	}
	
	if ((bo & 4) == 0)
	{
		/* Decrement CTR */
		CTR& ctr = cpu->GetCTR();
		ctr = UINT(ctr) - UINT(1);
		/* Test whether to branch if CTR is zero or not */
		if(bo & 2) {
			ctr_ok = cpu->GetCTR() == 0;
		}
		else {
			ctr_ok = cpu->GetCTR() != 0;
		}
	}

	if (ctr_ok and cond_ok) {
		ADDRESS target_addr = cpu->GetLR() & UINT(-4);
		cpu->Branch(target_addr);
	}
	if (lk) cpu->GetLR() = (cpu->GetCIA() + 4);
	
	return true;
};

bclr.disasm = {
	bool bc = false;
	switch(bo)
	{
	case 0: case 1:                     os << "bdnzflr"; break;
	case 2: case 3:                     os << "bdzflr"; break;
	case 4: case 5: case 6: case 7:     os << "bflr"; break;
	case 8: case 9:                     os << "bdnztlr"; break;
	case 10: case 11:                   os << "bdztlr"; break;
	case 12: case 13: case 14: case 15: os << "btlr"; break;
	case 16: case 17: case 24: case 25: os << "bdnzlr"; break;
	case 18: case 19: case 26: case 27: os << "bdzlr"; break;
	default: os << "bclr"; bc = true;
	}
	if (lk) os << "l";
        if (bc) os << unsigned(bo) << ", ";
        os << unsigned(bi);
};

specialize bclr(bo=0,aa=2,lk=0)
specialize bclr(bo=0,aa=2,lk=1)
specialize bclr(bo=1,aa=2,lk=0)
specialize bclr(bo=1,aa=2,lk=1)
specialize bclr(bo=2,aa=2,lk=0)
specialize bclr(bo=2,aa=2,lk=1)
specialize bclr(bo=3,aa=2,lk=0)
specialize bclr(bo=3,aa=2,lk=1)
specialize bclr(bo=4,aa=2,lk=0)
specialize bclr(bo=4,aa=2,lk=1)
specialize bclr(bo=5,aa=2,lk=0)
specialize bclr(bo=5,aa=2,lk=1)
specialize bclr(bo=6,aa=2,lk=0)
specialize bclr(bo=6,aa=2,lk=1)
specialize bclr(bo=7,aa=2,lk=0)
specialize bclr(bo=7,aa=2,lk=1)
specialize bclr(bo=8,aa=2,lk=0)
specialize bclr(bo=8,aa=2,lk=1)
specialize bclr(bo=9,aa=2,lk=0)
specialize bclr(bo=9,aa=2,lk=1)
specialize bclr(bo=10,aa=2,lk=0)
specialize bclr(bo=10,aa=2,lk=1)
specialize bclr(bo=11,aa=2,lk=0)
specialize bclr(bo=11,aa=2,lk=1)
specialize bclr(bo=12,aa=2,lk=0)
specialize bclr(bo=12,aa=2,lk=1)
specialize bclr(bo=13,aa=2,lk=0)
specialize bclr(bo=13,aa=2,lk=1)
specialize bclr(bo=14,aa=2,lk=0)
specialize bclr(bo=14,aa=2,lk=1)
specialize bclr(bo=15,aa=2,lk=0)
specialize bclr(bo=15,aa=2,lk=1)
specialize bclr(bo=16,aa=2,lk=0)
specialize bclr(bo=16,aa=2,lk=1)
specialize bclr(bo=17,aa=2,lk=0)
specialize bclr(bo=17,aa=2,lk=1)
specialize bclr(bo=18,aa=2,lk=0)
specialize bclr(bo=18,aa=2,lk=1)
specialize bclr(bo=19,aa=2,lk=0)
specialize bclr(bo=19,aa=2,lk=1)
specialize bclr(bo=20,aa=2,lk=0)
specialize bclr(bo=20,aa=2,lk=1)
specialize bclr(bo=21,aa=2,lk=0)
specialize bclr(bo=21,aa=2,lk=1)
specialize bclr(bo=22,aa=2,lk=0)
specialize bclr(bo=22,aa=2,lk=1)
specialize bclr(bo=23,aa=2,lk=0)
specialize bclr(bo=23,aa=2,lk=1)
specialize bclr(bo=24,aa=2,lk=0)
specialize bclr(bo=24,aa=2,lk=1)
specialize bclr(bo=25,aa=2,lk=0)
specialize bclr(bo=25,aa=2,lk=1)
specialize bclr(bo=26,aa=2,lk=0)
specialize bclr(bo=26,aa=2,lk=1)
specialize bclr(bo=27,aa=2,lk=0)
specialize bclr(bo=27,aa=2,lk=1)
specialize bclr(bo=28,aa=2,lk=0)
specialize bclr(bo=28,aa=2,lk=1)
specialize bclr(bo=29,aa=2,lk=0)
specialize bclr(bo=29,aa=2,lk=1)
specialize bclr(bo=30,aa=2,lk=0)
specialize bclr(bo=30,aa=2,lk=1)
specialize bclr(bo=31,aa=2,lk=0)
specialize bclr(bo=31,aa=2,lk=1)
