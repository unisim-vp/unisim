/*
 *  Copyright (c) 2007,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Gilles Mouchard (gilles.mouchard@cea.fr)
 */

op bc(16[6]: bo[5]: bi[5]:shl<2> sext<32> bd[14]: aa[1]: lk[1])
bc.execute = {
	uint32_t ctr_ok, cond_ok, ok;
	
	if(((bo & 16) == 0)) {
		/* Conditional branch */
		if(bo & 8) {
			/* Branch if condition is true */
			cond_ok = ((cpu->GetCR() << bi) & 0x80000000) != 0;
		}
		else {
			/* Branch if condition is false */
			cond_ok = ((cpu->GetCR() << bi) & 0x80000000) == 0;
		}
	}
	else {
		cond_ok = 1;
	}
	
	if((bo & 4) == 0)
	{
		/* Decrement CTR */
		cpu->SetCTR(cpu->GetCTR() - 1);
		/* Test whether to branch if CTR is zero or not */
		if(bo & 2) {
			ctr_ok = cpu->GetCTR() == 0;
		}
		else {
			ctr_ok = cpu->GetCTR() != 0;
		}
	}
	else {
		ctr_ok = 1;
	}
	
	ok = ctr_ok && cond_ok; 

	if(ok) {
		typename CONFIG::address_t target_addr = aa ? bd : cpu->GetCIA() + bd;
		cpu->Branch(target_addr);
	}
	if(lk) cpu->SetLR(cpu->GetCIA() + 4);
	
	return true;
}

bc.disasm = {
	typename CONFIG::address_t target_addr = aa ? bd : Operation<CONFIG>::GetAddr() + bd;
	switch(bo)
	{
		case 0: os << "bdnzf"; break;
		case 2: os << "bdzf"; break;
		case 4: os << "bf"; break;
		case 8: os << "bdnzt"; break;
		case 10: os << "bdzt"; break;
		case 12: os << "bt"; break;
		case 16: os << "bdnz"; break;
		case 18: os << "bdz"; break;
		default: os << "bc";
	}
	if(lk) os << "l";
	if(aa) os << "a";
	os << " ";
	switch(bo)
	{
		case 0: case 2: case 4: case 8: case 10: case 12: case 16: case 18: os << (unsigned int) bi; break;
		default: os << (unsigned int) bo << ", " << (unsigned int) bi;
	}
	os << ", 0x" << std::hex << target_addr << std::dec;
	if(cpu)
	{
		os << " <" << cpu->GetFunctionFriendlyName(target_addr) << ">";
	}
}

specialize bc(bo=0,aa=0,lk=0)
specialize bc(bo=0,aa=0,lk=1)
specialize bc(bo=0,aa=1,lk=0)
specialize bc(bo=0,aa=1,lk=1)
specialize bc(bo=1,aa=0,lk=0)
specialize bc(bo=1,aa=0,lk=1)
specialize bc(bo=1,aa=1,lk=0)
specialize bc(bo=1,aa=1,lk=1)
specialize bc(bo=2,aa=0,lk=0)
specialize bc(bo=2,aa=0,lk=1)
specialize bc(bo=2,aa=1,lk=0)
specialize bc(bo=2,aa=1,lk=1)
specialize bc(bo=3,aa=0,lk=0)
specialize bc(bo=3,aa=0,lk=1)
specialize bc(bo=3,aa=1,lk=0)
specialize bc(bo=3,aa=1,lk=1)
specialize bc(bo=4,aa=0,lk=0)
specialize bc(bo=4,aa=0,lk=1)
specialize bc(bo=4,aa=1,lk=0)
specialize bc(bo=4,aa=1,lk=1)
specialize bc(bo=5,aa=0,lk=0)
specialize bc(bo=5,aa=0,lk=1)
specialize bc(bo=5,aa=1,lk=0)
specialize bc(bo=5,aa=1,lk=1)
specialize bc(bo=6,aa=0,lk=0)
specialize bc(bo=6,aa=0,lk=1)
specialize bc(bo=6,aa=1,lk=0)
specialize bc(bo=6,aa=1,lk=1)
specialize bc(bo=7,aa=0,lk=0)
specialize bc(bo=7,aa=0,lk=1)
specialize bc(bo=7,aa=1,lk=0)
specialize bc(bo=7,aa=1,lk=1)
specialize bc(bo=8,aa=0,lk=0)
specialize bc(bo=8,aa=0,lk=1)
specialize bc(bo=8,aa=1,lk=0)
specialize bc(bo=8,aa=1,lk=1)
specialize bc(bo=9,aa=0,lk=0)
specialize bc(bo=9,aa=0,lk=1)
specialize bc(bo=9,aa=1,lk=0)
specialize bc(bo=9,aa=1,lk=1)
specialize bc(bo=10,aa=0,lk=0)
specialize bc(bo=10,aa=0,lk=1)
specialize bc(bo=10,aa=1,lk=0)
specialize bc(bo=10,aa=1,lk=1)
specialize bc(bo=11,aa=0,lk=0)
specialize bc(bo=11,aa=0,lk=1)
specialize bc(bo=11,aa=1,lk=0)
specialize bc(bo=11,aa=1,lk=1)
specialize bc(bo=12,aa=0,lk=0)
specialize bc(bo=12,aa=0,lk=1)
specialize bc(bo=12,aa=1,lk=0)
specialize bc(bo=12,aa=1,lk=1)
specialize bc(bo=13,aa=0,lk=0)
specialize bc(bo=13,aa=0,lk=1)
specialize bc(bo=13,aa=1,lk=0)
specialize bc(bo=13,aa=1,lk=1)
specialize bc(bo=14,aa=0,lk=0)
specialize bc(bo=14,aa=0,lk=1)
specialize bc(bo=14,aa=1,lk=0)
specialize bc(bo=14,aa=1,lk=1)
specialize bc(bo=15,aa=0,lk=0)
specialize bc(bo=15,aa=0,lk=1)
specialize bc(bo=15,aa=1,lk=0)
specialize bc(bo=15,aa=1,lk=1)
specialize bc(bo=16,aa=0,lk=0)
specialize bc(bo=16,aa=0,lk=1)
specialize bc(bo=16,aa=1,lk=0)
specialize bc(bo=16,aa=1,lk=1)
specialize bc(bo=17,aa=0,lk=0)
specialize bc(bo=17,aa=0,lk=1)
specialize bc(bo=17,aa=1,lk=0)
specialize bc(bo=17,aa=1,lk=1)
specialize bc(bo=18,aa=0,lk=0)
specialize bc(bo=18,aa=0,lk=1)
specialize bc(bo=18,aa=1,lk=0)
specialize bc(bo=18,aa=1,lk=1)
specialize bc(bo=19,aa=0,lk=0)
specialize bc(bo=19,aa=0,lk=1)
specialize bc(bo=19,aa=1,lk=0)
specialize bc(bo=19,aa=1,lk=1)
specialize bc(bo=20,aa=0,lk=0)
specialize bc(bo=20,aa=0,lk=1)
specialize bc(bo=20,aa=1,lk=0)
specialize bc(bo=20,aa=1,lk=1)
specialize bc(bo=21,aa=0,lk=0)
specialize bc(bo=21,aa=0,lk=1)
specialize bc(bo=21,aa=1,lk=0)
specialize bc(bo=21,aa=1,lk=1)
specialize bc(bo=22,aa=0,lk=0)
specialize bc(bo=22,aa=0,lk=1)
specialize bc(bo=22,aa=1,lk=0)
specialize bc(bo=22,aa=1,lk=1)
specialize bc(bo=23,aa=0,lk=0)
specialize bc(bo=23,aa=0,lk=1)
specialize bc(bo=23,aa=1,lk=0)
specialize bc(bo=23,aa=1,lk=1)
specialize bc(bo=24,aa=0,lk=0)
specialize bc(bo=24,aa=0,lk=1)
specialize bc(bo=24,aa=1,lk=0)
specialize bc(bo=24,aa=1,lk=1)
specialize bc(bo=25,aa=0,lk=0)
specialize bc(bo=25,aa=0,lk=1)
specialize bc(bo=25,aa=1,lk=0)
specialize bc(bo=25,aa=1,lk=1)
specialize bc(bo=26,aa=0,lk=0)
specialize bc(bo=26,aa=0,lk=1)
specialize bc(bo=26,aa=1,lk=0)
specialize bc(bo=26,aa=1,lk=1)
specialize bc(bo=27,aa=0,lk=0)
specialize bc(bo=27,aa=0,lk=1)
specialize bc(bo=27,aa=1,lk=0)
specialize bc(bo=27,aa=1,lk=1)
specialize bc(bo=28,aa=0,lk=0)
specialize bc(bo=28,aa=0,lk=1)
specialize bc(bo=28,aa=1,lk=0)
specialize bc(bo=28,aa=1,lk=1)
specialize bc(bo=29,aa=0,lk=0)
specialize bc(bo=29,aa=0,lk=1)
specialize bc(bo=29,aa=1,lk=0)
specialize bc(bo=29,aa=1,lk=1)
specialize bc(bo=30,aa=0,lk=0)
specialize bc(bo=30,aa=0,lk=1)
specialize bc(bo=30,aa=1,lk=0)
specialize bc(bo=30,aa=1,lk=1)
specialize bc(bo=31,aa=0,lk=0)
specialize bc(bo=31,aa=0,lk=1)
specialize bc(bo=31,aa=1,lk=0)
specialize bc(bo=31,aa=1,lk=1)
