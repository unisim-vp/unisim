/*** File generated by GenISSLib version 2.1: DO NOT MODIFY ***/
#ifndef __isa_arm32_unisim__component__cxx__processor__arm__isa__arm32_HH__
#define __isa_arm32_unisim__component__cxx__processor__arm__isa__arm32_HH__
#ifndef __STDC_FORMAT_MACROS
#define __STDC_FORMAT_MACROS
#endif

#include <vector>
#include <inttypes.h>
#include <cstring>
namespace unisim { namespace component { namespace cxx { namespace processor { namespace arm { namespace isa { namespace arm32 {
typedef uint32_t CodeType;

template <
#line 44 "isa/arm32/arm32.isa"
class
#line 18 "isa_arm32.hh"
#line 44 "isa/arm32/arm32.isa"
CONFIG
#line 21 "isa_arm32.hh"
>
class Operation;
const unsigned int NUM_OPERATIONS_PER_PAGE = 4096;
template <
#line 44 "isa/arm32/arm32.isa"
class
#line 28 "isa_arm32.hh"
#line 44 "isa/arm32/arm32.isa"
CONFIG
#line 31 "isa_arm32.hh"
>
class DecodeMapPage
{
public:
	DecodeMapPage(typename CONFIG::address_t key);
	~DecodeMapPage();
	typename CONFIG::address_t key;
	DecodeMapPage *next;
	Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 43 "isa_arm32.hh"
	> *operation[NUM_OPERATIONS_PER_PAGE];
};

template <
#line 44 "isa/arm32/arm32.isa"
class
#line 50 "isa_arm32.hh"
#line 44 "isa/arm32/arm32.isa"
CONFIG
#line 53 "isa_arm32.hh"
>
class DecodeTableEntry
{
public:
	DecodeTableEntry(CodeType opcode, CodeType opcode_mask, Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 61 "isa_arm32.hh"
	> *(*decode)(CodeType, typename CONFIG::address_t));
	CodeType opcode;
	CodeType opcode_mask;
	Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 68 "isa_arm32.hh"
	> *(*decode)(CodeType code, typename CONFIG::address_t addr);
};
const unsigned int NUM_DECODE_HASH_TABLE_ENTRIES = 4096;
template <
#line 44 "isa/arm32/arm32.isa"
class
#line 75 "isa_arm32.hh"
#line 44 "isa/arm32/arm32.isa"
CONFIG
#line 78 "isa_arm32.hh"
>
class Decoder
{
public:
	Decoder();
	virtual ~Decoder();

	Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 89 "isa_arm32.hh"
	>*NCDecode(typename CONFIG::address_t addr);
	Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 94 "isa_arm32.hh"
	> *NCDecode(typename CONFIG::address_t addr, CodeType code);
	Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 99 "isa_arm32.hh"
	> *Decode(typename CONFIG::address_t addr);
	Operation<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 104 "isa_arm32.hh"
	> *Decode(typename CONFIG::address_t addr, CodeType insn);
	std::vector<DecodeTableEntry<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 109 "isa_arm32.hh"
	> > const& GetDecodeTable() const { return decode_table; };
	virtual void Fetch(void *, typename CONFIG::address_t, uint32_t) ;
	void InvalidateDecodingCacheEntry(typename CONFIG::address_t addr);
	void InvalidateDecodingCache();

	void SetLittleEndian();
	void SetBigEndian();
private:
	bool little_endian;
	std::vector<DecodeTableEntry<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 122 "isa_arm32.hh"
	> > decode_table;
	DecodeMapPage<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 127 "isa_arm32.hh"
	> *mru_page;
	DecodeMapPage<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 132 "isa_arm32.hh"
	> *decode_hash_table[NUM_DECODE_HASH_TABLE_ENTRIES];
	DecodeMapPage<
#line 44 "isa/arm32/arm32.isa"
	CONFIG
#line 137 "isa_arm32.hh"
	> *FindPage(typename CONFIG::address_t page_key)
#if defined(__GNUC__) && (__GNUC__ >= 3 && (__GNUC__ != 3 || __GNUC_MINOR__ != 4 || __GNUC_PATCHLEVEL__ != 6))
	__attribute__((always_inline))
#endif
	;
};

} } } } } } }
#line 46 "isa/arm32/arm32.isa"

#include <iostream>
#include <sstream>
#include <stdexcept>

namespace unisim {
	namespace component {
		namespace cxx {
			namespace processor {
				namespace arm {

					using std::stringstream;
					using std::cerr;
					using std::endl;
					using std::hex;
					using std::dec;
					using std::exception;

					template<class CONFIG>
					class CPU;

				} // end of namespace arm
			} // end of namespace processor
		} // end of namespace cxx
	} // end of namespace component
} // end of namespace unisim

#line 174 "isa_arm32.hh"
#line 41 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/data_processing_v5e.isa"

#include "unisim/util/arithmetic/arithmetic.hh"

using unisim::util::arithmetic::SignedSatAdd32;
using unisim::util::arithmetic::SignedSatSub32;

#line 182 "isa_arm32.hh"
#line 41 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/load_store_base.isa"

#include <iostream>
#line 186 "isa_arm32.hh"
#line 41 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/load_store_v4.isa"

#include <iostream>
#line 190 "isa_arm32.hh"
#line 35 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/dependency.isa"


namespace unisim {
	namespace component {
		namespace cxx {
			namespace processor {
				namespace arm {

					typedef enum operand_type_t { GPR_T, FPR_T, CR_T} operand_type_t;
					typedef enum operand_direction_t { INPUT_T, OUTPUT_T } operand_direction_t;
					typedef enum unit_type_t { NO_UNIT_T, ALU_T, CP_T} unit_type_t;

					typedef struct operand_t {
						operand_type_t type;
						operand_direction_t dir;
						unsigned int value;
					} operand_t;

#define INPUT(_type, _value) \
					(\
					Operation<CONFIG>::operands[Operation<CONFIG>::noperands].type = _type,\
					Operation<CONFIG>::operands[Operation<CONFIG>::noperands].dir = INPUT_T,\
					Operation<CONFIG>::operands[Operation<CONFIG>::noperands++].value = _value\
					)

#define OUTPUT(_type, _value) \
					(\
					Operation<CONFIG>::operands[Operation<CONFIG>::noperands].type = _type,\
					Operation<CONFIG>::operands[Operation<CONFIG>::noperands].dir = OUTPUT_T,\
					Operation<CONFIG>::operands[Operation<CONFIG>::noperands++].value = _value\
					)

					typedef operand_t operands_t[8];

				} // end of namespace arm
			} // end of namespace processor
		} // end of namespace cxx
	} // end of namespace component
} // end of namespace unisim

#line 232 "isa_arm32.hh"
#line 35 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/profiling.isa"

#include <map>

namespace unisim {
	namespace component {
		namespace cxx {
			namespace processor {
				namespace arm {

					using std::map;

				} // end of namespace arm
			} // end of namespace processor
		} // end of namespace cxx
	} // end of namespace component
} // end of namespace unisim
#line 250 "isa_arm32.hh"
namespace unisim { namespace component { namespace cxx { namespace processor { namespace arm { namespace isa { namespace arm32 {
template <
#line 44 "isa/arm32/arm32.isa"
class
#line 255 "isa_arm32.hh"
#line 44 "isa/arm32/arm32.isa"
CONFIG
#line 258 "isa_arm32.hh"
>
class Operation
{
public:
	Operation(CodeType code, typename CONFIG::address_t addr, const char *name);
	virtual ~Operation();
	inline typename CONFIG::address_t GetAddr() const { return addr; }
	inline CodeType GetEncoding() const { return encoding; }
	inline const char *GetName() const { return name; }
#line 35 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int cond_init;
#line 270 "isa_arm32.hh"
#line 37 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rn_init;
#line 273 "isa_arm32.hh"
#line 38 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rm_init;
#line 276 "isa_arm32.hh"
#line 39 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rd_init;
#line 279 "isa_arm32.hh"
#line 40 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rs_init;
#line 282 "isa_arm32.hh"
#line 41 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rdhi_init;
#line 285 "isa_arm32.hh"
#line 42 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rdlo_init;
#line 288 "isa_arm32.hh"
#line 43 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/constructors_dec.isa"
	unsigned int rdp1_init;
#line 291 "isa_arm32.hh"
#line 77 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/dependency.isa"
	unsigned int noperands;
#line 294 "isa_arm32.hh"
#line 78 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/dependency.isa"
	operands_t operands;
#line 297 "isa_arm32.hh"
#line 79 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/dependency.isa"
	unit_type_t unit;
#line 300 "isa_arm32.hh"
	virtual
#line 53 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/profiling.isa"
	void
#line 304 "isa_arm32.hh"
	profile(
#line 53 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/profiling.isa"
	map<uint64_t, uint32_t> &
#line 308 "isa_arm32.hh"
#line 53 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/profiling.isa"
	prof
#line 311 "isa_arm32.hh"
	);
	virtual void initialize_dependency_write_reglist( );
	virtual void initialize_dependency_write_rdlo( );
	virtual void initialize_dependency_write_rdhi( );
	virtual void initialize_dependency_write_rd( );
	virtual void initialize_dependency_write_rn( );
	virtual void initialize_dependency_read_crn( );
	virtual void initialize_dependency_read_crm( );
	virtual void initialize_dependency_read_reglist( );
	virtual void initialize_dependency_read_rs( );
	virtual void initialize_dependency_read_rn( );
	virtual void initialize_dependency_read_rm( );
	virtual
#line 39 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	void
#line 327 "isa_arm32.hh"
	disasm(
#line 39 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	CPU<CONFIG> &
#line 331 "isa_arm32.hh"
#line 39 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	cpu
#line 334 "isa_arm32.hh"
	,
#line 39 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	stringstream &
#line 338 "isa_arm32.hh"
#line 39 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	buffer
#line 341 "isa_arm32.hh"
	);
	virtual
#line 35 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	void
#line 346 "isa_arm32.hh"
	execute(
#line 35 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	CPU<CONFIG> &
#line 350 "isa_arm32.hh"
#line 35 "/home/parello/svn/unisim.org/devel/unisim_lib/unisim/component/cxx/processor/arm/isa/arm32/actions_dec.isa"
	cpu
#line 353 "isa_arm32.hh"
	);
	virtual void initialize_rdp1_init( );
	virtual void initialize_rdlo_init( );
	virtual void initialize_rdhi_init( );
	virtual void initialize_rs_init( );
	virtual void initialize_rd_init( );
	virtual void initialize_rm_init( );
	virtual void initialize_rn_init( );
	virtual void initialize_condition( );
protected:
	CodeType encoding;
	typename CONFIG::address_t addr;
	const char *name;
};

} } } } } } }
#endif
