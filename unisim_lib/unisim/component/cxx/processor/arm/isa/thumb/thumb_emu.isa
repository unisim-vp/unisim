/*
 *  Copyright (c) 2007,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Daniel Gracia Perez (daniel.gracia-perez@cea.fr)
 */
 
/**********************************************

           THUMB ARM EMULATOR ISA

**********************************************/

namespace unisim::component::cxx::processor::arm::isa::thumb
set endianness big
set addressclass {uint32_t}
template <{class} {STATE}>

decl {
#include <sstream>
#include <iostream>

namespace unisim {
namespace component {
namespace cxx {
namespace processor {
namespace arm {

using std::stringstream;
using std::cerr;
using std::endl;
using std::hex;
using std::dec;

} // end of namespace arm
} // end of namespace processor
} // end of namespace cxx
} // end of namespace component
} // end of namespace unisim

} // end of decl

impl {
#include "unisim/component/cxx/processor/arm/models.hh"
#include "unisim/util/arithmetic/arithmetic.hh"
#include "unisim/component/cxx/processor/arm/masks.hh"
#include "unisim/component/cxx/processor/arm/decode_data_processing.hh"
#include "unisim/component/cxx/processor/arm/decode_load_store.hh"
#include "unisim/component/cxx/processor/arm/decode_load_store_multiple.hh"
#include "unisim/component/cxx/processor/arm/decode_misc_load_store.hh"
#include "unisim/component/cxx/processor/arm/decode_copro_load_store.hh"
#include "unisim/component/cxx/processor/arm/execute.hh"
#include "unisim/component/cxx/processor/arm/disasm.hh"
#include "unisim/component/cxx/processor/arm/exception.hh"
#include "unisim/util/arithmetic/arithmetic.hh"
#include "unisim/component/cxx/processor/arm/exception.hh"
#include "unisim/component/cxx/processor/arm/carry_overflow.hh"
#include <stdint.h>
	
using unisim::util::arithmetic::Add32;
using unisim::util::arithmetic::RotateRight;

}

include "constructors_dec.isa"
include "actions_dec.isa"

include "branch.isa"
include "data_processing.isa"
include "load_store_reg.isa"
include "load_store_multiple.isa"
include "exception_emu.isa"

include "ordering.isa"

include "profiling.isa"
