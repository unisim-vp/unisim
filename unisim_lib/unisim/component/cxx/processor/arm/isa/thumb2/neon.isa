/*
 *  Copyright (c) 2007-2014,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Daniel Gracia Perez (daniel.gracia-perez@cea.fr), Yves Lhuillier (yves.lhuillier@cea.fr)
 */
 
/**********************************************

        THUMB2 NEON INSTRUCTIONS

**********************************************/

op vaba_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_s8.disasm = {
  buffer << "vaba.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vaba_s8q.disasm = {
  buffer << "vaba.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_s16d.disasm = {
  buffer << "vaba.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vaba_s16q.disasm = {
  buffer << "vaba.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_s32d.disasm = {
  buffer << "vaba.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vaba_s32q.disasm = {
  buffer << "vaba.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_s64d.disasm = {
  buffer << "vaba.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vaba_s64q.disasm = {
  buffer << "vaba.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u8d.disasm = {
  buffer << "vaba.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u8q.disasm = {
  buffer << "vaba.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u16d.disasm = {
  buffer << "vaba.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u16q.disasm = {
  buffer << "vaba.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u32d.disasm = {
  buffer << "vaba.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u32q.disasm = {
  buffer << "vaba.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaba_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u64d.disasm = {
  buffer << "vaba.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vaba_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vaba_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaba_u64q.disasm = {
  buffer << "vaba.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabal_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_s8qd.disasm = {
  buffer << "vabal.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabal_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_s16qd.disasm = {
  buffer << "vabal.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabal_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_s32qd.disasm = {
  buffer << "vabal.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabal_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_u8qd.disasm = {
  buffer << "vabal.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabal_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_u16qd.disasm = {
  buffer << "vabal.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabal_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_u32qd.disasm = {
  buffer << "vabal.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabal_u64qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabal_u64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabal_u64qd.disasm = {
  buffer << "vabal.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabd_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_f32d.disasm = {
  buffer << "vabd.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_f32q.disasm = {
  buffer << "vabd.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_f64d.disasm = {
  buffer << "vabd.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_f64q.disasm = {
  buffer << "vabd.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_s8.disasm = {
  buffer << "vabd.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vabd_s8q.disasm = {
  buffer << "vabd.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_s16d.disasm = {
  buffer << "vabd.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vabd_s16q.disasm = {
  buffer << "vabd.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_s32d.disasm = {
  buffer << "vabd.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vabd_s32q.disasm = {
  buffer << "vabd.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_s64d.disasm = {
  buffer << "vabd.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vabd_s64q.disasm = {
  buffer << "vabd.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u8d.disasm = {
  buffer << "vabd.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u8q.disasm = {
  buffer << "vabd.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u16d.disasm = {
  buffer << "vabd.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u16q.disasm = {
  buffer << "vabd.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u32d.disasm = {
  buffer << "vabd.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u32q.disasm = {
  buffer << "vabd.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabd_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u64d.disasm = {
  buffer << "vabd.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vabd_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabd_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabd_u64q.disasm = {
  buffer << "vabd.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vabdl_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_s8qd.disasm = {
  buffer << "vabdl.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabdl_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_s16qd.disasm = {
  buffer << "vabdl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabdl_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_s32qd.disasm = {
  buffer << "vabdl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabdl_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_u8qd.disasm = {
  buffer << "vabdl.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabdl_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_u16qd.disasm = {
  buffer << "vabdl.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabdl_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_u32qd.disasm = {
  buffer << "vabdl.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabdl_u64qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabdl_u64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vabdl_u64qd.disasm = {
  buffer << "vabdl.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vabs_f8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f8d.disasm = {
  buffer << "vabs.f8\td" << sb << ", d" << sa;
};

op vabs_f8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f8q.disasm = {
  buffer << "vabs.f8\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_f16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f16d.disasm = {
  buffer << "vabs.f16\td" << sb << ", d" << sa;
};

op vabs_f16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f16q.disasm = {
  buffer << "vabs.f16\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f32d.disasm = {
  buffer << "vabs.f32\td" << sb << ", d" << sa;
};

op vabs_f32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f32q.disasm = {
  buffer << "vabs.f32\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_f64d2( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f64d2.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f64d2.disasm = {
  buffer << "vabs.f<illegal width 64>\td" << sb << ", d" << sa;
};

op vabs_f64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_f64q.disasm = {
  buffer << "vabs.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s8d.disasm = {
  buffer << "vabs.s8\td" << sb << ", d" << sa;
};

op vabs_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s8q.disasm = {
  buffer << "vabs.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s16d.disasm = {
  buffer << "vabs.s16\td" << sb << ", d" << sa;
};

op vabs_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s16q.disasm = {
  buffer << "vabs.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s32d.disasm = {
  buffer << "vabs.s32\td" << sb << ", d" << sa;
};

op vabs_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s32q.disasm = {
  buffer << "vabs.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vabs_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s64d.disasm = {
  buffer << "vabs.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vabs_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vabs_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vabs_s64q.disasm = {
  buffer << "vabs.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vacge_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacge_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacge_f32d.disasm = {
  buffer << "vacge.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vacge_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacge_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacge_f32q.disasm = {
  buffer << "vacge.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vacge_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacge_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacge_f64d.disasm = {
  buffer << "vacge.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vacge_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacge_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacge_f64q.disasm = {
  buffer << "vacge.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vacgt_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacgt_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacgt_f32d.disasm = {
  buffer << "vacgt.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vacgt_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacgt_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacgt_f32q.disasm = {
  buffer << "vacgt.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vacgt_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacgt_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacgt_f64d.disasm = {
  buffer << "vacgt.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vacgt_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vacgt_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vacgt_f64q.disasm = {
  buffer << "vacgt.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vadd_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vadd_f32d.disasm = {
  buffer << "vadd.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vadd_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vadd_f32q.disasm = {
  buffer << "vadd.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vadd_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vadd_f64d.disasm = {
  buffer << "vadd.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vadd_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vadd_f64q.disasm = {
  buffer << "vadd.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vadd_i8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vadd_i8.disasm = {
  buffer << "vadd.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vadd_i8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vadd_i8q.disasm = {
  buffer << "vadd.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vadd_i16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vadd_i16d.disasm = {
  buffer << "vadd.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vadd_i16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vadd_i16q.disasm = {
  buffer << "vadd.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vadd_i32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vadd_i32d.disasm = {
  buffer << "vadd.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vadd_i32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vadd_i32q.disasm = {
  buffer << "vadd.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vadd_i64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vadd_i64d.disasm = {
  buffer << "vadd.i64\td" << sb << ", d" << sc << ", d" << sa;
};

op vadd_i64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vadd_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vadd_i64q.disasm = {
  buffer << "vadd.i64\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaddhn_i16dq( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddhn_i16dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddhn_i16dq.disasm = {
  buffer << "vaddhn.i16\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaddhn_i32dq( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddhn_i32dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddhn_i32dq.disasm = {
  buffer << "vaddhn.i32\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaddhn_i64dq( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddhn_i64dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddhn_i64dq.disasm = {
  buffer << "vaddhn.i64\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vaddl_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_s8qd.disasm = {
  buffer << "vaddl.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddl_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_s16qd.disasm = {
  buffer << "vaddl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddl_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_s32qd.disasm = {
  buffer << "vaddl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddl_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_u8qd.disasm = {
  buffer << "vaddl.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddl_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_u16qd.disasm = {
  buffer << "vaddl.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddl_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_u32qd.disasm = {
  buffer << "vaddl.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddl_u64qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddl_u64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddl_u64qd.disasm = {
  buffer << "vaddl.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vaddw_s8( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_s8.disasm = {
  buffer << "vaddw.s8\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vaddw_s16( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_s16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_s16.disasm = {
  buffer << "vaddw.s16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vaddw_s32( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_s32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_s32.disasm = {
  buffer << "vaddw.s32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vaddw_u8( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_u8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_u8.disasm = {
  buffer << "vaddw.u8\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vaddw_u16( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_u16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_u16.disasm = {
  buffer << "vaddw.u16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vaddw_u32( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_u32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_u32.disasm = {
  buffer << "vaddw.u32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vaddw_u64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vaddw_u64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vaddw_u64.disasm = {
  buffer << "vaddw.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vand( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vand.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vand.disasm = {
  buffer << "vand\td" << sb << ", d" << sc << ", d" << sa;
};

op vand_q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vand_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vand_q.disasm = {
  buffer << "vand\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vbic_d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbic_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbic_d.disasm = {
  buffer << "vbic\td" << sb << ", d" << sc << ", d" << sa;
};

op vbic_i16di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 1[1] : 3[4] : imm0[4] );
vbic_i16di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vbic_i16di.disasm = {
  buffer << "vbic.i16\td" << sb << ", #" << imm;
};

op vbic_i16qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 1[1] : 7[4] : imm0[4] );
vbic_i16qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vbic_i16qi.disasm = {
  buffer << "vbic.i16\t" << qnames[sb] << ", #" << imm;
};

op vbic_i32di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 1[1] : 3[4] : imm0[4] );
vbic_i32di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vbic_i32di.disasm = {
  buffer << "vbic.i32\td" << sb << ", #" << imm;
};

op vbic_i32qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 1[1] : 7[4] : imm0[4] );
vbic_i32qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vbic_i32qi.disasm = {
  buffer << "vbic.i32\t" << qnames[sb] << ", #" << imm;
};

op vbic_q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbic_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vbic_q.disasm = {
  buffer << "vbic\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vbif_d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbif_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbif_d.disasm = {
  buffer << "vbif\td" << sb << ", d" << sc << ", d" << sa;
};

op vbif_q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbif_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbif_q.disasm = {
  buffer << "vbif\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vbit_d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbit_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbit_d.disasm = {
  buffer << "vbit\td" << sb << ", d" << sc << ", d" << sa;
};

op vbit_q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbit_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbit_q.disasm = {
  buffer << "vbit\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vbsl_d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbsl_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbsl_d.disasm = {
  buffer << "vbsl\td" << sb << ", d" << sc << ", d" << sa;
};

op vbsl_q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vbsl_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vbsl_q.disasm = {
  buffer << "vbsl\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_f32( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_f32.disasm = {
  buffer << "vceq.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vceq_f8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f8di0.disasm = {
  buffer << "vceq.f8\td" << sb << ", d" << sa << ", #0";
};

op vceq_f8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f8qi0.disasm = {
  buffer << "vceq.f8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_f16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f16di0.disasm = {
  buffer << "vceq.f16\td" << sb << ", d" << sa << ", #0";
};

op vceq_f16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f16qi0.disasm = {
  buffer << "vceq.f16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_f32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f32di0.disasm = {
  buffer << "vceq.f32\td" << sb << ", d" << sa << ", #0";
};

op vceq_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vceq_f32q.disasm = {
  buffer << "vceq.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_f32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f32qi0.disasm = {
  buffer << "vceq.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_f64d.disasm = {
  buffer << "vceq.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vceq_f64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f64di0.disasm = {
  buffer << "vceq.f<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vceq_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vceq_f64q.disasm = {
  buffer << "vceq.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_f64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_f64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_f64qi0.disasm = {
  buffer << "vceq.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_i8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i8d.disasm = {
  buffer << "vceq.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vceq_i8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i8di0.disasm = {
  buffer << "vceq.i8\td" << sb << ", d" << sa << ", #0";
};

op vceq_i8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i8q.disasm = {
  buffer << "vceq.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_i8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i8qi0.disasm = {
  buffer << "vceq.i8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_i16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i16d.disasm = {
  buffer << "vceq.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vceq_i16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i16di0.disasm = {
  buffer << "vceq.i16\td" << sb << ", d" << sa << ", #0";
};

op vceq_i16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i16q.disasm = {
  buffer << "vceq.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_i16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i16qi0.disasm = {
  buffer << "vceq.i16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_i32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i32d.disasm = {
  buffer << "vceq.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vceq_i32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i32di0.disasm = {
  buffer << "vceq.i32\td" << sb << ", d" << sa << ", #0";
};

op vceq_i32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i32q.disasm = {
  buffer << "vceq.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_i32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i32qi0.disasm = {
  buffer << "vceq.i32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vceq_i64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i64d.disasm = {
  buffer << "vceq.i<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vceq_i64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i64di0.disasm = {
  buffer << "vceq.i<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vceq_i64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vceq_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vceq_i64q.disasm = {
  buffer << "vceq.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vceq_i64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vceq_i64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vceq_i64qi0.disasm = {
  buffer << "vceq.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_f8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f8di0.disasm = {
  buffer << "vcge.f8\td" << sb << ", d" << sa << ", #0";
};

op vcge_f8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f8qi0.disasm = {
  buffer << "vcge.f8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_f16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f16di0.disasm = {
  buffer << "vcge.f16\td" << sb << ", d" << sa << ", #0";
};

op vcge_f16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f16qi0.disasm = {
  buffer << "vcge.f16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_f32d.disasm = {
  buffer << "vcge.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_f32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f32di0.disasm = {
  buffer << "vcge.f32\td" << sb << ", d" << sa << ", #0";
};

op vcge_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_f32q.disasm = {
  buffer << "vcge.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_f32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f32qi0.disasm = {
  buffer << "vcge.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_f64d.disasm = {
  buffer << "vcge.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_f64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f64di0.disasm = {
  buffer << "vcge.f<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vcge_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_f64q.disasm = {
  buffer << "vcge.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_f64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_f64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_f64qi0.disasm = {
  buffer << "vcge.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_s8.disasm = {
  buffer << "vcge.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_s8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s8di0.disasm = {
  buffer << "vcge.s8\td" << sb << ", d" << sa << ", #0";
};

op vcge_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcge_s8q.disasm = {
  buffer << "vcge.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_s8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s8qi0.disasm = {
  buffer << "vcge.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_s16d.disasm = {
  buffer << "vcge.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_s16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s16di0.disasm = {
  buffer << "vcge.s16\td" << sb << ", d" << sa << ", #0";
};

op vcge_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcge_s16q.disasm = {
  buffer << "vcge.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_s16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s16qi0.disasm = {
  buffer << "vcge.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_s32d.disasm = {
  buffer << "vcge.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_s32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s32di0.disasm = {
  buffer << "vcge.s32\td" << sb << ", d" << sa << ", #0";
};

op vcge_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcge_s32q.disasm = {
  buffer << "vcge.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_s32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s32qi0.disasm = {
  buffer << "vcge.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_s64d.disasm = {
  buffer << "vcge.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_s64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s64di0.disasm = {
  buffer << "vcge.s<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vcge_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcge_s64q.disasm = {
  buffer << "vcge.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_s64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcge_s64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcge_s64qi0.disasm = {
  buffer << "vcge.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcge_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u8d.disasm = {
  buffer << "vcge.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u8q.disasm = {
  buffer << "vcge.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u16d.disasm = {
  buffer << "vcge.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u16q.disasm = {
  buffer << "vcge.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u32d.disasm = {
  buffer << "vcge.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u32q.disasm = {
  buffer << "vcge.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcge_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u64d.disasm = {
  buffer << "vcge.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vcge_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcge_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcge_u64q.disasm = {
  buffer << "vcge.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_f8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f8di0.disasm = {
  buffer << "vcgt.f8\td" << sb << ", d" << sa << ", #0";
};

op vcgt_f8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f8qi0.disasm = {
  buffer << "vcgt.f8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_f16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f16di0.disasm = {
  buffer << "vcgt.f16\td" << sb << ", d" << sa << ", #0";
};

op vcgt_f16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f16qi0.disasm = {
  buffer << "vcgt.f16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_f32d.disasm = {
  buffer << "vcgt.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_f32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f32di0.disasm = {
  buffer << "vcgt.f32\td" << sb << ", d" << sa << ", #0";
};

op vcgt_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_f32q.disasm = {
  buffer << "vcgt.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_f32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f32qi0.disasm = {
  buffer << "vcgt.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_f64d.disasm = {
  buffer << "vcgt.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_f64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f64di0.disasm = {
  buffer << "vcgt.f<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vcgt_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_f64q.disasm = {
  buffer << "vcgt.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_f64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_f64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_f64qi0.disasm = {
  buffer << "vcgt.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_s8.disasm = {
  buffer << "vcgt.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_s8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s8di0.disasm = {
  buffer << "vcgt.s8\td" << sb << ", d" << sa << ", #0";
};

op vcgt_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcgt_s8q.disasm = {
  buffer << "vcgt.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_s8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s8qi0.disasm = {
  buffer << "vcgt.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_s16d.disasm = {
  buffer << "vcgt.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_s16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s16di0.disasm = {
  buffer << "vcgt.s16\td" << sb << ", d" << sa << ", #0";
};

op vcgt_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcgt_s16q.disasm = {
  buffer << "vcgt.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_s16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s16qi0.disasm = {
  buffer << "vcgt.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_s32d.disasm = {
  buffer << "vcgt.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_s32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s32di0.disasm = {
  buffer << "vcgt.s32\td" << sb << ", d" << sa << ", #0";
};

op vcgt_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcgt_s32q.disasm = {
  buffer << "vcgt.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_s32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s32qi0.disasm = {
  buffer << "vcgt.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_s64d.disasm = {
  buffer << "vcgt.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_s64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s64di0.disasm = {
  buffer << "vcgt.s<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vcgt_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vcgt_s64q.disasm = {
  buffer << "vcgt.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_s64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_s64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcgt_s64qi0.disasm = {
  buffer << "vcgt.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcgt_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u8d.disasm = {
  buffer << "vcgt.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u8q.disasm = {
  buffer << "vcgt.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u16d.disasm = {
  buffer << "vcgt.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u16q.disasm = {
  buffer << "vcgt.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u32d.disasm = {
  buffer << "vcgt.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u32q.disasm = {
  buffer << "vcgt.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcgt_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u64d.disasm = {
  buffer << "vcgt.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vcgt_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcgt_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vcgt_u64q.disasm = {
  buffer << "vcgt.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vcle_f8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f8di0.disasm = {
  buffer << "vcle.f8\td" << sb << ", d" << sa << ", #0";
};

op vcle_f8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f8qi0.disasm = {
  buffer << "vcle.f8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_f16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f16di0.disasm = {
  buffer << "vcle.f16\td" << sb << ", d" << sa << ", #0";
};

op vcle_f16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f16qi0.disasm = {
  buffer << "vcle.f16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_f32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f32di0.disasm = {
  buffer << "vcle.f32\td" << sb << ", d" << sa << ", #0";
};

op vcle_f32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f32qi0.disasm = {
  buffer << "vcle.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_f64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f64di0.disasm = {
  buffer << "vcle.f<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vcle_f64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_f64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_f64qi0.disasm = {
  buffer << "vcle.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_s8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s8di0.disasm = {
  buffer << "vcle.s8\td" << sb << ", d" << sa << ", #0";
};

op vcle_s8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s8qi0.disasm = {
  buffer << "vcle.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_s16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s16di0.disasm = {
  buffer << "vcle.s16\td" << sb << ", d" << sa << ", #0";
};

op vcle_s16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s16qi0.disasm = {
  buffer << "vcle.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_s32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s32di0.disasm = {
  buffer << "vcle.s32\td" << sb << ", d" << sa << ", #0";
};

op vcle_s32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s32qi0.disasm = {
  buffer << "vcle.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcle_s64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s64di0.disasm = {
  buffer << "vcle.s<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vcle_s64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcle_s64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcle_s64qi0.disasm = {
  buffer << "vcle.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vcls_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s8d.disasm = {
  buffer << "vcls.s8\td" << sb << ", d" << sa;
};

op vcls_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s8q.disasm = {
  buffer << "vcls.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vcls_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s16d.disasm = {
  buffer << "vcls.s16\td" << sb << ", d" << sa;
};

op vcls_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s16q.disasm = {
  buffer << "vcls.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vcls_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s32d.disasm = {
  buffer << "vcls.s32\td" << sb << ", d" << sa;
};

op vcls_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s32q.disasm = {
  buffer << "vcls.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vcls_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s64d.disasm = {
  buffer << "vcls.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vcls_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcls_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcls_s64q.disasm = {
  buffer << "vcls.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vclt_f8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f8di0.disasm = {
  buffer << "vclt.f8\td" << sb << ", d" << sa << ", #0";
};

op vclt_f8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f8qi0.disasm = {
  buffer << "vclt.f8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_f16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f16di0.disasm = {
  buffer << "vclt.f16\td" << sb << ", d" << sa << ", #0";
};

op vclt_f16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f16qi0.disasm = {
  buffer << "vclt.f16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_f32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f32di0.disasm = {
  buffer << "vclt.f32\td" << sb << ", d" << sa << ", #0";
};

op vclt_f32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f32qi0.disasm = {
  buffer << "vclt.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_f64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f64di0.disasm = {
  buffer << "vclt.f<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vclt_f64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_f64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_f64qi0.disasm = {
  buffer << "vclt.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_s8di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s8di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s8di0.disasm = {
  buffer << "vclt.s8\td" << sb << ", d" << sa << ", #0";
};

op vclt_s8qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s8qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s8qi0.disasm = {
  buffer << "vclt.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_s16di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s16di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s16di0.disasm = {
  buffer << "vclt.s16\td" << sb << ", d" << sa << ", #0";
};

op vclt_s16qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s16qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s16qi0.disasm = {
  buffer << "vclt.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_s32di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s32di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s32di0.disasm = {
  buffer << "vclt.s32\td" << sb << ", d" << sa << ", #0";
};

op vclt_s32qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s32qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s32qi0.disasm = {
  buffer << "vclt.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclt_s64di0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s64di0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s64di0.disasm = {
  buffer << "vclt.s<illegal width 64>\td" << sb << ", d" << sa << ", #0";
};

op vclt_s64qi0( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclt_s64qi0.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclt_s64qi0.disasm = {
  buffer << "vclt.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa] << ", #0";
};

op vclz_i8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i8d.disasm = {
  buffer << "vclz.i8\td" << sb << ", d" << sa;
};

op vclz_i8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i8q.disasm = {
  buffer << "vclz.i8\t" << qnames[sb] << ", " << qnames[sa];
};

op vclz_i16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i16d.disasm = {
  buffer << "vclz.i16\td" << sb << ", d" << sa;
};

op vclz_i16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i16q.disasm = {
  buffer << "vclz.i16\t" << qnames[sb] << ", " << qnames[sa];
};

op vclz_i32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i32d.disasm = {
  buffer << "vclz.i32\td" << sb << ", d" << sa;
};

op vclz_i32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i32q.disasm = {
  buffer << "vclz.i32\t" << qnames[sb] << ", " << qnames[sa];
};

op vclz_i64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i64d.disasm = {
  buffer << "vclz.i<illegal width 64>\td" << sb << ", d" << sa;
};

op vclz_i64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vclz_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vclz_i64q.disasm = {
  buffer << "vclz.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcnt_8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcnt_8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcnt_8d.disasm = {
  buffer << "vcnt.8\td" << sb << ", d" << sa;
};

op vcnt_8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcnt_8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcnt_8q.disasm = {
  buffer << "vcnt.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f8_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f8_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f8_s8d.disasm = {
  buffer << "vcvt.f<illegal width 8>.s<illegal width 8>\td" << sb << ", d" << sa;
};

op vcvt_f8_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f8_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f8_s8q.disasm = {
  buffer << "vcvt.f<illegal width 8>.s<illegal width 8>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f8_u8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f8_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f8_u8d.disasm = {
  buffer << "vcvt.f<illegal width 8>.u<illegal width 8>\td" << sb << ", d" << sa;
};

op vcvt_f8_u8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f8_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f8_u8q.disasm = {
  buffer << "vcvt.f<illegal width 8>.u<illegal width 8>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f16_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f16_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f16_s16d.disasm = {
  buffer << "vcvt.f<illegal width 16>.s<illegal width 16>\td" << sb << ", d" << sa;
};

op vcvt_f16_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f16_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f16_s16q.disasm = {
  buffer << "vcvt.f<illegal width 16>.s<illegal width 16>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f16_u16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f16_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f16_u16d.disasm = {
  buffer << "vcvt.f<illegal width 16>.u<illegal width 16>\td" << sb << ", d" << sa;
};

op vcvt_f16_u16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f16_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f16_u16q.disasm = {
  buffer << "vcvt.f<illegal width 16>.u<illegal width 16>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f16f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f16f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f16f32d.disasm = {
  buffer << "vcvt.f16.f32\td" << sb << ", " << qnames[sa];
};

op vcvt_f32_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f32_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f32_s32d.disasm = {
  buffer << "vcvt.f32.s32\td" << sb << ", d" << sa;
};

op vcvt_f32_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f32_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f32_s32q.disasm = {
  buffer << "vcvt.f32.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f32f16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f32f16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f32f16d.disasm = {
  buffer << "vcvt.f32.f16\t" << qnames[sb] << ", d" << sa;
};

op vcvt_f32s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xe[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_f32s32di.var imm : {int32_t} = {32-imm_}, sb : {uint32_t} = {sb1|sb0}, sa : {uint32_t} = {sa1|sa0};

vcvt_f32s32di.disasm = {
  buffer << "vcvt.f32.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vcvt_f32s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xe[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_f32s32qi.var imm : {int32_t} = {32-imm_}, sb : {uint32_t} = {sb1|sb0}, sa : {uint32_t} = {sa1|sa0};

vcvt_f32s32qi.disasm = {
  buffer << "vcvt.f32.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vcvt_f32u32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f32u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f32u32d.disasm = {
  buffer << "vcvt.f32.u32\td" << sb << ", d" << sa;
};

op vcvt_f32u32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xe[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_f32u32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vcvt_f32u32di.disasm = {
  buffer << "vcvt.f32.u32\td" << sb << ", d" << sa << ", #" << imm;
};

op vcvt_f32u32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f32u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f32u32q.disasm = {
  buffer << "vcvt.f32.u32\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f32u32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xe[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_f32u32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vcvt_f32u32qi.disasm = {
  buffer << "vcvt.f32.u32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vcvt_f64_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f64_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f64_s64d.disasm = {
  buffer << "vcvt.f<illegal width 64>.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vcvt_f64_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f64_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f64_s64q.disasm = {
  buffer << "vcvt.f<illegal width 64>.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_f64_u64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f64_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f64_u64d.disasm = {
  buffer << "vcvt.f<illegal width 64>.u<illegal width 64>\td" << sb << ", d" << sa;
};

op vcvt_f64_u64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_f64_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_f64_u64q.disasm = {
  buffer << "vcvt.f<illegal width 64>.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_s8_f8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s8_f8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s8_f8d.disasm = {
  buffer << "vcvt.s<illegal width 8>.f<illegal width 8>\td" << sb << ", d" << sa;
};

op vcvt_s8_f8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s8_f8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s8_f8q.disasm = {
  buffer << "vcvt.s<illegal width 8>.f<illegal width 8>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_s16_f16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s16_f16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s16_f16d.disasm = {
  buffer << "vcvt.s<illegal width 16>.f<illegal width 16>\td" << sb << ", d" << sa;
};

op vcvt_s16_f16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s16_f16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s16_f16q.disasm = {
  buffer << "vcvt.s<illegal width 16>.f<illegal width 16>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_s32_f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s32_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s32_f32d.disasm = {
  buffer << "vcvt.s32.f32\td" << sb << ", d" << sa;
};

op vcvt_s32_f32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s32_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s32_f32q.disasm = {
  buffer << "vcvt.s32.f32\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_s32f32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xf[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_s32f32di.var imm : {int32_t} = {32-imm_}, sb : {uint32_t} = {sb1|sb0}, sa : {uint32_t} = {sa1|sa0};

vcvt_s32f32di.disasm = {
  buffer << "vcvt.s32.f32\td" << sb << ", d" << sa << ", #" << imm;
};

op vcvt_s32f32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xf[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_s32f32qi.var imm : {int32_t} = {32-imm_}, sb : {uint32_t} = {sb1|sb0}, sa : {uint32_t} = {sa1|sa0};

vcvt_s32f32qi.disasm = {
  buffer << "vcvt.s32.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vcvt_s64_f64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s64_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s64_f64d.disasm = {
  buffer << "vcvt.s<illegal width 64>.f<illegal width 64>\td" << sb << ", d" << sa;
};

op vcvt_s64_f64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_s64_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_s64_f64q.disasm = {
  buffer << "vcvt.s<illegal width 64>.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_u8_f8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u8_f8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u8_f8d.disasm = {
  buffer << "vcvt.u<illegal width 8>.f<illegal width 8>\td" << sb << ", d" << sa;
};

op vcvt_u8_f8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x3[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u8_f8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u8_f8q.disasm = {
  buffer << "vcvt.u<illegal width 8>.f<illegal width 8>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_u16_f16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u16_f16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u16_f16d.disasm = {
  buffer << "vcvt.u<illegal width 16>.f<illegal width 16>\td" << sb << ", d" << sa;
};

op vcvt_u16_f16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x7[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u16_f16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u16_f16q.disasm = {
  buffer << "vcvt.u<illegal width 16>.f<illegal width 16>\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_u32f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u32f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u32f32d.disasm = {
  buffer << "vcvt.u32.f32\td" << sb << ", d" << sa;
};

op vcvt_u32f32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xf[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_u32f32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vcvt_u32f32di.disasm = {
  buffer << "vcvt.u32.f32\td" << sb << ", d" << sa << ", #" << imm;
};

op vcvt_u32f32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u32f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u32f32q.disasm = {
  buffer << "vcvt.u32.f32\t" << qnames[sb] << ", " << qnames[sa];
};

op vcvt_u32f32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xf[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vcvt_u32f32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vcvt_u32f32qi.disasm = {
  buffer << "vcvt.u32.f32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vcvt_u64_f64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u64_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u64_f64d.disasm = {
  buffer << "vcvt.u<illegal width 64>.f<illegal width 64>\td" << sb << ", d" << sa;
};

op vcvt_u64_f64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xf[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vcvt_u64_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vcvt_u64_f64q.disasm = {
  buffer << "vcvt.u<illegal width 64>.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vdup_8dp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : part[3] : 1[1] :> <: sb0[4] : 0xc[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vdup_8dp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vdup_8dp.disasm = {
  buffer << "vdup.8\td" << sb << ", d" << sa << "[" << part << "]";
};

op vdup_8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : part[3] : 1[1] :> <: sb0[4] : 0xc[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vdup_8qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vdup_8qdp.disasm = {
  buffer << "vdup.8\t" << qnames[sb] << ", d" << sa << "[" << part << "]";
};

op vdup_16dp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : part[2] : 2[2] :> <: sb0[4] : 0xc[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vdup_16dp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vdup_16dp.disasm = {
  buffer << "vdup.16\td" << sb << ", d" << sa << "[" << part << "]";
};

op vdup_16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : part[2] : 2[2] :> <: sb0[4] : 0xc[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vdup_16qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vdup_16qdp.disasm = {
  buffer << "vdup.16\t" << qnames[sb] << ", d" << sa << "[" << part << "]";
};

op vdup_32dp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : part[1] : 4[3] :> <: sb0[4] : 0xc[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vdup_32dp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vdup_32dp.disasm = {
  buffer << "vdup.32\td" << sb << ", d" << sa << "[" << part << "]";
};

op vdup_32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : part[1] : 4[3] :> <: sb0[4] : 0xc[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vdup_32qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vdup_32qdp.disasm = {
  buffer << "vdup.32\t" << qnames[sb] << ", d" << sa << "[" << part << "]";
};

op veor_d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
veor_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

veor_d.disasm = {
  buffer << "veor\td" << sb << ", d" << sc << ", d" << sa;
};

op veor_q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
veor_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

veor_q.disasm = {
  buffer << "veor\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vext_8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0[1] : imm[3] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vext_8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vext_8di.disasm = {
  buffer << "vext.8\td" << sb << ", d" << sc << ", d" << sa << ", #" << imm;
};

op vext_8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : imm[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vext_8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vext_8qi.disasm = {
  buffer << "vext.8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa] << ", #" << imm;
};

op vfma_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfma_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vfma_f32d.disasm = {
  buffer << "vfma.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vfma_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfma_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vfma_f32q.disasm = {
  buffer << "vfma.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vfma_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfma_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vfma_f64d.disasm = {
  buffer << "vfma.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vfma_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfma_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vfma_f64q.disasm = {
  buffer << "vfma.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vfms_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfms_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vfms_f32d.disasm = {
  buffer << "vfms.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vfms_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfms_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vfms_f32q.disasm = {
  buffer << "vfms.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vfms_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfms_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vfms_f64d.disasm = {
  buffer << "vfms.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vfms_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vfms_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vfms_f64q.disasm = {
  buffer << "vfms.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_s8.disasm = {
  buffer << "vhadd.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_s8q.disasm = {
  buffer << "vhadd.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_s16d.disasm = {
  buffer << "vhadd.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhadd_s16q.disasm = {
  buffer << "vhadd.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_s32d.disasm = {
  buffer << "vhadd.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhadd_s32q.disasm = {
  buffer << "vhadd.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_s64d.disasm = {
  buffer << "vhadd.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhadd_s64q.disasm = {
  buffer << "vhadd.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u8d.disasm = {
  buffer << "vhadd.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u8q.disasm = {
  buffer << "vhadd.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u16d.disasm = {
  buffer << "vhadd.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u16q.disasm = {
  buffer << "vhadd.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u32d.disasm = {
  buffer << "vhadd.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u32q.disasm = {
  buffer << "vhadd.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhadd_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u64d.disasm = {
  buffer << "vhadd.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vhadd_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhadd_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhadd_u64q.disasm = {
  buffer << "vhadd.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhsub_s8.disasm = {
  buffer << "vhsub.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhsub_s8q.disasm = {
  buffer << "vhsub.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_s16d.disasm = {
  buffer << "vhsub.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhsub_s16q.disasm = {
  buffer << "vhsub.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_s32d.disasm = {
  buffer << "vhsub.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhsub_s32q.disasm = {
  buffer << "vhsub.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_s64d.disasm = {
  buffer << "vhsub.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vhsub_s64q.disasm = {
  buffer << "vhsub.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u8d.disasm = {
  buffer << "vhsub.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u8q.disasm = {
  buffer << "vhsub.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u16d.disasm = {
  buffer << "vhsub.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u16q.disasm = {
  buffer << "vhsub.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u32d.disasm = {
  buffer << "vhsub.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u32q.disasm = {
  buffer << "vhsub.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vhsub_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u64d.disasm = {
  buffer << "vhsub.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vhsub_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vhsub_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vhsub_u64q.disasm = {
  buffer << "vhsub.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vldmdb_mod( 0xed[8] : 0[1] : sbase0[1] : 3[2] : r0[4] :> <: shl<1> sbase1[4] : 0xa[4] : soff[8] );
vldmdb_mod.var sbase : {uint32_t} = {sbase1|sbase0};

vldmdb_mod.disasm = {
  buffer << "vldmdb\t" << DisasmRegister(r0) << "!, ";
  int32_t send = ((int32_t)(sbase + soff))-1;
  if (soff == 1) buffer << "{s" << sbase << "}";
  else           buffer << "{s" << sbase << "-s" << send << "}";
};

op vldmdb_mod1( 0xed[8] : 0[1] : shl<4> dbase1[1] : 3[2] : r0[4] :> <: dbase0[4] : 0xb[4] : ?[1] : doff[6] : 0[1] );
vldmdb_mod1.var dbase : {uint32_t} = {dbase1|dbase0};

vldmdb_mod1.disasm = {
  buffer << "vldmdb\t" << DisasmRegister(r0) << "!, ";
  int32_t dend = ((int32_t)(dbase + doff))-1;
  if (doff == 1)      buffer << "{d" << dbase << "}";
  else if (dend < 32) buffer << "{d" << dbase << "-d" << dend << "}";
  else                buffer << "{d" << dbase << "-<overflow reg d" << dend << ">}";
};

op vldmia( 0xec[8] : 1[1] : sbase0[1] : 1[2] : r0[4] :> <: shl<1> sbase1[4] : 0xa[4] : soff[8] );
vldmia.var sbase : {uint32_t} = {sbase1|sbase0};

vldmia.disasm = {
  int32_t send = ((int32_t)(sbase + soff))-1;
  if (soff == 1) buffer << "vldmia\t" << DisasmRegister(r0) << ", {s" << sbase << "}";
  else           buffer << "vldmia\t" << DisasmRegister(r0) << ", {s" << sbase << "-s" << send << "}";
};

op vldmia_1( 0xec[8] : 1[1] : shl<4> dbase1[1] : 1[2] : r0[4] :> <: dbase0[4] : 0xb[4] : ?[1] : doff[6] : 0[1] );
vldmia_1.var dbase : {uint32_t} = {dbase1|dbase0};

vldmia_1.disasm = {
  int32_t dend = ((int32_t)(dbase + doff))-1;
  if (doff == 1)      buffer << "vldmia\t" << DisasmRegister(r0) << ", {d" << dbase << "}";
  else if (dend < 32) buffer << "vldmia\t" << DisasmRegister(r0) << ", {d" << dbase << "-d" << dend << "}";
  else                buffer << "vldmia\t" << DisasmRegister(r0) << ", {d" << dbase << "-<overflow reg d" << dend << ">}";
};

op vldmia_mod( 0xec[8] : 1[1] : sbase0[1] : 3[2] : r0[4] :> <: shl<1> sbase1[4] : 0xa[4] : soff[8] );
vldmia_mod.var sbase : {uint32_t} = {sbase1|sbase0};

vldmia_mod.disasm = {
  if (r0 == 13) buffer << "vpop\t";
  else          buffer << "vldmia\t" << DisasmRegister(r0) << "!, ";
  int32_t send = ((int32_t)(sbase + soff))-1;
  if (soff == 1) buffer << "{s" << sbase << "}";
  else           buffer << "{s" << sbase << "-s" << send << "}";
};

op vldmia_mod1( 0xec[8] : 1[1] : shl<4> dbase1[1] : 3[2] : r0[4] :> <: dbase0[4] : 0xb[4] : ?[1] : doff[6] : 0[1] );
vldmia_mod1.var dbase : {uint32_t} = {dbase1|dbase0};

vldmia_mod1.disasm = {
  if (r0 == 13) buffer << "vpop\t";
  else          buffer << "vldmia\t" << DisasmRegister(r0) << "!, ";
  int32_t dend = ((int32_t)(dbase + doff))-1;
  if (doff == 1)      buffer << "{d" << dbase << "}";
  else if (dend < 32) buffer << "{d" << dbase << "-d" << dend << "}";
  else                buffer << "{d" << dbase << "-<overflow reg d" << dend << ">}";
};


op vldr( 0xed[8] : pos[1] : sc0[1] : 1[2] : r0[4] :> <: shl<1> sc1[4] : 0xa[4] : shl<2> imm[8] );
vldr.var sc : {uint32_t} = {sc1|sc0};

vldr.disasm = {
  if (pos and not imm) buffer << "vldr\ts" << sc << ", [" << DisasmRegister(r0) << "]";
  else                 buffer << "vldr\ts" << sc << ", [" << DisasmRegister(r0) << ", #" << (pos?"":"-") << imm << "]";
};

op vldr_d( 0xed[8] : pos[1] : shl<4> sc1[1] : 1[2] : r0[4] :> <: sc0[4] : 0xb[4] : shl<2> imm[8] );
vldr_d.var sc : {uint32_t} = {sc1|sc0};

vldr_d.disasm = {
  if (pos and not imm) buffer << "vldr\td" << sc << ", [" << DisasmRegister(r0) << "]";
  else                 buffer << "vldr\td" << sc << ", [" << DisasmRegister(r0) << ", #" << (pos?"":"-") << imm << "]";
}

op vld1_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x8[6] : len[2] : ra[4] );
vld1_8.var sa : {uint32_t} = {sa1|sa0};

vld1_8.disasm = {
  buffer << "vld1.8\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x9[6] : len[2] : ra[4] );
vld1_16.var sa : {uint32_t} = {sa1|sa0};

vld1_16.disasm = {
  buffer << "vld1.16\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xa[6] : len[2] : ra[4] );
vld1_32.var sa : {uint32_t} = {sa1|sa0};

vld1_32.disasm = {
  buffer << "vld1.32\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xb[6] : len[2] : ra[4] );
vld1_64.var sa : {uint32_t} = {sa1|sa0};

vld1_64.disasm = {
  buffer << "vld1.64\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_bep( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xc[4] : w[2] : 0[1]: aln[1] : ra[4] );
vld1_bep.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld1_bep.disasm = {
  if (width != 64)     buffer << "vld1." << width << "\t";
  else                 buffer << "vld1.<illegal width 64>\t";
  buffer << "{d" << sa << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else if (width != 8) buffer << "[" << DisasmRegister(rb) << " :" << width << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :<bad align 8>]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld1_bep2( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xc[4] : w[2] : 1[1]: aln[1] : ra[4] );
vld1_bep2.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld1_bep2.disasm = {
  if (width != 64)     buffer << "vld1." << width << "\t";
  else                 buffer << "vld1.<illegal width 64>\t";
  buffer << "{d" << sa << "[]-d" << (sa+1) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else if (width != 8) buffer << "[" << DisasmRegister(rb) << " :" << width << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :<bad align 8>]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld1_8_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1c[6] : len[2] : ra[4] );
vld1_8_s2t.var sa : {uint32_t} = {sa1|sa0};

vld1_8_s2t.disasm = {
  buffer << "vld1.8\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x0[4] : part[3] : x[1] : ra[4] );
vld1_8bp.var sa : {uint32_t} = {sa1|sa0};

vld1_8bp.disasm = {
  buffer << "vld1.8\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_8d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x28[6] : len[2] : ra[4] );
vld1_8d.var sa : {uint32_t} = {sa1|sa0};

vld1_8d.disasm = {
  buffer << "vld1.8\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_8t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x18[6] : len[2] : ra[4] );
vld1_8t.var sa : {uint32_t} = {sa1|sa0};

vld1_8t.disasm = {
  buffer << "vld1.8\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_16_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1d[6] : len[2] : ra[4] );
vld1_16_s2t.var sa : {uint32_t} = {sa1|sa0};

vld1_16_s2t.disasm = {
  buffer << "vld1.16\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x4[4] : part[2] : y[1] : x[1] : ra[4] );
vld1_16bp.var sa : {uint32_t} = {sa1|sa0};

vld1_16bp.disasm = {
  buffer << "vld1.16\t";
  if (y) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :16":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld1_16d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x29[6] : len[2] : ra[4] );
vld1_16d.var sa : {uint32_t} = {sa1|sa0};

vld1_16d.disasm = {
  buffer << "vld1.16\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_16t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x19[6] : len[2] : ra[4] );
vld1_16t.var sa : {uint32_t} = {sa1|sa0};

vld1_16t.disasm = {
  buffer << "vld1.16\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_32_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1e[6] : len[2] : ra[4] );
vld1_32_s2t.var sa : {uint32_t} = {sa1|sa0};

vld1_32_s2t.disasm = {
  buffer << "vld1.32\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x8[4] : part[1] : len[3] : ra[4] );
vld1_32bp.var sa : {uint32_t} = {sa1|sa0};

vld1_32bp.disasm = {
  buffer << "vld1.32\t";
  char const* sc = (len==0)?"":(len==3)?" :32":0;
  if (not sc) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "]}, [" << DisasmRegister(rb) << sc << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld1_32d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x2a[6] : len[2] : ra[4] );
vld1_32d.var sa : {uint32_t} = {sa1|sa0};

vld1_32d.disasm = {
  buffer << "vld1.32\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_32t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1a[6] : len[2] : ra[4] );
vld1_32t.var sa : {uint32_t} = {sa1|sa0};

vld1_32t.disasm = {
  buffer << "vld1.32\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_64_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1f[6] : len[2] : ra[4] );
vld1_64_s2t.var sa : {uint32_t} = {sa1|sa0};

vld1_64_s2t.disasm = {
  buffer << "vld1.64\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_64d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x2b[6] : len[2] : ra[4] );
vld1_64d.var sa : {uint32_t} = {sa1|sa0};

vld1_64d.disasm = {
  buffer << "vld1.64\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld1_64t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1b[6] : len[2] : ra[4] );
vld1_64t.var sa : {uint32_t} = {sa1|sa0};

vld1_64t.disasm = {
  buffer << "vld1.64\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xc[6] : len[2] : ra[4] );
vld2_8.var sa : {uint32_t} = {sa1|sa0};

vld2_8.disasm = {
  buffer << "vld2.8\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xd[6] : len[2] : ra[4] );
vld2_16.var sa : {uint32_t} = {sa1|sa0};

vld2_16.disasm = {
  buffer << "vld2.16\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xe[6] : len[2] : ra[4] );
vld2_32.var sa : {uint32_t} = {sa1|sa0};

vld2_32.disasm = {
  buffer << "vld2.32\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xf[6] : len[2] : ra[4] );
vld2_64.var sa : {uint32_t} = {sa1|sa0};

vld2_64.disasm = {
  buffer << "vld2.<illegal width 64>\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_bep( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xd[4] : w[2] : 0[1]: aln[1] : ra[4] );
vld2_bep.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld2_bep.disasm = {
  if (width != 64)     buffer << "vld2." << width << "\t";
  else                 buffer << "vld2.<illegal width 64>\t";
  buffer << "{d" << sa << "[]-d" << (sa+1) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :" << (width * 2) << "]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld2_bep2( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xd[4] : w[2] : 1[1]: aln[1] : ra[4] );
vld2_bep2.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld2_bep2.disasm = {
  if (width != 64)     buffer << "vld2." << width << "\t";
  else                 buffer << "vld2.<illegal width 64>\t";
  buffer << "{d" << sa << "[],d" << (sa+2) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :" << (width * 2) << "]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld2_8_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x24[6] : len[2] : ra[4] );
vld2_8_s2d.var sa : {uint32_t} = {sa1|sa0};

vld2_8_s2d.disasm = {
  buffer << "vld2.8\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1[4] : part[3] : x[1] : ra[4] );
vld2_8bp.var sa : {uint32_t} = {sa1|sa0};

vld2_8bp.disasm = {
  buffer << "vld2.8\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :16":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_8d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x20[6] : len[2] : ra[4] );
vld2_8d.var sa : {uint32_t} = {sa1|sa0};

vld2_8d.disasm = {
  buffer << "vld2.8\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_16_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x25[6] : len[2] : ra[4] );
vld2_16_s2d.var sa : {uint32_t} = {sa1|sa0};

vld2_16_s2d.disasm = {
  buffer << "vld2.16\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x5[4] : part[2] : y[1] : x[1] : ra[4] );
vld2_16bp.var sa : {uint32_t} = {sa1|sa0};

vld2_16bp.disasm = {
  buffer << "vld2.16\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1+y) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :32":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld2_16d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x21[6] : len[2] : ra[4] );
vld2_16d.var sa : {uint32_t} = {sa1|sa0};

vld2_16d.disasm = {
  buffer << "vld2.16\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_32_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x26[6] : len[2] : ra[4] );
vld2_32_s2d.var sa : {uint32_t} = {sa1|sa0};

vld2_32_s2d.disasm = {
  buffer << "vld2.32\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x9[4] : part[1] : z[1] : y[1] : x[1] : ra[4] );
vld2_32bp.var sa : {uint32_t} = {sa1|sa0};

vld2_32bp.disasm = {
  buffer << "vld2.32\t";
  if (y) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1+z) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :64":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld2_32d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x22[6] : len[2] : ra[4] );
vld2_32d.var sa : {uint32_t} = {sa1|sa0};

vld2_32d.disasm = {
  buffer << "vld2.32\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld2_64_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x27[6] : len[2] : ra[4] );
vld2_64_s2d.var sa : {uint32_t} = {sa1|sa0};

vld2_64_s2d.disasm = {
  buffer << "vld2.<illegal width 64>\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld2_64d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x23[6] : len[2] : ra[4] );
vld2_64d.var sa : {uint32_t} = {sa1|sa0};

vld2_64d.disasm = {
  buffer << "vld2.<illegal width 64>\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x10[6] : len[2] : ra[4] );
vld3_8.var sa : {uint32_t} = {sa1|sa0};

vld3_8.disasm = {
  buffer << "vld3.8\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x11[6] : len[2] : ra[4] );
vld3_16.var sa : {uint32_t} = {sa1|sa0};

vld3_16.disasm = {
  buffer << "vld3.16\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x12[6] : len[2] : ra[4] );
vld3_32.var sa : {uint32_t} = {sa1|sa0};

vld3_32.disasm = {
  buffer << "vld3.32\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x13[6] : len[2] : ra[4] );
vld3_64.var sa : {uint32_t} = {sa1|sa0};

vld3_64.disasm = {
  buffer << "vld3.<illegal width 64>\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_bep( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xe[4] : w[2] : 0[1]: aln[1] : ra[4] );
vld3_bep.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld3_bep.disasm = {
  if (width != 64)     buffer << "vld3." << width << "\t";
  else                 buffer << "vld3.<illegal width 64>\t";
  buffer << "{d" << sa << "[]-d" << (sa+2) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :<bad align " << (width * 3) << ">]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld3_bep2( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xe[4] : w[2] : 1[1]: aln[1] : ra[4] );
vld3_bep2.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld3_bep2.disasm = {
  if (width != 64)     buffer << "vld3." << width << "\t";
  else                 buffer << "vld3.<illegal width 64>\t";
  buffer << "{d" << sa << "[],d" << (sa+2) << "[],d" << (sa+4) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :<bad align " << (width * 3) << ">]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld3_8_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x14[6] : len[2] : ra[4] );
vld3_8_s2.var sa : {uint32_t} = {sa1|sa0};

vld3_8_s2.disasm = {
  buffer << "vld3.8\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x2[4] : part[3] : x[1] : ra[4] );
vld3_8bp.var sa : {uint32_t} = {sa1|sa0};

vld3_8bp.disasm = {
  buffer << "vld3.8\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1) << "[" << part << "],d" << (sa+2) << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_16_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x15[6] : len[2] : ra[4] );
vld3_16_s2.var sa : {uint32_t} = {sa1|sa0};

vld3_16_s2.disasm = {
  buffer << "vld3.16\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x6[4] : part[2] : y[1] : x[1] : ra[4] );
vld3_16bp.var sa : {uint32_t} = {sa1|sa0};

vld3_16bp.disasm = {
  buffer << "vld3.16\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld3_32_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x16[6] : len[2] : ra[4] );
vld3_32_s2.var sa : {uint32_t} = {sa1|sa0};

vld3_32_s2.disasm = {
  buffer << "vld3.32\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld3_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xa[4] : part[1] : y[1] : x[2] : ra[4] );
vld3_32bp.var sa : {uint32_t} = {sa1|sa0};

vld3_32bp.disasm = {
  buffer << "vld3.32\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld3_64_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x17[6] : len[2] : ra[4] );
vld3_64_s2.var sa : {uint32_t} = {sa1|sa0};

vld3_64_s2.disasm = {
  buffer << "vld3.<illegal width 64>\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x0[6] : len[2] : ra[4] );
vld4_8.var sa : {uint32_t} = {sa1|sa0};

vld4_8.disasm = {
  buffer << "vld4.8\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x1[6] : len[2] : ra[4] );
vld4_16.var sa : {uint32_t} = {sa1|sa0};

vld4_16.disasm = {
  buffer << "vld4.16\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x2[6] : len[2] : ra[4] );
vld4_32.var sa : {uint32_t} = {sa1|sa0};

vld4_32.disasm = {
  buffer << "vld4.32\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x3[6] : len[2] : ra[4] );
vld4_64.var sa : {uint32_t} = {sa1|sa0};

vld4_64.disasm = {
  buffer << "vld4.<illegal width 64>\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_bep( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xf[4] : w[2] : 0[1]: aln[1] : ra[4] );
vld4_bep.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld4_bep.disasm = {
  if (width != 64)     buffer << "vld4." << width << "\t";
  else                 buffer << "vld4.32\t";
  buffer << "{d" << sa << "[]-d" << (sa+3) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else if (width < 32) buffer << "[" << DisasmRegister(rb) << " :" << (width * 4) << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :" << (width * 2) << "]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};

op vld4_bep2( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xf[4] : w[2] : 1[1]: aln[1] : ra[4] );
vld4_bep2.var sa : {uint32_t} = {sa1|sa0}, width : {uint32_t} = {8<<w};

vld4_bep2.disasm = {
  if (width != 64)     buffer << "vld4." << width << "\t";
  else                 buffer << "vld4.32\t";
  buffer << "{d" << sa << "[],d" << (sa+2) << "[],d" << (sa+4) << "[],d" << (sa+6) << "[]}, ";
  if (not aln)         buffer << "[" << DisasmRegister(rb) << "]";
  else if (width < 32) buffer << "[" << DisasmRegister(rb) << " :" << (width * 4) << "]";
  else                 buffer << "[" << DisasmRegister(rb) << " :" << (width * 2) << "]";
  if      (ra == 13)   buffer << "!";
  else if (ra != 15)   buffer << ", " << DisasmRegister(ra);
};


op vld4_8_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x4[6] : len[2] : ra[4] );
vld4_8_s2.var sa : {uint32_t} = {sa1|sa0};

vld4_8_s2.disasm = {
  buffer << "vld4.8\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x3[4] : part[3] : x[1] : ra[4] );
vld4_8bp.var sa : {uint32_t} = {sa1|sa0};

vld4_8bp.disasm = {
  buffer << "vld4.8\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1) << "[" << part << "],d" << (sa+2) << "[" << part << "],d" << (sa+3) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :32":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld4_16_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x5[6] : len[2] : ra[4] );
vld4_16_s2.var sa : {uint32_t} = {sa1|sa0};

vld4_16_s2.disasm = {
  buffer << "vld4.16\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x7[4] : part[2] : y[1] : x[1] : ra[4] );
vld4_16bp.var sa : {uint32_t} = {sa1|sa0};

vld4_16bp.disasm = {
  buffer << "vld4.16\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "],d" << (sa+3*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :64":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld4_32_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x6[6] : len[2] : ra[4] );
vld4_32_s2.var sa : {uint32_t} = {sa1|sa0};

vld4_32_s2.disasm = {
  buffer << "vld4.32\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vld4_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0xb[4] : part[1] : y[1] : x[2] : ra[4] );
vld4_32bp.var sa : {uint32_t} = {sa1|sa0};

vld4_32bp.disasm = {
  buffer << "vld4.32\t";
  if (x == 3) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "],d" << (sa+3*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << ((x==0)?"":(x==1)?" :64":" :128") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vld4_64_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 2[2] : rb[4] :> <: sa0[4] : 0x7[6] : len[2] : ra[4] );
vld4_64_s2.var sa : {uint32_t} = {sa1|sa0};

vld4_64_s2.disasm = {
  buffer << "vld4.<illegal width 64>\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vmax_f32( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_f32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_f32.disasm = {
  buffer << "vmax.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmax_f32q.disasm = {
  buffer << "vmax.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_f64d.disasm = {
  buffer << "vmax.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmax_f64q.disasm = {
  buffer << "vmax.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_s8.disasm = {
  buffer << "vmax.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmax_s8q.disasm = {
  buffer << "vmax.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_s16d.disasm = {
  buffer << "vmax.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmax_s16q.disasm = {
  buffer << "vmax.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_s32d.disasm = {
  buffer << "vmax.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmax_s32q.disasm = {
  buffer << "vmax.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_s64d.disasm = {
  buffer << "vmax.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmax_s64q.disasm = {
  buffer << "vmax.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u8d.disasm = {
  buffer << "vmax.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u8q.disasm = {
  buffer << "vmax.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u16d.disasm = {
  buffer << "vmax.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u16q.disasm = {
  buffer << "vmax.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u32d.disasm = {
  buffer << "vmax.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u32q.disasm = {
  buffer << "vmax.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmax_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u64d.disasm = {
  buffer << "vmax.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmax_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmax_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmax_u64q.disasm = {
  buffer << "vmax.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmin_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_f32d.disasm = {
  buffer << "vmin.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmin_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmin_f32q.disasm = {
  buffer << "vmin.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmin_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_f64d.disasm = {
  buffer << "vmin.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmin_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmin_f64q.disasm = {
  buffer << "vmin.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_s8.disasm = {
  buffer << "vmin.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmin_s8q.disasm = {
  buffer << "vmin.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_s16d.disasm = {
  buffer << "vmin.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmin_s16q.disasm = {
  buffer << "vmin.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_s32d.disasm = {
  buffer << "vmin.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmin_s32q.disasm = {
  buffer << "vmin.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_s64d.disasm = {
  buffer << "vmin.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmin_s64q.disasm = {
  buffer << "vmin.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u8d.disasm = {
  buffer << "vmin.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u8q.disasm = {
  buffer << "vmin.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u16d.disasm = {
  buffer << "vmin.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u16q.disasm = {
  buffer << "vmin.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u32d.disasm = {
  buffer << "vmin.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u32q.disasm = {
  buffer << "vmin.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmin_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u64d.disasm = {
  buffer << "vmin.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmin_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmin_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmin_u64q.disasm = {
  buffer << "vmin.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_f8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmla_f8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f8dp.disasm = {
  buffer << "vmla.f<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmla_f8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmla_f8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f8qdp.disasm = {
  buffer << "vmla.f<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmla_f16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmla_f16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f16dp.disasm = {
  buffer << "vmla.f<illegal width 16>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmla_f16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmla_f16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f16qdp.disasm = {
  buffer << "vmla.f<illegal width 16>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmla_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmla_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f32d.disasm = {
  buffer << "vmla.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmla_f32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmla_f32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f32dp.disasm = {
  buffer << "vmla.f32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmla_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmla_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmla_f32q.disasm = {
  buffer << "vmla.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_f32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmla_f32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f32qdp.disasm = {
  buffer << "vmla.f32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmla_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmla_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f64d.disasm = {
  buffer << "vmla.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmla_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmla_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmla_f64q.disasm = {
  buffer << "vmla.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_f64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_f64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_f64qdp.disasm = {
  buffer << "vmla.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << 0 << "]";
}

op vmla_i8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i8.disasm = {
  buffer << "vmla.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmla_i8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmla_i8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i8dp.disasm = {
  buffer << "vmla.i<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmla_i8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmla_i8q.disasm = {
  buffer << "vmla.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_i8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmla_i8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i8qdp.disasm = {
  buffer << "vmla.i<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmla_i16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i16d.disasm = {
  buffer << "vmla.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmla_i16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmla_i16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i16dp.disasm = {
  buffer << "vmla.i16\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmla_i16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmla_i16q.disasm = {
  buffer << "vmla.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_i16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmla_i16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i16qdp.disasm = {
  buffer << "vmla.i16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmla_i32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i32d.disasm = {
  buffer << "vmla.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmla_i32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmla_i32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i32dp.disasm = {
  buffer << "vmla.i32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmla_i32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmla_i32q.disasm = {
  buffer << "vmla.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_i32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmla_i32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i32qdp.disasm = {
  buffer << "vmla.i32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmla_i64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i64d.disasm = {
  buffer << "vmla.i<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmla_i64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmla_i64q.disasm = {
  buffer << "vmla.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmla_i64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmla_i64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmla_i64qdp.disasm = {
  buffer << "vmla.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << 0 << "]";
};

op vmlal_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s8qd.disasm = {
  buffer << "vmlal.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_s8qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmlal_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s8qdp.disasm = {
  buffer << "vmlal.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlal_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s16qd.disasm = {
  buffer << "vmlal.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_s16qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmlal_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s16qdp.disasm = {
  buffer << "vmlal.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlal_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s32qd.disasm = {
  buffer << "vmlal.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_s32qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmlal_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s32qdp.disasm = {
  buffer << "vmlal.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlal_s64qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_s64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_s64qd.disasm = {
  buffer << "vmlal.s<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u8qd.disasm = {
  buffer << "vmlal.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_u8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmlal_u8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u8qdp.disasm = {
  buffer << "vmlal.u<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlal_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u16qd.disasm = {
  buffer << "vmlal.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_u16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmlal_u16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u16qdp.disasm = {
  buffer << "vmlal.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlal_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u32qd.disasm = {
  buffer << "vmlal.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlal_u32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmlal_u32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u32qdp.disasm = {
  buffer << "vmlal.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlal_u64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlal_u64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlal_u64qdp.disasm = {
  buffer << "vmlal.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << 0 << "]";
};

op vmls_f8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmls_f8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f8dp.disasm = {
  buffer << "vmls.f<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmls_f8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmls_f8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f8qdp.disasm = {
  buffer << "vmls.f<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmls_f16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmls_f16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f16dp.disasm = {
  buffer << "vmls.f16\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmls_f16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmls_f16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f16qdp.disasm = {
  buffer << "vmls.f<illegal width 16>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmls_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmls_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f32d.disasm = {
  buffer << "vmls.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmls_f32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmls_f32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f32dp.disasm = {
  buffer << "vmls.f32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmls_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmls_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmls_f32q.disasm = {
  buffer << "vmls.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmls_f32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmls_f32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f32qdp.disasm = {
  buffer << "vmls.f32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmls_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmls_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f64d.disasm = {
  buffer << "vmls.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmls_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmls_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmls_f64q.disasm = {
  buffer << "vmls.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmls_f64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_f64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_f64qdp.disasm = {
  buffer << "vmls.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << 0 << "]";
};

op vmls_i8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i8d.disasm = {
  buffer << "vmls.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmls_i8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmls_i8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i8dp.disasm = {
  buffer << "vmls.i<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmls_i8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i8q.disasm = {
  buffer << "vmls.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmls_i8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmls_i8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i8qdp.disasm = {
  buffer << "vmls.i<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmls_i16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i16d.disasm = {
  buffer << "vmls.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmls_i16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmls_i16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i16dp.disasm = {
  buffer << "vmls.i16\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmls_i16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i16q.disasm = {
  buffer << "vmls.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmls_i16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmls_i16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i16qdp.disasm = {
  buffer << "vmls.i16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmls_i32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i32d.disasm = {
  buffer << "vmls.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmls_i32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmls_i32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i32dp.disasm = {
  buffer << "vmls.i32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmls_i32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i32q.disasm = {
  buffer << "vmls.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmls_i32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmls_i32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i32qdp.disasm = {
  buffer << "vmls.i32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmls_i64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i64d.disasm = {
  buffer << "vmls.i<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmls_i64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i64q.disasm = {
  buffer << "vmls.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmls_i64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmls_i64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmls_i64qdp.disasm = {
  buffer << "vmls.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << 0 << "]";
};

op vmlsl_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s8qd.disasm = {
  buffer << "vmlsl.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_s8qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmlsl_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s8qdp.disasm = {
  buffer << "vmlsl.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlsl_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s16qd.disasm = {
  buffer << "vmlsl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_s16qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmlsl_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s16qdp.disasm = {
  buffer << "vmlsl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlsl_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s32qd.disasm = {
  buffer << "vmlsl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_s32qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmlsl_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s32qdp.disasm = {
  buffer << "vmlsl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlsl_s64qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_s64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_s64qd.disasm = {
  buffer << "vmlsl.s<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u8qd.disasm = {
  buffer << "vmlsl.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_u8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmlsl_u8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u8qdp.disasm = {
  buffer << "vmlsl.u<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlsl_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u16qd.disasm = {
  buffer << "vmlsl.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_u16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmlsl_u16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u16qdp.disasm = {
  buffer << "vmlsl.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlsl_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u32qd.disasm = {
  buffer << "vmlsl.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmlsl_u32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmlsl_u32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u32qdp.disasm = {
  buffer << "vmlsl.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmlsl_u64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmlsl_u64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmlsl_u64qdp.disasm = {
  buffer << "vmlsl.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << 0 << "]";
};

op vmov_f32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xf1[8] : imm0[4] );
vmov_f32di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm1|imm0};

vmov_f32di.disasm = {
  buffer << "vmov.f32\td" << sb << ", #" << (fp32consts[imm]);
};

op vmov_f32di2( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xf1[8] : imm0[4] );
vmov_f32di2.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm1|imm0};

vmov_f32di2.disasm = {
  buffer << "vmov.f32\td" << sb << ", #-" << (fp32consts[imm]);
};

op vmov_f32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xf5[8] : imm0[4] );
vmov_f32qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm1|imm0};

vmov_f32qi.disasm = {
  buffer << "vmov.f32\t" << qnames[sb] << ", #" << (fp32consts[imm]);
};

op vmov_f32qi2( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xf5[8] : imm0[4] );
vmov_f32qi2.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm1|imm0};

vmov_f32qi2.disasm = {
  buffer << "vmov.f32\t" << qnames[sb] << ", #-" << (fp32consts[imm]);
};

op vmov_i8di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xe1[8] : imm0[4] );
vmov_i8di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm2|imm1|imm0};

vmov_i8di.disasm = {
  buffer << "vmov.i8\td" << sb << ", #" << imm;
};

op vmov_i8qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xe5[8] : imm0[4] );
vmov_i8qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm2|imm1|imm0};

vmov_i8qi.disasm = {
  buffer << "vmov.i8\t" << qnames[sb] << ", #" << imm;
};

op vmov_i16di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 0[1] : 1[4] : imm0[4] );
vmov_i16di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmov_i16di.disasm = {
  buffer << "vmov.i16\td" << sb << ", #" << imm;
};

op vmov_i16qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 0[1] : 5[4] : imm0[4] );
vmov_i16qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmov_i16qi.disasm = {
  buffer << "vmov.i16\t" << qnames[sb] << ", #" << imm;
};

op vmov_i32di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 0[1] : 1[4] : imm0[4] );
vmov_i32di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmov_i32di.disasm = {
  buffer << "vmov.i32\td" << sb << ", #" << imm;
};

op vmov_i32din( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 6[3] : shl<3> shift[1] : 1[4] : imm0[4] );
vmov_i32din.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(((imm2|imm1|imm0)+1) << (shift+8))-1};

vmov_i32din.disasm = {
  buffer << "vmov.i32\td" << sb << ", #" << imm;
};

op vmov_i32qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 0[1] : 5[4] : imm0[4] );
vmov_i32qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmov_i32qi.disasm = {
  buffer << "vmov.i32\t" << qnames[sb] << ", #" << imm;
};

op vmov_i32qin( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 6[3] : shl<3> shift[1] : 5[4] : imm0[4] );
vmov_i32qin.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(((imm2|imm1|imm0)+1) << (shift+8))-1};

vmov_i32qin.disasm = {
  buffer << "vmov.i32\t" << qnames[sb] << ", #" << imm;
};

op vmov_i64di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xe3[8] : imm0[4] );
vmov_i64di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm2|imm1|imm0};

vmov_i64di.disasm = {
  buffer << "vmov.i64\td" << sb << ", #0x";
  for (int idx = 8; --idx>= 0;) buffer << (((imm>>idx)&1)?"ff":"00");
};

op vmov_i64qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0xe7[8] : imm0[4] );
vmov_i64qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm2|imm1|imm0};

vmov_i64qi.disasm = {
  buffer << "vmov.i64\t" << qnames[sb] << ", #0x";
  for (int idx = 8; --idx>= 0;) buffer << (((imm>>idx)&1)?"ff":"00");
};

op vmovl_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 8[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmovl_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmovl_s8qd.disasm = {
  buffer << "vmovl.s8\t" << qnames[sb] << ", d" << sa;
};

op vmovl_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : 0[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmovl_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmovl_s16qd.disasm = {
  buffer << "vmovl.s16\t" << qnames[sb] << ", d" << sa;
};

op vmovl_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : 0[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmovl_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmovl_s32qd.disasm = {
  buffer << "vmovl.s32\t" << qnames[sb] << ", d" << sa;
};

op vmovl_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 8[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmovl_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmovl_u8qd.disasm = {
  buffer << "vmovl.u8\t" << qnames[sb] << ", d" << sa;
};

op vmovl_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : 0[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmovl_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmovl_u16qd.disasm = {
  buffer << "vmovl.u16\t" << qnames[sb] << ", d" << sa;
};

op vmovl_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : 0[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmovl_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmovl_u32qd.disasm = {
  buffer << "vmovl.u32\t" << qnames[sb] << ", d" << sa;
};

op vmovn_i16( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmovn_i16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vmovn_i16.disasm = { buffer << "vmovn.i16\td" << sb << ", " << qnames[sa]; };

op vmovn_i32( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmovn_i32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vmovn_i32.disasm = { buffer << "vmovn.i32\td" << sb << ", " << qnames[sa]; };

op vmovn_i64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmovn_i64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vmovn_i64.disasm = { buffer << "vmovn.i64\td" << sb << ", " << qnames[sa]; };

op vmovn_i128( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmovn_i128.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vmovn_i128.disasm = { buffer << "vmovn.i<illegal width 128>\td" << sb << ", " << qnames[sa]; };

op vmul_f8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmul_f8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f8dp.disasm = {
  buffer << "vmul.f<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmul_f8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmul_f8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f8qdp.disasm = {
  buffer << "vmul.f<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmul_f16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmul_f16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f16dp.disasm = {
  buffer << "vmul.f<illegal width 16>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmul_f16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmul_f16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f16qdp.disasm = {
  buffer << "vmul.f<illegal width 16>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmul_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f32d.disasm = {
  buffer << "vmul.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_f32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmul_f32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f32dp.disasm = {
  buffer << "vmul.f32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmul_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f32q.disasm = {
  buffer << "vmul.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_f32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmul_f32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f32qdp.disasm = {
  buffer << "vmul.f32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmul_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f64d.disasm = {
  buffer << "vmul.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_f64q.disasm = {
  buffer << "vmul.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_i8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i8.disasm = {
  buffer << "vmul.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_i8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmul_i8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i8dp.disasm = {
  buffer << "vmul.i<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmul_i8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmul_i8q.disasm = {
  buffer << "vmul.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_i8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmul_i8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i8qdp.disasm = {
  buffer << "vmul.i<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmul_i16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i16d.disasm = {
  buffer << "vmul.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_i16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmul_i16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i16dp.disasm = {
  buffer << "vmul.i16\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmul_i16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmul_i16q.disasm = {
  buffer << "vmul.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_i16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmul_i16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i16qdp.disasm = {
  buffer << "vmul.i16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmul_i32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i32d.disasm = {
  buffer << "vmul.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_i32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmul_i32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i32dp.disasm = {
  buffer << "vmul.i32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vmul_i32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmul_i32q.disasm = {
  buffer << "vmul.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_i32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmul_i32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i32qdp.disasm = {
  buffer << "vmul.i32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vmul_i64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_i64d.disasm = {
  buffer << "vmul.i<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_i64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vmul_i64q.disasm = {
  buffer << "vmul.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_p8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p8d.disasm = {
  buffer << "vmul.p8\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_p8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p8q.disasm = {
  buffer << "vmul.p8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_p16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p16d.disasm = {
  buffer << "vmul.p16\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_p16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p16q.disasm = {
  buffer << "vmul.p16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_p32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p32d.disasm = {
  buffer << "vmul.p32\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_p32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p32q.disasm = {
  buffer << "vmul.p32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmul_p64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p64d.disasm = {
  buffer << "vmul.p<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vmul_p64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vmul_p64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmul_p64q.disasm = {
  buffer << "vmul.p<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vmull_p8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_p8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_p8qd.disasm = {
  buffer << "vmull.p8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_p8qd2( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_p8qd2.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_p8qd2.disasm = {
  buffer << "vmull.p8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_p16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_p16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_p16qd.disasm = {
  buffer << "vmull.p<illegal width 16>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_p16qd2( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xe[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_p16qd2.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_p16qd2.disasm = {
  buffer << "vmull.p<illegal width 16>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s8qd.disasm = {
  buffer << "vmull.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_s8qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmull_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s8qdp.disasm = {
  buffer << "vmull.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmull_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s16qd.disasm = {
  buffer << "vmull.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_s16qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmull_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s16qdp.disasm = {
  buffer << "vmull.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmull_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s32qd.disasm = {
  buffer << "vmull.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_s32qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmull_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s32qdp.disasm = {
  buffer << "vmull.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmull_s64qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_s64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_s64qd.disasm = {
  buffer << "vmull.s<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u8qd.disasm = {
  buffer << "vmull.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_u8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vmull_u8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u8qdp.disasm = {
  buffer << "vmull.u<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmull_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u16qd.disasm = {
  buffer << "vmull.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_u16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vmull_u16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u16qdp.disasm = {
  buffer << "vmull.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmull_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u32qd.disasm = {
  buffer << "vmull.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmull_u32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vmull_u32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u32qdp.disasm = {
  buffer << "vmull.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vmull_u64qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmull_u64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vmull_u64qd.disasm = {
  buffer << "vmull.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vmvn_d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmvn_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmvn_d.disasm = {
  buffer << "vmvn\td" << sb << ", d" << sa;
};

op vmvn_i16di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 0[1] : 3[4] : imm0[4] );
vmvn_i16di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmvn_i16di.disasm = {
  buffer << "vmvn.i16\td" << sb << ", #" << imm;
};

op vmvn_i16qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 0[1] : 7[4] : imm0[4] );
vmvn_i16qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmvn_i16qi.disasm = {
  buffer << "vmvn.i16\t" << qnames[sb] << ", #" << imm;
};

op vmvn_i32di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 0[1] : 3[4] : imm0[4] );
vmvn_i32di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmvn_i32di.disasm = {
  buffer << "vmvn.i32\td" << sb << ", #" << imm;
};

op vmvn_i32din( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 6[3] : shl<3> shift[1] : 3[4] : imm0[4] );
vmvn_i32din.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(((imm2|imm1|imm0)+1) << (shift+8))-1};

vmvn_i32din.disasm = {
  buffer << "vmvn.i32\td" << sb << ", #" << imm;
};

op vmvn_i32qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 0[1] : 7[4] : imm0[4] );
vmvn_i32qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vmvn_i32qi.disasm = {
  buffer << "vmvn.i32\t" << qnames[sb] << ", #" << imm;
};

op vmvn_i32qin( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 6[3] : shl<3> shift[1] : 7[4] : imm0[4] );
vmvn_i32qin.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(((imm2|imm1|imm0)+1) << (shift+8))-1};

vmvn_i32qin.disasm = {
  buffer << "vmvn.i32\t" << qnames[sb] << ", #" << imm;
};

op vmvn_q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vmvn_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vmvn_q.disasm = {
  buffer << "vmvn\t" << qnames[sb] << ", " << qnames[sa];
};


op vneg_f8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f8d.disasm = {
  buffer << "vneg.f8\td" << sb << ", d" << sa;
};

op vneg_f8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f8q.disasm = {
  buffer << "vneg.f8\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_f16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f16d.disasm = {
  buffer << "vneg.f16\td" << sb << ", d" << sa;
};

op vneg_f16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f16q.disasm = {
  buffer << "vneg.f16\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f32d.disasm = {
  buffer << "vneg.f32\td" << sb << ", d" << sa;
};

op vneg_f32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f32q.disasm = {
  buffer << "vneg.f32\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_f64d2( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f64d2.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f64d2.disasm = {
  buffer << "vneg.f<illegal width 64>\td" << sb << ", d" << sa;
};

op vneg_f64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_f64q.disasm = {
  buffer << "vneg.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x3[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s8d.disasm = {
  buffer << "vneg.s8\td" << sb << ", d" << sa;
};

op vneg_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x1[4] :> <: sb0[4] : 0x3[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s8q.disasm = {
  buffer << "vneg.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x3[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s16d.disasm = {
  buffer << "vneg.s16\td" << sb << ", d" << sa;
};

op vneg_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x5[4] :> <: sb0[4] : 0x3[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s16q.disasm = {
  buffer << "vneg.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x3[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s32d.disasm = {
  buffer << "vneg.s32\td" << sb << ", d" << sa;
};

op vneg_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x9[4] :> <: sb0[4] : 0x3[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s32q.disasm = {
  buffer << "vneg.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vneg_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x3[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s64d.disasm = {
  buffer << "vneg.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vneg_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xd[4] :> <: sb0[4] : 0x3[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vneg_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vneg_s64q.disasm = {
  buffer << "vneg.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vorn_d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vorn_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vorn_d.disasm = {
  buffer << "vorn\td" << sb << ", d" << sc << ", d" << sa;
};

op vorn_q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vorn_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vorn_q.disasm = {
  buffer << "vorn\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vorr_d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vorr_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vorr_d.disasm = {
  buffer << "vorr\td" << sb << ", d" << sc << ", d" << sa;
};

op vorr_i16di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 1[1] : 1[4] : imm0[4] );
vorr_i16di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vorr_i16di.disasm = {
  buffer << "vorr.i16\td" << sb << ", #" << imm;
};

op vorr_i16qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 2[2] : shl<3> shift[1] : 1[1] : 5[4] : imm0[4] );
vorr_i16qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vorr_i16qi.disasm = {
  buffer << "vorr.i16\t" << qnames[sb] << ", #" << imm;
};

op vorr_i32di( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 1[1] : 1[4] : imm0[4] );
vorr_i32di.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vorr_i32di.disasm = {
  buffer << "vorr.i32\td" << sb << ", #" << imm;
};

op vorr_i32qi( 7[3] : shl<7> imm2[1] : 0xf[4] : 1[1] : shl<4> sb1[1] : 0[2] : 0[1] : shl <4> imm1[3] :> <: sb0[4] : 0[1] : shl<3> shift[2] : 1[1] : 5[4] : imm0[4] );
vorr_i32qi.var sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {(imm2|imm1|imm0) << shift};

vorr_i32qi.disasm = {
  buffer << "vorr.i32\t" << qnames[sb] << ", #" << imm;
};

op vorr_q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vorr_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vorr_q.disasm = {
  buffer << "vorr\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpadal_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s8d.disasm = {
  buffer << "vpadal.s8\td" << sb << ", d" << sa;
};

op vpadal_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s8q.disasm = {
  buffer << "vpadal.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s16d.disasm = {
  buffer << "vpadal.s16\td" << sb << ", d" << sa;
};

op vpadal_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s16q.disasm = {
  buffer << "vpadal.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s32d.disasm = {
  buffer << "vpadal.s32\td" << sb << ", d" << sa;
};

op vpadal_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s32q.disasm = {
  buffer << "vpadal.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s64d.disasm = {
  buffer << "vpadal.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vpadal_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_s64q.disasm = {
  buffer << "vpadal.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_u8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u8d.disasm = {
  buffer << "vpadal.u8\td" << sb << ", d" << sa;
};

op vpadal_u8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u8q.disasm = {
  buffer << "vpadal.u8\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_u16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u16d.disasm = {
  buffer << "vpadal.u16\td" << sb << ", d" << sa;
};

op vpadal_u16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u16q.disasm = {
  buffer << "vpadal.u16\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_u32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u32d.disasm = {
  buffer << "vpadal.u32\td" << sb << ", d" << sa;
};

op vpadal_u32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u32q.disasm = {
  buffer << "vpadal.u32\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadal_u64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u64d.disasm = {
  buffer << "vpadal.u<illegal width 64>\td" << sb << ", d" << sa;
};

op vpadal_u64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadal_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpadal_u64q.disasm = {
  buffer << "vpadal.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vpadd_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadd_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_f32d.disasm = {
  buffer << "vpadd.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpadd_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadd_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_f32q.disasm = {
  buffer << "vpadd.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpadd_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadd_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_f64d.disasm = {
  buffer << "vpadd.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpadd_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpadd_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_f64q.disasm = {
  buffer << "vpadd.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpadd_i8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_i8.disasm = {
  buffer << "vpadd.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vpadd_i8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpadd_i8q.disasm = {
  buffer << "vpadd.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpadd_i16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_i16d.disasm = {
  buffer << "vpadd.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vpadd_i16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpadd_i16q.disasm = {
  buffer << "vpadd.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpadd_i32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_i32d.disasm = {
  buffer << "vpadd.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpadd_i32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpadd_i32q.disasm = {
  buffer << "vpadd.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpadd_i64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpadd_i64d.disasm = {
  buffer << "vpadd.i<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpadd_i64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpadd_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpadd_i64q.disasm = {
  buffer << "vpadd.i<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpaddl_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s8d.disasm = {
  buffer << "vpaddl.s8\td" << sb << ", d" << sa;
};

op vpaddl_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s8q.disasm = {
  buffer << "vpaddl.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s16d.disasm = {
  buffer << "vpaddl.s16\td" << sb << ", d" << sa;
};

op vpaddl_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s16q.disasm = {
  buffer << "vpaddl.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s32d.disasm = {
  buffer << "vpaddl.s32\td" << sb << ", d" << sa;
};

op vpaddl_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s32q.disasm = {
  buffer << "vpaddl.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s64d.disasm = {
  buffer << "vpaddl.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vpaddl_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_s64q.disasm = {
  buffer << "vpaddl.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_u8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u8d.disasm = {
  buffer << "vpaddl.u8\td" << sb << ", d" << sa;
};

op vpaddl_u8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u8q.disasm = {
  buffer << "vpaddl.u8\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_u16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u16d.disasm = {
  buffer << "vpaddl.u16\td" << sb << ", d" << sa;
};

op vpaddl_u16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u16q.disasm = {
  buffer << "vpaddl.u16\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_u32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u32d.disasm = {
  buffer << "vpaddl.u32\td" << sb << ", d" << sa;
};

op vpaddl_u32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u32q.disasm = {
  buffer << "vpaddl.u32\t" << qnames[sb] << ", " << qnames[sa];
};

op vpaddl_u64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u64d.disasm = {
  buffer << "vpaddl.u<illegal width 64>\td" << sb << ", d" << sa;
};

op vpaddl_u64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpaddl_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vpaddl_u64q.disasm = {
  buffer << "vpaddl.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vpmax_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_f32d.disasm = {
  buffer << "vpmax.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_f32q.disasm = {
  buffer << "vpmax.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_f64d.disasm = {
  buffer << "vpmax.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_f64q.disasm = {
  buffer << "vpmax.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_s8.disasm = {
  buffer << "vpmax.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmax_s8q.disasm = {
  buffer << "vpmax.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_s16d.disasm = {
  buffer << "vpmax.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmax_s16q.disasm = {
  buffer << "vpmax.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_s32d.disasm = {
  buffer << "vpmax.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmax_s32q.disasm = {
  buffer << "vpmax.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_s64d.disasm = {
  buffer << "vpmax.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmax_s64q.disasm = {
  buffer << "vpmax.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u8d.disasm = {
  buffer << "vpmax.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u8q.disasm = {
  buffer << "vpmax.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u16d.disasm = {
  buffer << "vpmax.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u16q.disasm = {
  buffer << "vpmax.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u32d.disasm = {
  buffer << "vpmax.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u32q.disasm = {
  buffer << "vpmax.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmax_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u64d.disasm = {
  buffer << "vpmax.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmax_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmax_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmax_u64q.disasm = {
  buffer << "vpmax.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_f32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmin_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_f32d.disasm = {
  buffer << "vpmin.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_f32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmin_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_f32q.disasm = {
  buffer << "vpmin.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_f64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmin_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_f64d.disasm = {
  buffer << "vpmin.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_f64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vpmin_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_f64q.disasm = {
  buffer << "vpmin.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_s8.disasm = {
  buffer << "vpmin.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmin_s8q.disasm = {
  buffer << "vpmin.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_s16d.disasm = {
  buffer << "vpmin.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmin_s16q.disasm = {
  buffer << "vpmin.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_s32d.disasm = {
  buffer << "vpmin.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmin_s32q.disasm = {
  buffer << "vpmin.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_s64d.disasm = {
  buffer << "vpmin.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vpmin_s64q.disasm = {
  buffer << "vpmin.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u8d.disasm = {
  buffer << "vpmin.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u8q.disasm = {
  buffer << "vpmin.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u16d.disasm = {
  buffer << "vpmin.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u16q.disasm = {
  buffer << "vpmin.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u32d.disasm = {
  buffer << "vpmin.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u32q.disasm = {
  buffer << "vpmin.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vpmin_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u64d.disasm = {
  buffer << "vpmin.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vpmin_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xa[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vpmin_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vpmin_u64q.disasm = {
  buffer << "vpmin.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqabs_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s8d.disasm = {
  buffer << "vqabs.s8\td" << sb << ", d" << sa;
};

op vqabs_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s8q.disasm = {
  buffer << "vqabs.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vqabs_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s16d.disasm = {
  buffer << "vqabs.s16\td" << sb << ", d" << sa;
};

op vqabs_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s16q.disasm = {
  buffer << "vqabs.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vqabs_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s32d.disasm = {
  buffer << "vqabs.s32\td" << sb << ", d" << sa;
};

op vqabs_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s32q.disasm = {
  buffer << "vqabs.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vqabs_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s64d.disasm = {
  buffer << "vqabs.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vqabs_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqabs_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqabs_s64q.disasm = {
  buffer << "vqabs.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vqadd_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_s8.disasm = {
  buffer << "vqadd.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_s8q.disasm = {
  buffer << "vqadd.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_s16d.disasm = {
  buffer << "vqadd.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqadd_s16q.disasm = {
  buffer << "vqadd.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_s32d.disasm = {
  buffer << "vqadd.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqadd_s32q.disasm = {
  buffer << "vqadd.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_s64d.disasm = {
  buffer << "vqadd.s64\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqadd_s64q.disasm = {
  buffer << "vqadd.s64\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u8d.disasm = {
  buffer << "vqadd.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u8q.disasm = {
  buffer << "vqadd.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u16d.disasm = {
  buffer << "vqadd.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u16q.disasm = {
  buffer << "vqadd.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u32d.disasm = {
  buffer << "vqadd.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u32q.disasm = {
  buffer << "vqadd.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqadd_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u64d.disasm = {
  buffer << "vqadd.u64\td" << sb << ", d" << sc << ", d" << sa;
};

op vqadd_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x0[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqadd_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqadd_u64q.disasm = {
  buffer << "vqadd.u64\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqdmlal_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlal_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s8qd.disasm = {
  buffer << "vqdmlal.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlal_s8qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqdmlal_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s8qdp.disasm = {
  buffer << "vqdmlal.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmlal_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlal_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s16qd.disasm = {
  buffer << "vqdmlal.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlal_s16qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqdmlal_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s16qdp.disasm = {
  buffer << "vqdmlal.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmlal_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlal_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s32qd.disasm = {
  buffer << "vqdmlal.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlal_s32qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqdmlal_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s32qdp.disasm = {
  buffer << "vqdmlal.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmlal_s64qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x9[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlal_s64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlal_s64qd.disasm = {
  buffer << "vqdmlal.s<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlsl_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlsl_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s8qd.disasm = {
  buffer << "vqdmlsl.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlsl_s8qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqdmlsl_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s8qdp.disasm = {
  buffer << "vqdmlsl.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmlsl_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlsl_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s16qd.disasm = {
  buffer << "vqdmlsl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlsl_s16qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqdmlsl_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s16qdp.disasm = {
  buffer << "vqdmlsl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmlsl_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlsl_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s32qd.disasm = {
  buffer << "vqdmlsl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmlsl_s32qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x7[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqdmlsl_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s32qdp.disasm = {
  buffer << "vqdmlsl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmlsl_s64qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmlsl_s64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmlsl_s64qd.disasm = {
  buffer << "vqdmlsl.s<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmulh_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s8.disasm = {
  buffer << "vqdmulh.s<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa;
};

op vqdmulh_s8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqdmulh_s8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s8dp.disasm = {
  buffer << "vqdmulh.s<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vqdmulh_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s8q.disasm = {
  buffer << "vqdmulh.s<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqdmulh_s8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqdmulh_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s8qdp.disasm = {
  buffer << "vqdmulh.s<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vqdmulh_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s16d.disasm = {
  buffer << "vqdmulh.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vqdmulh_s16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqdmulh_s16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s16dp.disasm = {
  buffer << "vqdmulh.s16\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vqdmulh_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s16q.disasm = {
  buffer << "vqdmulh.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqdmulh_s16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqdmulh_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s16qdp.disasm = {
  buffer << "vqdmulh.s16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vqdmulh_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s32d.disasm = {
  buffer << "vqdmulh.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vqdmulh_s32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqdmulh_s32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s32dp.disasm = {
  buffer << "vqdmulh.s32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vqdmulh_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s32q.disasm = {
  buffer << "vqdmulh.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqdmulh_s32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqdmulh_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s32qdp.disasm = {
  buffer << "vqdmulh.s32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vqdmulh_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s64d.disasm = {
  buffer << "vqdmulh.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vqdmulh_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s64q.disasm = {
  buffer << "vqdmulh.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqdmulh_s64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xc[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmulh_s64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmulh_s64qdp.disasm = {
  buffer << "vqdmulh.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << 0 << "]";
};

op vqdmull_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmull_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s8qd.disasm = {
  buffer << "vqdmull.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmull_s8qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqdmull_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s8qdp.disasm = {
  buffer << "vqdmull.s<illegal width 8>\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmull_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmull_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s16qd.disasm = {
  buffer << "vqdmull.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmull_s16qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqdmull_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s16qdp.disasm = {
  buffer << "vqdmull.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmull_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmull_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s32qd.disasm = {
  buffer << "vqdmull.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqdmull_s32qdp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqdmull_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s32qdp.disasm = {
  buffer << "vqdmull.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa << "[" << part << "]";
};

op vqdmull_s64qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqdmull_s64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqdmull_s64qd.disasm = {
  buffer << "vqdmull.s<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vqmovn_s16( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_s16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_s16.disasm = { buffer << "vqmovn.s16\td" << sb << ", " << qnames[sa]; };

op vqmovn_s32( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_s32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_s32.disasm = { buffer << "vqmovn.s32\td" << sb << ", " << qnames[sa]; };

op vqmovn_s64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_s64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_s64.disasm = { buffer << "vqmovn.s64\td" << sb << ", " << qnames[sa]; };

op vqmovn_s128( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_s128.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_s128.disasm = { buffer << "vqmovn.s<illegal width 128>\td" << sb << ", " << qnames[sa]; };

op vqmovn_u16( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_u16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_u16.disasm = { buffer << "vqmovn.u16\td" << sb << ", " << qnames[sa]; };

op vqmovn_u32( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_u32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_u32.disasm = { buffer << "vqmovn.u32\td" << sb << ", " << qnames[sa]; };

op vqmovn_u64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_u64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_u64.disasm = { buffer << "vqmovn.u64\td" << sb << ", " << qnames[sa]; };

op vqmovn_u128( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovn_u128.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovn_u128.disasm = { buffer << "vqmovn.u<illegal width 128>\td" << sb << ", " << qnames[sa]; };

op vqmovun_s16( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovun_s16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovun_s16.disasm = { buffer << "vqmovun.s16\td" << sb << ", " << qnames[sa]; };

op vqmovun_s32( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovun_s32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovun_s32.disasm = { buffer << "vqmovun.s32\td" << sb << ", " << qnames[sa]; };

op vqmovun_s64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovun_s64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovun_s64.disasm = { buffer << "vqmovun.s64\td" << sb << ", " << qnames[sa]; };

op vqmovun_s128( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqmovun_s128.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vqmovun_s128.disasm = { buffer << "vqmovun.s<illegal width 128>\td" << sb << ", " << qnames[sa]; };

op vqneg_s8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s8d.disasm = {
  buffer << "vqneg.s8\td" << sb << ", d" << sa;
};

op vqneg_s8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x0[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s8q.disasm = {
  buffer << "vqneg.s8\t" << qnames[sb] << ", " << qnames[sa];
};

op vqneg_s16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s16d.disasm = {
  buffer << "vqneg.s16\td" << sb << ", d" << sa;
};

op vqneg_s16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s16q.disasm = {
  buffer << "vqneg.s16\t" << qnames[sb] << ", " << qnames[sa];
};

op vqneg_s32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s32d.disasm = {
  buffer << "vqneg.s32\td" << sb << ", d" << sa;
};

op vqneg_s32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s32q.disasm = {
  buffer << "vqneg.s32\t" << qnames[sb] << ", " << qnames[sa];
};

op vqneg_s64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s64d.disasm = {
  buffer << "vqneg.s<illegal width 64>\td" << sb << ", d" << sa;
};

op vqneg_s64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqneg_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vqneg_s64q.disasm = {
  buffer << "vqneg.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vqrdmulh_s8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s8d.disasm = {
  buffer << "vqrdmulh.s<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa;
};

op vqrdmulh_s8dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqrdmulh_s8dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s8dp.disasm = {
  buffer << "vqrdmulh.s<illegal width 8>\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vqrdmulh_s8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s8q.disasm = {
  buffer << "vqrdmulh.s<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqrdmulh_s8qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<2> part1[1] : 0[1] : part0[2] : sa[2] );
vqrdmulh_s8qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s8qdp.disasm = {
  buffer << "vqrdmulh.s<illegal width 8>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vqrdmulh_s16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s16d.disasm = {
  buffer << "vqrdmulh.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vqrdmulh_s16dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqrdmulh_s16dp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s16dp.disasm = {
  buffer << "vqrdmulh.s16\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vqrdmulh_s16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s16q.disasm = {
  buffer << "vqrdmulh.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqrdmulh_s16qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<1> part1[1] : 0[1] : part0[1] : sa[3] );
vqrdmulh_s16qdp.var part : {uint32_t} = {part1|part0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s16qdp.disasm = {
  buffer << "vqrdmulh.s16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vqrdmulh_s32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s32d.disasm = {
  buffer << "vqrdmulh.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vqrdmulh_s32dp( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqrdmulh_s32dp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s32dp.disasm = {
  buffer << "vqrdmulh.s32\td" << sb << ", d" << sc << ", d" << sa << "[" << part << "]";
}

op vqrdmulh_s32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s32q.disasm = {
  buffer << "vqrdmulh.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqrdmulh_s32qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : part[1] : 0[1] : sa[4] );
vqrdmulh_s32qdp.var sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s32qdp.disasm = {
  buffer << "vqrdmulh.s32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << part << "]";
};

op vqrdmulh_s64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s64d.disasm = {
  buffer << "vqrdmulh.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vqrdmulh_s64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xb[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s64q.disasm = {
  buffer << "vqrdmulh.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqrdmulh_s64qdp( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vqrdmulh_s64qdp.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrdmulh_s64qdp.disasm = {
  buffer << "vqrdmulh.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa << "[" << 0 << "]";
};

op vqrshl_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s8.disasm = {
  buffer << "vqrshl.s8\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s8q.disasm = {
  buffer << "vqrshl.s8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s16d.disasm = {
  buffer << "vqrshl.s16\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s16q.disasm = {
  buffer << "vqrshl.s16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s32d.disasm = {
  buffer << "vqrshl.s32\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s32q.disasm = {
  buffer << "vqrshl.s32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s64d.disasm = {
  buffer << "vqrshl.s64\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqrshl_s64q.disasm = {
  buffer << "vqrshl.s64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u8d.disasm = {
  buffer << "vqrshl.u8\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u8q.disasm = {
  buffer << "vqrshl.u8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u16d.disasm = {
  buffer << "vqrshl.u16\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u16q.disasm = {
  buffer << "vqrshl.u16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u32d.disasm = {
  buffer << "vqrshl.u32\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u32q.disasm = {
  buffer << "vqrshl.u32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshl_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u64d.disasm = {
  buffer << "vqrshl.u64\td" << sb << ", d" << sa << ", d" << sc;
};

op vqrshl_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshl_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqrshl_u64q.disasm = {
  buffer << "vqrshl.u64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqrshrn_s16dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x9[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrn_s16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vqrshrn_s16dqi.disasm = {
  buffer << "vqrshrn.s16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrn_s32dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x9[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrn_s32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vqrshrn_s32dqi.disasm = {
  buffer << "vqrshrn.s32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrn_s64dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x9[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrn_s64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vqrshrn_s64dqi.disasm = {
  buffer << "vqrshrn.s64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrn_u16dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x9[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrn_u16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vqrshrn_u16dqi.disasm = {
  buffer << "vqrshrn.u16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrn_u32dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x9[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrn_u32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vqrshrn_u32dqi.disasm = {
  buffer << "vqrshrn.u32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrn_u64dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x9[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrn_u64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vqrshrn_u64dqi.disasm = {
  buffer << "vqrshrn.u64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrun_s16dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x8[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrun_s16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vqrshrun_s16dqi.disasm = {
  buffer << "vqrshrun.s16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrun_s32dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x8[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrun_s32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vqrshrun_s32dqi.disasm = {
  buffer << "vqrshrun.s32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqrshrun_s64dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x8[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqrshrun_s64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vqrshrun_s64dqi.disasm = {
  buffer << "vqrshrun.s64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_s8.disasm = {
  buffer << "vqshl.s8\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_s8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s8di.disasm = {
  buffer << "vqshl.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqshl_s8q.disasm = {
  buffer << "vqshl.s8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_s8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s8qi.disasm = {
  buffer << "vqshl.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_s16d.disasm = {
  buffer << "vqshl.s16\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_s16di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s16di.disasm = {
  buffer << "vqshl.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqshl_s16q.disasm = {
  buffer << "vqshl.s16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_s16qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s16qi.disasm = {
  buffer << "vqshl.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_s32d.disasm = {
  buffer << "vqshl.s32\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s32di.disasm = {
  buffer << "vqshl.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqshl_s32q.disasm = {
  buffer << "vqshl.s32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s32qi.disasm = {
  buffer << "vqshl.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_s64d.disasm = {
  buffer << "vqshl.s64\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_s64di( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s64di.disasm = {
  buffer << "vqshl.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqshl_s64q.disasm = {
  buffer << "vqshl.s64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_s64qi( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_s64qi.disasm = {
  buffer << "vqshl.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u8d.disasm = {
  buffer << "vqshl.u8\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_u8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u8di.disasm = {
  buffer << "vqshl.u8\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u8q.disasm = {
  buffer << "vqshl.u8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_u8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u8qi.disasm = {
  buffer << "vqshl.u8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};


op vqshl_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u16d.disasm = {
  buffer << "vqshl.u16\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_u16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u16di.disasm = {
  buffer << "vqshl.u16\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u16q.disasm = {
  buffer << "vqshl.u16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_u16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u16qi.disasm = {
  buffer << "vqshl.u16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u32d.disasm = {
  buffer << "vqshl.u32\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_u32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x7[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u32di.disasm = {
  buffer << "vqshl.u32\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u32q.disasm = {
  buffer << "vqshl.u32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_u32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x7[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u32qi.disasm = {
  buffer << "vqshl.u32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshl_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u64d.disasm = {
  buffer << "vqshl.u64\td" << sb << ", d" << sa << ", d" << sc;
};

op vqshl_u64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x7[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u64di.disasm = {
  buffer << "vqshl.u64\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshl_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqshl_u64q.disasm = {
  buffer << "vqshl.u64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vqshl_u64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x7[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshl_u64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshl_u64qi.disasm = {
  buffer << "vqshl.u64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshlu_s8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s8di.disasm = {
  buffer << "vqshlu.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshlu_s8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s8qi.disasm = {
  buffer << "vqshlu.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshlu_s16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s16di.disasm = {
  buffer << "vqshlu.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshlu_s16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s16qi.disasm = {
  buffer << "vqshlu.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshlu_s32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x6[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s32di.disasm = {
  buffer << "vqshlu.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshlu_s32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x6[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s32qi.disasm = {
  buffer << "vqshlu.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshlu_s64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x6[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s64di.disasm = {
  buffer << "vqshlu.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vqshlu_s64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x6[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshlu_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vqshlu_s64qi.disasm = {
  buffer << "vqshlu.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vqshrn_s16dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x9[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrn_s16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vqshrn_s16dqi.disasm = {
  buffer << "vqshrn.s16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrn_s32dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x9[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrn_s32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vqshrn_s32dqi.disasm = {
  buffer << "vqshrn.s32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrn_s64dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x9[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrn_s64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vqshrn_s64dqi.disasm = {
  buffer << "vqshrn.s64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrn_u16dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x9[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrn_u16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vqshrn_u16dqi.disasm = {
  buffer << "vqshrn.u16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrn_u32dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x9[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrn_u32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vqshrn_u32dqi.disasm = {
  buffer << "vqshrn.u32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrn_u64dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x9[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrn_u64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vqshrn_u64dqi.disasm = {
  buffer << "vqshrn.u64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrun_s16dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x8[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrun_s16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vqshrun_s16dqi.disasm = {
  buffer << "vqshrun.s16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrun_s32dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x8[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrun_s32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vqshrun_s32dqi.disasm = {
  buffer << "vqshrun.s32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqshrun_s64dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x8[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqshrun_s64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vqshrun_s64dqi.disasm = {
  buffer << "vqshrun.s64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vqsub_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqsub_s8.disasm = {
  buffer << "vqsub.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqsub_s8q.disasm = {
  buffer << "vqsub.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_s16d.disasm = {
  buffer << "vqsub.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqsub_s16q.disasm = {
  buffer << "vqsub.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_s32d.disasm = {
  buffer << "vqsub.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqsub_s32q.disasm = {
  buffer << "vqsub.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_s64d.disasm = {
  buffer << "vqsub.s64\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vqsub_s64q.disasm = {
  buffer << "vqsub.s64\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u8d.disasm = {
  buffer << "vqsub.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u8q.disasm = {
  buffer << "vqsub.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u16d.disasm = {
  buffer << "vqsub.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u16q.disasm = {
  buffer << "vqsub.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u32d.disasm = {
  buffer << "vqsub.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u32q.disasm = {
  buffer << "vqsub.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vqsub_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u64d.disasm = {
  buffer << "vqsub.u64\td" << sb << ", d" << sc << ", d" << sa;
};

op vqsub_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vqsub_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vqsub_u64q.disasm = {
  buffer << "vqsub.u64\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vraddhn_i16dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vraddhn_i16dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vraddhn_i16dq.disasm = {
  buffer << "vraddhn.i16\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vraddhn_i32dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vraddhn_i32dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vraddhn_i32dq.disasm = {
  buffer << "vraddhn.i32\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vraddhn_i64dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vraddhn_i64dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vraddhn_i64dq.disasm = {
  buffer << "vraddhn.i64\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vraddhn_i128dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vraddhn_i128dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vraddhn_i128dq.disasm = {
  buffer << "vraddhn.i<illegal width 128>\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrecpe_f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrecpe_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrecpe_f32d.disasm = {
  buffer << "vrecpe.f32\td" << sb << ", d" << sa;
};

op vrecpe_f32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrecpe_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrecpe_f32q.disasm = {
  buffer << "vrecpe.f32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrecpe_u32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrecpe_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrecpe_u32d.disasm = {
  buffer << "vrecpe.u32\td" << sb << ", d" << sa;
};

op vrecpe_u32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrecpe_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrecpe_u32q.disasm = {
  buffer << "vrecpe.u32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrecps_f32( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrecps_f32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrecps_f32.disasm = {
  buffer << "vrecps.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vrecps_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrecps_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrecps_f32q.disasm = {
  buffer << "vrecps.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrecps_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrecps_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrecps_f64d.disasm = {
  buffer << "vrecps.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vrecps_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrecps_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrecps_f64q.disasm = {
  buffer << "vrecps.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrev_168d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev_168d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev_168d.disasm = {
  buffer << "vrev16.8\td" << sb << ", d" << sa;
};

op vrev_168q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev_168q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev_168q.disasm = {
  buffer << "vrev16.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev_328d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev_328d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev_328d.disasm = {
  buffer << "vrev32.8\td" << sb << ", d" << sa;
};

op vrev_328q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev_328q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev_328q.disasm = {
  buffer << "vrev32.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev_648d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev_648d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev_648d.disasm = {
  buffer << "vrev64.8\td" << sb << ", d" << sa;
};

op vrev_648q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev_648q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev_648q.disasm = {
  buffer << "vrev64.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev16_16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev16_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev16_16d.disasm = {
  buffer << "vrev16.16\td" << sb << ", d" << sa;
};

op vrev16_16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev16_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev16_16q.disasm = {
  buffer << "vrev16.16\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev16_32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev16_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev16_32d.disasm = {
  buffer << "vrev16.32\td" << sb << ", d" << sa;
};

op vrev16_32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev16_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev16_32q.disasm = {
  buffer << "vrev16.32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev16_64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev16_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev16_64d.disasm = {
  buffer << "vrev16.<illegal width 64>\td" << sb << ", d" << sa;
};

op vrev16_64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev16_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev16_64q.disasm = {
  buffer << "vrev16.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev32_16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev32_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev32_16d.disasm = {
  buffer << "vrev32.16\td" << sb << ", d" << sa;
};

op vrev32_16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev32_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev32_16q.disasm = {
  buffer << "vrev32.16\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev32_32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev32_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev32_32d.disasm = {
  buffer << "vrev32.32\td" << sb << ", d" << sa;
};

op vrev32_32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev32_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev32_32q.disasm = {
  buffer << "vrev32.32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev32_64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev32_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev32_64d.disasm = {
  buffer << "vrev32.<illegal width 64>\td" << sb << ", d" << sa;
};

op vrev32_64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev32_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev32_64q.disasm = {
  buffer << "vrev32.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev64_16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev64_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev64_16d.disasm = {
  buffer << "vrev64.16\td" << sb << ", d" << sa;
};

op vrev64_16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x4[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev64_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev64_16q.disasm = {
  buffer << "vrev64.16\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev64_32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev64_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev64_32d.disasm = {
  buffer << "vrev64.32\td" << sb << ", d" << sa;
};

op vrev64_32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x8[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev64_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev64_32q.disasm = {
  buffer << "vrev64.32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrev64_64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev64_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev64_64d.disasm = {
  buffer << "vrev64.<illegal width 64>\td" << sb << ", d" << sa;
};

op vrev64_64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xc[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrev64_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrev64_64q.disasm = {
  buffer << "vrev64.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vrhadd_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s8.disasm = {
  buffer << "vrhadd.s8\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s8q.disasm = {
  buffer << "vrhadd.s8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s16d.disasm = {
  buffer << "vrhadd.s16\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s16q.disasm = {
  buffer << "vrhadd.s16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s32d.disasm = {
  buffer << "vrhadd.s32\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s32q.disasm = {
  buffer << "vrhadd.s32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s64d.disasm = {
  buffer << "vrhadd.s<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrhadd_s64q.disasm = {
  buffer << "vrhadd.s<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u8d.disasm = {
  buffer << "vrhadd.u8\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u8q.disasm = {
  buffer << "vrhadd.u8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u16d.disasm = {
  buffer << "vrhadd.u16\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u16q.disasm = {
  buffer << "vrhadd.u16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u32d.disasm = {
  buffer << "vrhadd.u32\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u32q.disasm = {
  buffer << "vrhadd.u32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrhadd_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u64d.disasm = {
  buffer << "vrhadd.u<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vrhadd_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x1[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrhadd_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrhadd_u64q.disasm = {
  buffer << "vrhadd.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrshl_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_s8.disasm = {
  buffer << "vrshl.s8\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrshl_s8q.disasm = {
  buffer << "vrshl.s8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_s16d.disasm = {
  buffer << "vrshl.s16\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrshl_s16q.disasm = {
  buffer << "vrshl.s16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_s32d.disasm = {
  buffer << "vrshl.s32\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrshl_s32q.disasm = {
  buffer << "vrshl.s32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_s64d.disasm = {
  buffer << "vrshl.s64\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrshl_s64q.disasm = {
  buffer << "vrshl.s64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u8d.disasm = {
  buffer << "vrshl.u8\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u8q.disasm = {
  buffer << "vrshl.u8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u16d.disasm = {
  buffer << "vrshl.u16\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u16q.disasm = {
  buffer << "vrshl.u16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u32d.disasm = {
  buffer << "vrshl.u32\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u32q.disasm = {
  buffer << "vrshl.u32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshl_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u64d.disasm = {
  buffer << "vrshl.u64\td" << sb << ", d" << sa << ", d" << sc;
};

op vrshl_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x5[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrshl_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrshl_u64q.disasm = {
  buffer << "vrshl.u64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vrshr_s8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrshr_s8di.disasm = {
  buffer << "vrshr.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_s8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrshr_s8qi.disasm = {
  buffer << "vrshr.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_s16di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrshr_s16di.disasm = {
  buffer << "vrshr.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_s16qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrshr_s16qi.disasm = {
  buffer << "vrshr.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrshr_s32di.disasm = {
  buffer << "vrshr.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrshr_s32qi.disasm = {
  buffer << "vrshr.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_s64di( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrshr_s64di.disasm = {
  buffer << "vrshr.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_s64qi( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrshr_s64qi.disasm = {
  buffer << "vrshr.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_u8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrshr_u8di.disasm = {
  buffer << "vrshr.u8\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_u8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrshr_u8qi.disasm = {
  buffer << "vrshr.u8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_u16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrshr_u16di.disasm = {
  buffer << "vrshr.u16\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_u16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrshr_u16qi.disasm = {
  buffer << "vrshr.u16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_u32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x2[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrshr_u32di.disasm = {
  buffer << "vrshr.u32\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_u32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x2[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrshr_u32qi.disasm = {
  buffer << "vrshr.u32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshr_u64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x2[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrshr_u64di.disasm = {
  buffer << "vrshr.u64\td" << sb << ", d" << sa << ", #" << imm;
};

op vrshr_u64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x2[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshr_u64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrshr_u64qi.disasm = {
  buffer << "vrshr.u64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrshrn_i16dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x8[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshrn_i16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrshrn_i16dqi.disasm = {
  buffer << "vrshrn.i16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vrshrn_i32dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x8[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshrn_i32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrshrn_i32dqi.disasm = {
  buffer << "vrshrn.i32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vrshrn_i64dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x8[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrshrn_i64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrshrn_i64dqi.disasm = {
  buffer << "vrshrn.i64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vrsqrte_f32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsqrte_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrsqrte_f32d.disasm = {
  buffer << "vrsqrte.f32\td" << sb << ", d" << sa;
};

op vrsqrte_f32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsqrte_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrsqrte_f32q.disasm = {
  buffer << "vrsqrte.f32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrsqrte_u32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsqrte_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrsqrte_u32d.disasm = {
  buffer << "vrsqrte.u32\td" << sb << ", d" << sa;
};

op vrsqrte_u32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xb[4] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsqrte_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vrsqrte_u32q.disasm = {
  buffer << "vrsqrte.u32\t" << qnames[sb] << ", " << qnames[sa];
};

op vrsqrts_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsqrts_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrsqrts_f32d.disasm = {
  buffer << "vrsqrts.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vrsqrts_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsqrts_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrsqrts_f32q.disasm = {
  buffer << "vrsqrts.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrsqrts_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsqrts_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrsqrts_f64d.disasm = {
  buffer << "vrsqrts.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vrsqrts_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xf[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsqrts_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vrsqrts_f64q.disasm = {
  buffer << "vrsqrts.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrsra_s8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrsra_s8di.disasm = {
  buffer << "vrsra.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_s8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrsra_s8qi.disasm = {
  buffer << "vrsra.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_s16di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrsra_s16di.disasm = {
  buffer << "vrsra.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_s16qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrsra_s16qi.disasm = {
  buffer << "vrsra.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrsra_s32di.disasm = {
  buffer << "vrsra.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrsra_s32qi.disasm = {
  buffer << "vrsra.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_s64di( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x3[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrsra_s64di.disasm = {
  buffer << "vrsra.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_s64qi( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x3[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrsra_s64qi.disasm = {
  buffer << "vrsra.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_u8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrsra_u8di.disasm = {
  buffer << "vrsra.u8\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_u8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vrsra_u8qi.disasm = {
  buffer << "vrsra.u8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_u16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrsra_u16di.disasm = {
  buffer << "vrsra.u16\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_u16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vrsra_u16qi.disasm = {
  buffer << "vrsra.u16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_u32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrsra_u32di.disasm = {
  buffer << "vrsra.u32\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_u32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x3[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vrsra_u32qi.disasm = {
  buffer << "vrsra.u32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsra_u64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x3[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrsra_u64di.disasm = {
  buffer << "vrsra.u64\td" << sb << ", d" << sa << ", #" << imm;
};

op vrsra_u64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x3[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vrsra_u64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vrsra_u64qi.disasm = {
  buffer << "vrsra.u64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vrsubhn_i16dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsubhn_i16dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrsubhn_i16dq.disasm = {
  buffer << "vrsubhn.i16\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrsubhn_i32dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsubhn_i32dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrsubhn_i32dq.disasm = {
  buffer << "vrsubhn.i32\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrsubhn_i64dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsubhn_i64dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrsubhn_i64dq.disasm = {
  buffer << "vrsubhn.i64\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vrsubhn_i128dq( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vrsubhn_i128dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vrsubhn_i128dq.disasm = {
  buffer << "vrsubhn.i<illegal width 128>\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vshl_s8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_s8.disasm = {
  buffer << "vshl.s8\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_s8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s8di.disasm = {
  buffer << "vshl.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vshl_s8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vshl_s8q.disasm = {
  buffer << "vshl.s8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_s8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s8qi.disasm = {
  buffer << "vshl.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshl_s16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_s16d.disasm = {
  buffer << "vshl.s16\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_s16di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s16di.disasm = {
  buffer << "vshl.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vshl_s16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vshl_s16q.disasm = {
  buffer << "vshl.s16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_s16qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s16qi.disasm = {
  buffer << "vshl.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshl_s32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_s32d.disasm = {
  buffer << "vshl.s32\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s32di.disasm = {
  buffer << "vshl.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vshl_s32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vshl_s32q.disasm = {
  buffer << "vshl.s32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s32qi.disasm = {
  buffer << "vshl.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshl_s64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_s64d.disasm = {
  buffer << "vshl.s64\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_s64di( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s64di.disasm = {
  buffer << "vshl.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vshl_s64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_s64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vshl_s64q.disasm = {
  buffer << "vshl.s64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_s64qi( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshl_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshl_s64qi.disasm = {
  buffer << "vshl.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshl_u8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u8d.disasm = {
  buffer << "vshl.u8\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_u8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u8q.disasm = {
  buffer << "vshl.u8\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_u16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u16d.disasm = {
  buffer << "vshl.u16\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_u16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u16q.disasm = {
  buffer << "vshl.u16\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_u32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u32d.disasm = {
  buffer << "vshl.u32\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_u32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u32q.disasm = {
  buffer << "vshl.u32\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshl_u64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u64d.disasm = {
  buffer << "vshl.u64\td" << sb << ", d" << sa << ", d" << sc;
};

op vshl_u64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x4[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshl_u64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vshl_u64q.disasm = {
  buffer << "vshl.u64\t" << qnames[sb] << ", " << qnames[sa] << ", " << qnames[sc];
};

op vshll_i8( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshll_i8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vshll_i8.disasm = { buffer << "vshll.i8\t" << qnames[sb] << ", d" << sa << ", #8"; };

op vshll_i16( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshll_i16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vshll_i16.disasm = { buffer << "vshll.i16\t" << qnames[sb] << ", d" << sa << ", #16"; };

op vshll_i32( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshll_i32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vshll_i32.disasm = { buffer << "vshll.i32\t" << qnames[sb] << ", d" << sa << ", #32"; };

op vshll_i64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x3[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vshll_i64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};
vshll_i64.disasm = { buffer << "vshll.i<illegal width 64>\t" << qnames[sb] << ", d" << sa << ", #<illegal width 64>"; };
op vshll_s8dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshll_s8dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshll_s8dqi.disasm = {
  buffer << "vshll.s8\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshll_s16dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshll_s16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshll_s16dqi.disasm = {
  buffer << "vshll.s16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshll_s32dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshll_s32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshll_s32dqi.disasm = {
  buffer << "vshll.s32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshll_u8dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshll_u8dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshll_u8dqi.disasm = {
  buffer << "vshll.u8\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshll_u16dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshll_u16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshll_u16dqi.disasm = {
  buffer << "vshll.u16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshll_u32dqi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0xa[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshll_u32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vshll_u32dqi.disasm = {
  buffer << "vshll.u32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshr_s8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vshr_s8di.disasm = {
  buffer << "vshr.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_s8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vshr_s8qi.disasm = {
  buffer << "vshr.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_s16di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vshr_s16di.disasm = {
  buffer << "vshr.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_s16qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vshr_s16qi.disasm = {
  buffer << "vshr.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vshr_s32di.disasm = {
  buffer << "vshr.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vshr_s32qi.disasm = {
  buffer << "vshr.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_s64di( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vshr_s64di.disasm = {
  buffer << "vshr.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_s64qi( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vshr_s64qi.disasm = {
  buffer << "vshr.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_u8di2( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u8di2.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vshr_u8di2.disasm = {
  buffer << "vshr.u8\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_u8qi2( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u8qi2.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vshr_u8qi2.disasm = {
  buffer << "vshr.u8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_u16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vshr_u16di.disasm = {
  buffer << "vshr.u16\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_u16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vshr_u16qi.disasm = {
  buffer << "vshr.u16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_u32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vshr_u32di.disasm = {
  buffer << "vshr.u32\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_u32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vshr_u32qi.disasm = {
  buffer << "vshr.u32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshr_u64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vshr_u64di.disasm = {
  buffer << "vshr.u64\td" << sb << ", d" << sa << ", #" << imm;
};

op vshr_u64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshr_u64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vshr_u64qi.disasm = {
  buffer << "vshr.u64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vshrn_i16dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x8[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshrn_i16dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vshrn_i16dqi.disasm = {
  buffer << "vshrn.i16\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshrn_i32dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x8[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshrn_i32dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vshrn_i32dqi.disasm = {
  buffer << "vshrn.i32\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vshrn_i64dqi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x8[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vshrn_i64dqi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vshrn_i64dqi.disasm = {
  buffer << "vshrn.i64\td" << sb << ", " << qnames[sa] << ", #" << imm;
};

op vsli_8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_8di.disasm = {
  buffer << "vsli.8\td" << sb << ", d" << sa << ", #" << imm;
};

op vsli_8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_8qi.disasm = {
  buffer << "vsli.8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsli_16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_16di.disasm = {
  buffer << "vsli.16\td" << sb << ", d" << sa << ", #" << imm;
};

op vsli_16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_16qi.disasm = {
  buffer << "vsli.16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsli_32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x5[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_32di.disasm = {
  buffer << "vsli.32\td" << sb << ", d" << sa << ", #" << imm;
};

op vsli_32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x5[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_32qi.disasm = {
  buffer << "vsli.32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsli_64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x5[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_64di.disasm = {
  buffer << "vsli.64\td" << sb << ", d" << sa << ", #" << imm;
};

op vsli_64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x5[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsli_64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {imm_};

vsli_64qi.disasm = {
  buffer << "vsli.64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_s8di( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vsra_s8di.disasm = {
  buffer << "vsra.s8\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_s8qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vsra_s8qi.disasm = {
  buffer << "vsra.s8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_s16di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vsra_s16di.disasm = {
  buffer << "vsra.s16\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_s16qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vsra_s16qi.disasm = {
  buffer << "vsra.s16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_s32di( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vsra_s32di.disasm = {
  buffer << "vsra.s32\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_s32qi( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vsra_s32qi.disasm = {
  buffer << "vsra.s32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_s64di( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vsra_s64di.disasm = {
  buffer << "vsra.s64\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_s64qi( 0xef[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_s64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vsra_s64qi.disasm = {
  buffer << "vsra.s64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_u8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vsra_u8di.disasm = {
  buffer << "vsra.u8\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_u8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vsra_u8qi.disasm = {
  buffer << "vsra.u8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_u16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vsra_u16di.disasm = {
  buffer << "vsra.u16\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_u16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vsra_u16qi.disasm = {
  buffer << "vsra.u16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_u32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vsra_u32di.disasm = {
  buffer << "vsra.u32\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_u32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vsra_u32qi.disasm = {
  buffer << "vsra.u32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsra_u64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vsra_u64di.disasm = {
  buffer << "vsra.u64\td" << sb << ", d" << sa << ", #" << imm;
};

op vsra_u64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsra_u64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vsra_u64qi.disasm = {
  buffer << "vsra.u64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsri_8di( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_8di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vsri_8di.disasm = {
  buffer << "vsri.8\td" << sb << ", d" << sa << ", #" << imm;
};

op vsri_8qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : 1[1] : imm_[3] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_8qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {8-imm_};

vsri_8qi.disasm = {
  buffer << "vsri.8\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsri_16di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_16di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vsri_16di.disasm = {
  buffer << "vsri.16\td" << sb << ", d" << sa << ", #" << imm;
};

op vsri_16qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : imm_[4] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_16qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {16-imm_};

vsri_16qi.disasm = {
  buffer << "vsri.16\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsri_32di( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x4[4] : 0[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_32di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vsri_32di.disasm = {
  buffer << "vsri.32\td" << sb << ", d" << sa << ", #" << imm;
};

op vsri_32qi( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[1] : imm_[5] :> <: sb0[4] : 0x4[4] : 1[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_32qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {32-imm_};

vsri_32qi.disasm = {
  buffer << "vsri.32\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vsri_64di( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x4[4] : 2[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_64di.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vsri_64di.disasm = {
  buffer << "vsri.64\td" << sb << ", d" << sa << ", #" << imm;
};

op vsri_64qi( 0xff[8] : 1[1] : shl<4> sb1[1] : imm_[6] :> <: sb0[4] : 0x4[4] : 3[2] : shl<4> sa1[1] : 1[1] : sa0[4] );
vsri_64qi.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, imm : {uint32_t} = {64-imm_};

vsri_64qi.disasm = {
  buffer << "vsri.64\t" << qnames[sb] << ", " << qnames[sa] << ", #" << imm;
};

op vstmdb_mod( 0xed[8] : 0[1] : sbase0[1] : 2[2] : r0[4] :> <: shl<1> sbase1[4] : 0xa[4] : soff[8] );
vstmdb_mod.var sbase : {uint32_t} = {sbase1|sbase0};

vstmdb_mod.disasm = {
  if (r0 == 13) buffer << "vpush\t";
  else          buffer << "vstmdb\t" << DisasmRegister(r0) << "!, ";
  int32_t send = ((int32_t)(sbase + soff))-1;
  if (soff == 1) buffer << "{s" << sbase << "}";
  else           buffer << "{s" << sbase << "-s" << send << "}";
};

op vstmdb_mod1( 0xed[8] : 0[1] : shl<4> dbase1[1] : 2[2] : r0[4] :> <: dbase0[4] : 0xb[4] : ?[1] : doff[6] : 0[1] );
vstmdb_mod1.var dbase : {uint32_t} = {dbase1|dbase0};

vstmdb_mod1.disasm = {
  if (r0 == 13) buffer << "vpush\t";
  else          buffer << "vstmdb\t" << DisasmRegister(r0) << "!, ";
  int32_t dend = ((int32_t)(dbase + doff))-1;
  if (doff == 1)      buffer << "{d" << dbase << "}";
  else if (dend < 32) buffer << "{d" << dbase << "-d" << dend << "}";
  else                buffer << "{d" << dbase << "-<overflow reg d" << dend << ">}";
};

op vstmia( 0xec[8] : 1[1] : sbase0[1] : 0[2] : r0[4] :> <: shl<1> sbase1[4] : 0xa[4] : soff[8] );
vstmia.var sbase : {uint32_t} = {sbase1|sbase0};

vstmia.disasm = {
  int32_t send = ((int32_t)(sbase + soff))-1;
  if (soff == 1) buffer << "vstmia\t" << DisasmRegister(r0) << ", {s" << sbase << "}";
  else           buffer << "vstmia\t" << DisasmRegister(r0) << ", {s" << sbase << "-s" << send << "}";
};

op vstmia_1( 0xec[8] : 1[1] : shl<4> dbase1[1] : 0[2] : r0[4] :> <: dbase0[4] : 0xb[4] : ?[1] : doff[6] : 0[1] );
vstmia_1.var dbase : {uint32_t} = {dbase1|dbase0};

vstmia_1.disasm = {
  int32_t dend = ((int32_t)(dbase + doff))-1;
  if (doff == 1)      buffer << "vstmia\t" << DisasmRegister(r0) << ", {d" << dbase << "}";
  else if (dend < 32) buffer << "vstmia\t" << DisasmRegister(r0) << ", {d" << dbase << "-d" << dend << "}";
  else                buffer << "vstmia\t" << DisasmRegister(r0) << ", {d" << dbase << "-<overflow reg d" << dend << ">}";
};

op vstmia_mod( 0xec[8] : 1[1] : sbase0[1] : 2[2] : r0[4] :> <: shl<1> sbase1[4] : 0xa[4] : soff[8] );
vstmia_mod.var sbase : {uint32_t} = {sbase1|sbase0};

vstmia_mod.disasm = {
  int32_t send = ((int32_t)(sbase + soff))-1;
  if (soff == 1) buffer << "vstmia\t" << DisasmRegister(r0) << "!, {s" << sbase << "}";
  else           buffer << "vstmia\t" << DisasmRegister(r0) << "!, {s" << sbase << "-s" << send << "}";
};

op vstmia_mod1( 0xec[8] : 1[1] : shl<4> dbase1[1] : 2[2] : r0[4] :> <: dbase0[4] : 0xb[4] : ?[1] : doff[6] : 0[1] );
vstmia_mod1.var dbase : {uint32_t} = {dbase1|dbase0};

vstmia_mod1.disasm = {
  int32_t dend = ((int32_t)(dbase + doff))-1;
  if (doff == 1)      buffer << "vstmia\t" << DisasmRegister(r0) << "!, {d" << dbase << "}";
  else if (dend < 32) buffer << "vstmia\t" << DisasmRegister(r0) << "!, {d" << dbase << "-d" << dend << "}";
  else                buffer << "vstmia\t" << DisasmRegister(r0) << "!, {d" << dbase << "-<overflow reg d" << dend << ">}";
};

op vstr( 0xed[8] : pos[1] : sc0[1] : 0[2] : r0[4] :> <: shl<1> sc1[4] : 0xa[4] : shl<2> imm[8] );
vstr.var sc : {uint32_t} = {sc1|sc0};

vstr.disasm = {
  if (pos and not imm) buffer << "vstr\ts" << sc << ", [" << DisasmRegister(r0) << "]";
  else                 buffer << "vstr\ts" << sc << ", [" << DisasmRegister(r0) << ", #" << (pos?"":"-") << imm << "]";
};

op vstr_d( 0xed[8] : pos[1] : shl<4> sc1[1] : 0[2] : r0[4] :> <: sc0[4] : 0xb[4] : shl<2> imm[8] );
vstr_d.var sc : {uint32_t} = {sc1|sc0};

vstr_d.disasm = {
  if (pos and not imm) buffer << "vstr\td" << sc << ", [" << DisasmRegister(r0) << "]";
  else                 buffer << "vstr\td" << sc << ", [" << DisasmRegister(r0) << ", #" << (pos?"":"-") << imm << "]";
}

op vst1_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x8[6] : len[2] : ra[4] );
vst1_8.var sa : {uint32_t} = {sa1|sa0};

vst1_8.disasm = {
  buffer << "vst1.8\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x9[6] : len[2] : ra[4] );
vst1_16.var sa : {uint32_t} = {sa1|sa0};

vst1_16.disasm = {
  buffer << "vst1.16\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xa[6] : len[2] : ra[4] );
vst1_32.var sa : {uint32_t} = {sa1|sa0};

vst1_32.disasm = {
  buffer << "vst1.32\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xb[6] : len[2] : ra[4] );
vst1_64.var sa : {uint32_t} = {sa1|sa0};

vst1_64.disasm = {
  buffer << "vst1.64\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_8_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1c[6] : len[2] : ra[4] );
vst1_8_s2t.var sa : {uint32_t} = {sa1|sa0};

vst1_8_s2t.disasm = {
  buffer << "vst1.8\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x0[4] : part[3] : x[1] : ra[4] );
vst1_8bp.var sa : {uint32_t} = {sa1|sa0};

vst1_8bp.disasm = {
  buffer << "vst1.8\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_8d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x28[6] : len[2] : ra[4] );
vst1_8d.var sa : {uint32_t} = {sa1|sa0};

vst1_8d.disasm = {
  buffer << "vst1.8\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_8t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x18[6] : len[2] : ra[4] );
vst1_8t.var sa : {uint32_t} = {sa1|sa0};

vst1_8t.disasm = {
  buffer << "vst1.8\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_16_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1d[6] : len[2] : ra[4] );
vst1_16_s2t.var sa : {uint32_t} = {sa1|sa0};

vst1_16_s2t.disasm = {
  buffer << "vst1.16\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x4[4] : part[2] : y[1] : x[1] : ra[4] );
vst1_16bp.var sa : {uint32_t} = {sa1|sa0};

vst1_16bp.disasm = {
  buffer << "vst1.16\t";
  if (y) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :16":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst1_16d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x29[6] : len[2] : ra[4] );
vst1_16d.var sa : {uint32_t} = {sa1|sa0};

vst1_16d.disasm = {
  buffer << "vst1.16\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_16t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x19[6] : len[2] : ra[4] );
vst1_16t.var sa : {uint32_t} = {sa1|sa0};

vst1_16t.disasm = {
  buffer << "vst1.16\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_32_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1e[6] : len[2] : ra[4] );
vst1_32_s2t.var sa : {uint32_t} = {sa1|sa0};

vst1_32_s2t.disasm = {
  buffer << "vst1.32\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x8[4] : part[1] : len[3] : ra[4] );
vst1_32bp.var sa : {uint32_t} = {sa1|sa0};

vst1_32bp.disasm = {
  buffer << "vst1.32\t";
  char const* sc = (len==0)?"":(len==3)?" :32":0;
  if (not sc) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "]}, [" << DisasmRegister(rb) << sc << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst1_32d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x2a[6] : len[2] : ra[4] );
vst1_32d.var sa : {uint32_t} = {sa1|sa0};

vst1_32d.disasm = {
  buffer << "vst1.32\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_32t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1a[6] : len[2] : ra[4] );
vst1_32t.var sa : {uint32_t} = {sa1|sa0};

vst1_32t.disasm = {
  buffer << "vst1.32\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_64_s2t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1f[6] : len[2] : ra[4] );
vst1_64_s2t.var sa : {uint32_t} = {sa1|sa0};

vst1_64_s2t.disasm = {
  buffer << "vst1.64\t{d" << sa << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_64bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xc[4] : len[4] : ra[4] );
vst1_64bp.var sa : {uint32_t} = {sa1|sa0};

vst1_64bp.disasm = {
  buffer << "vst1.<illegal width 64>\t";
  char const* sc = (len==0)?"":(len==7)?" :64":0;
  if (not sc) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[0]}, [" << DisasmRegister(rb) << sc << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst1_64d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x2b[6] : len[2] : ra[4] );
vst1_64d.var sa : {uint32_t} = {sa1|sa0};

vst1_64d.disasm = {
  buffer << "vst1.64\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst1_64t( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1b[6] : len[2] : ra[4] );
vst1_64t.var sa : {uint32_t} = {sa1|sa0};

vst1_64t.disasm = {
  buffer << "vst1.64\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xc[6] : len[2] : ra[4] );
vst2_8.var sa : {uint32_t} = {sa1|sa0};

vst2_8.disasm = {
  buffer << "vst2.8\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xd[6] : len[2] : ra[4] );
vst2_16.var sa : {uint32_t} = {sa1|sa0};

vst2_16.disasm = {
  buffer << "vst2.16\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xe[6] : len[2] : ra[4] );
vst2_32.var sa : {uint32_t} = {sa1|sa0};

vst2_32.disasm = {
  buffer << "vst2.32\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xf[6] : len[2] : ra[4] );
vst2_64.var sa : {uint32_t} = {sa1|sa0};

vst2_64.disasm = {
  buffer << "vst2.<illegal width 64>\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_8_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x24[6] : len[2] : ra[4] );
vst2_8_s2d.var sa : {uint32_t} = {sa1|sa0};

vst2_8_s2d.disasm = {
  buffer << "vst2.8\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1[4] : part[3] : x[1] : ra[4] );
vst2_8bp.var sa : {uint32_t} = {sa1|sa0};

vst2_8bp.disasm = {
  buffer << "vst2.8\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :16":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_8d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x20[6] : len[2] : ra[4] );
vst2_8d.var sa : {uint32_t} = {sa1|sa0};

vst2_8d.disasm = {
  buffer << "vst2.8\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_16_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x25[6] : len[2] : ra[4] );
vst2_16_s2d.var sa : {uint32_t} = {sa1|sa0};

vst2_16_s2d.disasm = {
  buffer << "vst2.16\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x5[4] : part[2] : y[1] : x[1] : ra[4] );
vst2_16bp.var sa : {uint32_t} = {sa1|sa0};

vst2_16bp.disasm = {
  buffer << "vst2.16\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1+y) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :32":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst2_16d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x21[6] : len[2] : ra[4] );
vst2_16d.var sa : {uint32_t} = {sa1|sa0};

vst2_16d.disasm = {
  buffer << "vst2.16\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_32_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x26[6] : len[2] : ra[4] );
vst2_32_s2d.var sa : {uint32_t} = {sa1|sa0};

vst2_32_s2d.disasm = {
  buffer << "vst2.32\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x9[4] : part[1] : z[1] : y[1] : x[1] : ra[4] );
vst2_32bp.var sa : {uint32_t} = {sa1|sa0};

vst2_32bp.disasm = {
  buffer << "vst2.32\t";
  if (y) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1+z) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :64":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst2_32d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x22[6] : len[2] : ra[4] );
vst2_32d.var sa : {uint32_t} = {sa1|sa0};

vst2_32d.disasm = {
  buffer << "vst2.32\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_64_s2d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x27[6] : len[2] : ra[4] );
vst2_64_s2d.var sa : {uint32_t} = {sa1|sa0};

vst2_64_s2d.disasm = {
  buffer << "vst2.<illegal width 64>\t{d" << sa << ",d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst2_64bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xd[4] : y[1] : len[3] : ra[4] );
vst2_64bp.var sa : {uint32_t} = {sa1|sa0};

vst2_64bp.disasm = {
  buffer << "vst2.<illegal width 64>\t";
  char const* sc = (len%2)?" :128":"";
  buffer << "{d" << sa << "[0],d" << (sa+1+y) << "[0]}, [" << DisasmRegister(rb) << sc << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst2_64d( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x23[6] : len[2] : ra[4] );
vst2_64d.var sa : {uint32_t} = {sa1|sa0};

vst2_64d.disasm = {
  buffer << "vst2.<illegal width 64>\t{d" << sa << "-d" << (sa+1) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x10[6] : len[2] : ra[4] );
vst3_8.var sa : {uint32_t} = {sa1|sa0};

vst3_8.disasm = {
  buffer << "vst3.8\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x11[6] : len[2] : ra[4] );
vst3_16.var sa : {uint32_t} = {sa1|sa0};

vst3_16.disasm = {
  buffer << "vst3.16\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x12[6] : len[2] : ra[4] );
vst3_32.var sa : {uint32_t} = {sa1|sa0};

vst3_32.disasm = {
  buffer << "vst3.32\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x13[6] : len[2] : ra[4] );
vst3_64.var sa : {uint32_t} = {sa1|sa0};

vst3_64.disasm = {
  buffer << "vst3.<illegal width 64>\t{d" << sa << "-d" << (sa+2) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_8_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x14[6] : len[2] : ra[4] );
vst3_8_s2.var sa : {uint32_t} = {sa1|sa0};

vst3_8_s2.disasm = {
  buffer << "vst3.8\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x2[4] : part[3] : x[1] : ra[4] );
vst3_8bp.var sa : {uint32_t} = {sa1|sa0};

vst3_8bp.disasm = {
  buffer << "vst3.8\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1) << "[" << part << "],d" << (sa+2) << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_16_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x15[6] : len[2] : ra[4] );
vst3_16_s2.var sa : {uint32_t} = {sa1|sa0};

vst3_16_s2.disasm = {
  buffer << "vst3.16\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x6[4] : part[2] : y[1] : x[1] : ra[4] );
vst3_16bp.var sa : {uint32_t} = {sa1|sa0};

vst3_16bp.disasm = {
  buffer << "vst3.16\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst3_32_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x16[6] : len[2] : ra[4] );
vst3_32_s2.var sa : {uint32_t} = {sa1|sa0};

vst3_32_s2.disasm = {
  buffer << "vst3.32\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xa[4] : part[1] : y[1] : x[2] : ra[4] );
vst3_32bp.var sa : {uint32_t} = {sa1|sa0};

vst3_32bp.disasm = {
  buffer << "vst3.32\t";
  if (x) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst3_64_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x17[6] : len[2] : ra[4] );
vst3_64_s2.var sa : {uint32_t} = {sa1|sa0};

vst3_64_s2.disasm = {
  buffer << "vst3.<illegal width 64>\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst3_64bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xe[4] : y[1] : len[3] : ra[4] );
vst3_64bp.var sa : {uint32_t} = {sa1|sa0};

vst3_64bp.disasm = {
  buffer << "vst3.<illegal width 64>\t";
  if (len%2) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[0],d" << (sa+(1+y)) << "[0],d" << (sa+2*(1+y)) << "[0]}, [" << DisasmRegister(rb) << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst4_8( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x0[6] : len[2] : ra[4] );
vst4_8.var sa : {uint32_t} = {sa1|sa0};

vst4_8.disasm = {
  buffer << "vst4.8\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_16( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x1[6] : len[2] : ra[4] );
vst4_16.var sa : {uint32_t} = {sa1|sa0};

vst4_16.disasm = {
  buffer << "vst4.16\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_32( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x2[6] : len[2] : ra[4] );
vst4_32.var sa : {uint32_t} = {sa1|sa0};

vst4_32.disasm = {
  buffer << "vst4.32\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_64( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x3[6] : len[2] : ra[4] );
vst4_64.var sa : {uint32_t} = {sa1|sa0};

vst4_64.disasm = {
  buffer << "vst4.<illegal width 64>\t{d" << sa << "-d" << (sa+3) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_8_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x4[6] : len[2] : ra[4] );
vst4_8_s2.var sa : {uint32_t} = {sa1|sa0};

vst4_8_s2.disasm = {
  buffer << "vst4.8\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_8bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x3[4] : part[3] : x[1] : ra[4] );
vst4_8bp.var sa : {uint32_t} = {sa1|sa0};

vst4_8bp.disasm = {
  buffer << "vst4.8\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+1) << "[" << part << "],d" << (sa+2) << "[" << part << "],d" << (sa+3) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :32":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst4_16_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x5[6] : len[2] : ra[4] );
vst4_16_s2.var sa : {uint32_t} = {sa1|sa0};

vst4_16_s2.disasm = {
  buffer << "vst4.16\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_16bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x7[4] : part[2] : y[1] : x[1] : ra[4] );
vst4_16bp.var sa : {uint32_t} = {sa1|sa0};

vst4_16bp.disasm = {
  buffer << "vst4.16\t";
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "],d" << (sa+3*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << (x?" :64":"") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst4_32_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x6[6] : len[2] : ra[4] );
vst4_32_s2.var sa : {uint32_t} = {sa1|sa0};

vst4_32_s2.disasm = {
  buffer << "vst4.32\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_32bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xb[4] : part[1] : y[1] : x[2] : ra[4] );
vst4_32bp.var sa : {uint32_t} = {sa1|sa0};

vst4_32bp.disasm = {
  buffer << "vst4.32\t";
  if (x == 3) { buffer << '\t'; return; }
  buffer << "{d" << sa << "[" << part << "],d" << (sa+(1+y)) << "[" << part << "],d" << (sa+2*(1+y)) << "[" << part << "],d" << (sa+3*(1+y)) << "[" << part << "]}, [" << DisasmRegister(rb) << ((x==0)?"":(x==1)?" :64":" :128") << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vst4_64_s2( 0xf9[8] : 0[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0x7[6] : len[2] : ra[4] );
vst4_64_s2.var sa : {uint32_t} = {sa1|sa0};

vst4_64_s2.disasm = {
  buffer << "vst4.<illegal width 64>\t{d" << sa << ",d" << (sa+2) << ",d" << (sa+4) << ",d" << (sa+6) << "}, [" << DisasmRegister(rb);
  if (len) buffer << " :" << ((32 << len));
  buffer << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
}

op vst4_64bp( 0xf9[8] : 1[1] : shl<4> sa1[1] : 0[2] : rb[4] :> <: sa0[4] : 0xf[4] : y[1] : len[3] : ra[4] );
vst4_64bp.var sa : {uint32_t} = {sa1|sa0};

vst4_64bp.disasm = {
  buffer << "vst4.<illegal width 64>\t";
  char const* sc = (len%2)?" :256":"";
  buffer << "{d" << sa << "[0],d" << (sa+(1+y)) << "[0],d" << (sa+2*(1+y)) << "[0],d" << (sa+3*(1+y)) << "[0]}, [" << DisasmRegister(rb) << sc << "]";
  if      (ra == 13) buffer << "!";
  else if (ra != 15) buffer << ", " << DisasmRegister(ra);
};

op vsub_f32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_f32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_f32d.disasm = {
  buffer << "vsub.f32\td" << sb << ", d" << sc << ", d" << sa;
};

op vsub_f32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_f32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vsub_f32q.disasm = {
  buffer << "vsub.f32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsub_f64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_f64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_f64d.disasm = {
  buffer << "vsub.f<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vsub_f64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0xd[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_f64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vsub_f64q.disasm = {
  buffer << "vsub.f<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsub_i8d( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i8d.disasm = {
  buffer << "vsub.i8\td" << sb << ", d" << sc << ", d" << sa;
};

op vsub_i8q( 0xff[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i8q.disasm = {
  buffer << "vsub.i8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsub_i16d( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i16d.disasm = {
  buffer << "vsub.i16\td" << sb << ", d" << sc << ", d" << sa;
};

op vsub_i16q( 0xff[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i16q.disasm = {
  buffer << "vsub.i16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsub_i32d( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i32d.disasm = {
  buffer << "vsub.i32\td" << sb << ", d" << sc << ", d" << sa;
};

op vsub_i32q( 0xff[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i32q.disasm = {
  buffer << "vsub.i32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsub_i64d( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i64d.disasm = {
  buffer << "vsub.i64\td" << sb << ", d" << sc << ", d" << sa;
};

op vsub_i64q( 0xff[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsub_i64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsub_i64q.disasm = {
  buffer << "vsub.i64\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsubhn_i16dq( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubhn_i16dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubhn_i16dq.disasm = {
  buffer << "vsubhn.i16\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsubhn_i32dq( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubhn_i32dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubhn_i32dq.disasm = {
  buffer << "vsubhn.i32\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsubhn_i64dq( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x6[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubhn_i64dq.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubhn_i64dq.disasm = {
  buffer << "vsubhn.i64\td" << sb << ", " << qnames[sc] << ", " << qnames[sa];
};

op vsubl_s8qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_s8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_s8qd.disasm = {
  buffer << "vsubl.s8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubl_s16qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_s16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_s16qd.disasm = {
  buffer << "vsubl.s16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubl_s32qd( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_s32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_s32qd.disasm = {
  buffer << "vsubl.s32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubl_u8qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_u8qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_u8qd.disasm = {
  buffer << "vsubl.u8\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubl_u16qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_u16qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_u16qd.disasm = {
  buffer << "vsubl.u16\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubl_u32qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_u32qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_u32qd.disasm = {
  buffer << "vsubl.u32\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubl_u64qd( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x2[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubl_u64qd.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubl_u64qd.disasm = {
  buffer << "vsubl.u<illegal width 64>\t" << qnames[sb] << ", d" << sc << ", d" << sa;
};

op vsubw_s8( 0xef[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_s8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_s8.disasm = {
  buffer << "vsubw.s8\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vsubw_s16( 0xef[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_s16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_s16.disasm = {
  buffer << "vsubw.s16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vsubw_s32( 0xef[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_s32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_s32.disasm = {
  buffer << "vsubw.s32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vsubw_u8( 0xff[8] : 1[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_u8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_u8.disasm = {
  buffer << "vsubw.u8\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vsubw_u16( 0xff[8] : 1[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_u16.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_u16.disasm = {
  buffer << "vsubw.u16\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vsubw_u32( 0xff[8] : 1[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_u32.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_u32.disasm = {
  buffer << "vsubw.u32\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vsubw_u64( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x3[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vsubw_u64.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vsubw_u64.disasm = {
  buffer << "vsubw.u<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", d" << sa;
};

op vswp_d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x0[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vswp_d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vswp_d.disasm = {
  buffer << "vswp\td" << sb << ", d" << sa;
};

op vswp_q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x0[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vswp_q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vswp_q.disasm = {
  buffer << "vswp\t" << qnames[sb] << ", " << qnames[sa];
};

op vtbl_8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 2[2] : x[2] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtbl_8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vtbl_8d.disasm = {
  if (x == 0)         buffer << "vtbl.8\td" << sb << ", {d" << sc << "}, d" << sa;
  else if ((sc+x)<32) buffer << "vtbl.8\td" << sb << ", {d" << sc << "-d" << (sc+x) << "}, d" << sa;
  else                buffer << "vtbl.8\td" << sb << ", {d" << sc << "-<overflow reg d" << (sc+x) << "}, d" << sa;
};

op vtbx_8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 2[2] : x[2] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtbx_8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vtbx_8d.disasm = {
  if (x == 0)         buffer << "vtbx.8\td" << sb << ", {d" << sc << "}, d" << sa;
  else if ((sc+x)<32) buffer << "vtbx.8\td" << sb << ", {d" << sc << "-d" << (sc+x) << "}, d" << sa;
  else                buffer << "vtbx.8\td" << sb << ", {d" << sc << "-<overflow reg d" << (sc+x) << "}, d" << sa;
};

op vtrn_8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_8d.disasm = {
  buffer << "vtrn.8\td" << sb << ", d" << sa;
};

op vtrn_8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_8q.disasm = {
  buffer << "vtrn.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vtrn_16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_16d.disasm = {
  buffer << "vtrn.16\td" << sb << ", d" << sa;
};

op vtrn_16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_16q.disasm = {
  buffer << "vtrn.16\t" << qnames[sb] << ", " << qnames[sa];
};

op vtrn_32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_32d.disasm = {
  buffer << "vtrn.32\td" << sb << ", d" << sa;
};

op vtrn_32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_32q.disasm = {
  buffer << "vtrn.32\t" << qnames[sb] << ", " << qnames[sa];
};

op vtrn_64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x0[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_64d.disasm = {
  buffer << "vtrn.<illegal width 64>\td" << sb << ", d" << sa;
};

op vtrn_64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x0[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vtrn_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vtrn_64q.disasm = {
  buffer << "vtrn.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vtst_i8( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_i8.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vtst_i8.disasm = {
  buffer << "vtst.8\td" << sb << ", d" << sc << ", d" << sa;
};

op vtst_i8q( 0xef[8] : 0[1] : shl<4> sb1[1] : 0[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_i8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vtst_i8q.disasm = {
  buffer << "vtst.8\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vtst_16d( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vtst_16d.disasm = {
  buffer << "vtst.16\td" << sb << ", d" << sc << ", d" << sa;
};

op vtst_16q( 0xef[8] : 0[1] : shl<4> sb1[1] : 1[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vtst_16q.disasm = {
  buffer << "vtst.16\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vtst_32d( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vtst_32d.disasm = {
  buffer << "vtst.32\td" << sb << ", d" << sc << ", d" << sa;
};

op vtst_32q( 0xef[8] : 0[1] : shl<4> sb1[1] : 2[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vtst_32q.disasm = {
  buffer << "vtst.32\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vtst_64d( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 0[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0}, sc : {uint32_t} = {sc1|sc0};

vtst_64d.disasm = {
  buffer << "vtst.<illegal width 64>\td" << sb << ", d" << sc << ", d" << sa;
};

op vtst_64q( 0xef[8] : 0[1] : shl<4> sb1[1] : 3[2] : sc0[4] :> <: sb0[4] : 0x8[4] : shl<4> sc1[1] : 1[1] : shl<4> sa1[1] : 1[1] : sa0[4] );
vtst_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb0|sb1}, sc : {uint32_t} = {sc1|sc0};

vtst_64q.disasm = {
  buffer << "vtst.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sc] << ", " << qnames[sa];
};

op vuzp_8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_8d.disasm = {
  buffer << "vuzp.8\td" << sb << ", d" << sa;
};

op vuzp_8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_8q.disasm = {
  buffer << "vuzp.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vuzp_16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_16d.disasm = {
  buffer << "vuzp.16\td" << sb << ", d" << sa;
};

op vuzp_16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_16q.disasm = {
  buffer << "vuzp.16\t" << qnames[sb] << ", " << qnames[sa];
};

op vuzp_32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_32d.disasm = {
  buffer << "vuzp.32\td" << sb << ", d" << sa;
};

op vuzp_32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_32q.disasm = {
  buffer << "vuzp.32\t" << qnames[sb] << ", " << qnames[sa];
};

op vuzp_64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x1[4] : 0[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_64d.disasm = {
  buffer << "vuzp.<illegal width 64>\td" << sb << ", d" << sa;
};

op vuzp_64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x1[4] : 1[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vuzp_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vuzp_64q.disasm = {
  buffer << "vuzp.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

op vzip_8d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_8d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_8d.disasm = {
  buffer << "vzip.8\td" << sb << ", d" << sa;
};

op vzip_8q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x2[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_8q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_8q.disasm = {
  buffer << "vzip.8\t" << qnames[sb] << ", " << qnames[sa];
};

op vzip_16d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_16d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_16d.disasm = {
  buffer << "vzip.16\td" << sb << ", d" << sa;
};

op vzip_16q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0x6[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_16q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_16q.disasm = {
  buffer << "vzip.16\t" << qnames[sb] << ", " << qnames[sa];
};

op vzip_32d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_32d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_32d.disasm = {
  buffer << "vzip.32\td" << sb << ", d" << sa;
};

op vzip_32q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xa[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_32q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_32q.disasm = {
  buffer << "vzip.32\t" << qnames[sb] << ", " << qnames[sa];
};

op vzip_64d( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x1[4] : 2[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_64d.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_64d.disasm = {
  buffer << "vzip.<illegal width 64>\td" << sb << ", d" << sa;
};

op vzip_64q( 0xff[8] : 1[1] : shl<4> sb1[1] : 3[2] : 0xe[4] :> <: sb0[4] : 0x1[4] : 3[2] : shl<4> sa1[1] : 0[1] : sa0[4] );
vzip_64q.var sa : {uint32_t} = {sa1|sa0}, sb : {uint32_t} = {sb1|sb0};

vzip_64q.disasm = {
  buffer << "vzip.<illegal width 64>\t" << qnames[sb] << ", " << qnames[sa];
};

vldmdb_mod.specialize( ldc_3, ldcl_2 );
vldmdb_mod1.specialize( ldc_3, ldcl_2 );
vldmia.specialize( ldc, ldcl_1 );
vldmia_1.specialize( ldc, ldcl_1 );
vldmia_mod.specialize( ldc_1, ldcl );
vldmia_mod1.specialize( ldc_1, ldcl );
vldr.specialize( ldc_2, ldcl_2 );
vldr_d.specialize( ldc_2, ldcl_2 );
vstmdb_mod.specialize( stc_3, stcl_2 );
vstmdb_mod1.specialize( stc_3, stcl_2 );
vstmia.specialize( stc, stcl_1 );
vstmia_1.specialize( stc, stcl_1 );
vstmia_mod.specialize( stc_1, stcl );
vstmia_mod1.specialize( stc_1, stcl );
vstr.specialize( stc_2, stcl_2 );
vstr_d.specialize( stc_2, stcl_2 );
