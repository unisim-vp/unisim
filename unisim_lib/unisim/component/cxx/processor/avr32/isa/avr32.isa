/*
 *  Copyright (c) 2014,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Julien Lisita (julien.lisita@cea.fr)
 *          Gilles Mouchard (gilles.mouchard@cea.fr)
 */

decl {

#include <unisim/util/arithmetic/arithmetic.hh>
#include <iosfwd>
#include <cmath>

using namespace unisim::util::arithmetic;

}

set endianness big
set codetype buffer
set addressclass {typename CONFIG::address_t}
template <{class} {CONFIG}>

impl {

static const char *REG_NAME[16] = {
	"r0", "r1",  "r2",  "r3",  "r4", "r5", "r6", "r7",
	"r8", "r9", "r10", "r11", "r12", "sp", "lr", "pc"
};

static const char *BYTE_PART_NAME[4] = {
	"t",  "u","l",  "b"
};

static const char *HALF_WORD_PART_NAME[2] = {
	"t",  "b"
};

static const char *COND[16] = {
	"eq",  "ne", "cc/hs", "cs/lo", "ge", "lt", "mi", "pl","ls","gt","le","hi","vs","vc","qs","al" 
};


}

action {bool} execute({typename CONFIG::STATE *} {cpu}) {
	return false;
}

action {void} disasm({typename CONFIG::STATE *} {cpu}, {std::ostream&} {os}) {
	os << "???";
}

include "unisim/component/cxx/processor/avr32/isa/arithmetic_operations.isa" 
include "unisim/component/cxx/processor/avr32/isa/bit_shift_operations.isa"
include "unisim/component/cxx/processor/avr32/isa/coprocessor_interface.isa"
include "unisim/component/cxx/processor/avr32/isa/data_transfer_operations.isa"
include "unisim/component/cxx/processor/avr32/isa/dsp_operations.isa"
include "unisim/component/cxx/processor/avr32/isa/instruction_flow.isa"
include "unisim/component/cxx/processor/avr32/isa/logic_operations.isa"
include "unisim/component/cxx/processor/avr32/isa/multiplication_operations.isa"
include "unisim/component/cxx/processor/avr32/isa/simd_operations.isa"
include "unisim/component/cxx/processor/avr32/isa/system_control_operations.isa"

