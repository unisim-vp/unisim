/*
 *  Copyright (c) 2008,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Reda   Nouacer  (reda.nouacer@cea.fr)
 */


namespace unisim::component::cxx::processor::hcs12x

big_endian	/* instruction endian */

decoder( cisc )

// subdecoder XB
include "xb_sub.isa"
subdecoder unisim::component::cxx::processor::hcs12x::XB XB

address {uint16_t}
//subdecoder XB {unisim::component::cxx::processor::hcs12x::XB} [8;24]

decl {
#include <unisim/component/cxx/processor/hcs12x/cpu.hh>
#include <unisim/component/cxx/processor/hcs12x/concatenated_register.hh>
#include <iostream>
#include <iosfwd>
}

impl {
#include <unisim/component/cxx/processor/hcs12x/xb.hh>
}

action {void} execute({CPU *} {cpu}) {
	printf("Unknown instruction\n");

	exit(-1);
}

action {void} disasm({ostream&} {sink}) {
	sink << "?";
}

action {uint8_t} getCycles () { return 2; }

include "load_store.isa"
include "transfer_exchange.isa"
include "move.isa"
include "addition_substraction.isa"
include "decrement_increment.isa"
include "compare_test.isa"
include "boolean-logic.isa"
include "bit.isa"
include "multiplication_division.isa"
include "branch.isa"
include "stacking.isa"
include "fuzzy-logic.isa"
include "others.isa"

