package unisim-e5500fpv
version 0.1.0
full_name 'UNISIM FPV e5500 Floating-Point verification'
author 'Yves Lhuillier <yves.lhuillier@cea.fr>'

use genisslib genisslib
import genisslib

use unisim_lib

import unisim/kernel/logger/console
import unisim/component/cxx/processor/powerpc
import unisim/component/cxx/processor/opcache
import unisim/component/cxx/memory/sparse
import unisim/util/reg/core
import unisim/util/random
import unisim/util/os/linux_os
import unisim/service/interfaces/memory
import unisim/service/interfaces/memory_access_reporting
import unisim/service/interfaces/memory_injection
import unisim/service/interfaces/registers
import unisim/service/interfaces/linux_os
import unisim/service/interfaces/debug_yielding
import unisim/service/interfaces/disassembly
import unisim/service/interfaces/trap_reporting
import unisim/service/interfaces/registers
import unisim/service/interfaces/blob
import unisim/service/debug/debugger
import unisim/service/debug/inline_debugger
import unisim/service/debug/gdb_server

import unisim/component/cxx/processor/powerpc/isa
import unisim/component/cxx/processor/powerpc/isa/book_i/branch
import unisim/component/cxx/processor/powerpc/isa/book_i/cond_reg
import unisim/component/cxx/processor/powerpc/isa/book_i/fixed_point
import unisim/component/cxx/processor/powerpc/isa/book_i/floating_point
import unisim/component/cxx/processor/powerpc/isa/book_i/legacy_int_mac
import unisim/component/cxx/processor/powerpc/isa/book_i/legacy_move_assist
import unisim/component/cxx/processor/powerpc/isa/book_i/syscall
import unisim/component/cxx/processor/powerpc/isa/book_ii
import unisim/component/cxx/processor/powerpc/isa/book_iii_e
import unisim/component/cxx/processor/powerpc/isa/book_e

import libc/inttypes
import std/iostream
import std/sstream
import std/string
import std/vector
import std/map
import std/stdexcept

import m4/ax_cflags_warn_all

copy source isa header template data m4 prog

UNISIM_LIB_SIMULATOR_SOURCE_FILES="$(files source)"

UNISIM_LIB_SIMULATOR_ISA_FILES="$(files isa)"

UNISIM_LIB_SIMULATOR_HEADER_FILES="${UNISIM_LIB_SIMULATOR_ISA_FILES} $(files header) $(files template)"

UNISIM_LIB_SIMULATOR_M4_FILES="$(files m4)"

UNISIM_LIB_SIMULATOR_DATA_FILES="$(files data)"

UNISIM_SIMULATOR_TOP_ISA="top_ppc64.isa"

UNISIM_SIMULATOR_SOURCE_FILES="\
main.cc \
linuxsystem.cc \
debugger.cc \
core.cc \
arch.cc \
simfloat.cc \
"

UNISIM_SIMULATOR_HEADER_FILES="\
${UNISIM_SIMULATOR_TOP_ISA} \
linuxsystem.hh \
debugger.hh \
core.hh \
arch.hh \
simfloat.hh \
types.hh \
"

UNISIM_SIMULATOR_DATA_FILES="\
COPYING \
INSTALL \
NEWS \
README \
AUTHORS \
ChangeLog \
"

UNISIM_SIMULATOR_FILES=" \
${UNISIM_SIMULATOR_SOURCE_FILES} \
${UNISIM_SIMULATOR_HEADER_FILES} \
${UNISIM_SIMULATOR_DATA_FILES} \
"

dist_copy ${UNISIM_SIMULATOR_FILES}

# Simulator

output_configure_ac <(cat << EOF
$(lines ac_common_header)
$(lines ac)
$(lines ac_common_footer)
EOF
)

output_makefile_am <(cat << EOF
$(lines am_common_header)

# Program
bin_PROGRAMS = $(package)-$(version)
$(am_package)_$(am_version)_SOURCES = ${UNISIM_SIMULATOR_SOURCE_FILES}
$(am_package)_$(am_version)_LDFLAGS = -static-libtool-libs
$(am_package)_$(am_version)_LDADD = lib$(package)-$(version).la

# Static Library
noinst_LTLIBRARIES = lib$(package)-$(version).la
lib$(am_package)_$(am_version)_la_SOURCES = ${UNISIM_LIB_SIMULATOR_SOURCE_FILES}
lib$(am_package)_$(am_version)_la_LDFLAGS = -static
nodist_lib$(am_package)_$(am_version)_la_SOURCES = top_ppc64.cc

noinst_HEADERS = ${UNISIM_LIB_SIMULATOR_HEADER_FILES} ${UNISIM_SIMULATOR_HEADER_FILES}
EXTRA_DIST = ${UNISIM_LIB_SIMULATOR_M4_FILES}
sharedir = \$(prefix)/share/$(package)-$(version)
dist_share_DATA = ${UNISIM_SIMULATOR_DATA_FILES}
nobase_dist_share_DATA = ${UNISIM_LIB_SIMULATOR_DATA_FILES}

BUILT_SOURCES=\
	\$(top_builddir)/top_ppc64.hh\
	\$(top_builddir)/top_ppc64.cc\

CLEANFILES=\
	\$(top_builddir)/top_ppc64.hh\
	\$(top_builddir)/top_ppc64.cc\

\$(top_builddir)/top_ppc64.cc: \$(top_builddir)/top_ppc64.hh
\$(top_builddir)/top_ppc64.hh: ${UNISIM_LIB_SIMULATOR_ISA_FILES} ${UNISIM_SIMULATOR_TOP_ISA}
	\$(PYTHON_BIN) \$(top_srcdir)/genisslib/genisslib.py -o \$(top_builddir)/top_ppc64 -w 8 -I \$(top_srcdir) \$(top_srcdir)/${UNISIM_SIMULATOR_TOP_ISA}

$(lines am)
EOF
)

build_configure
