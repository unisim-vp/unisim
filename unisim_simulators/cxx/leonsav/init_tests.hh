/*
 *  Copyright (c) 2019-2020,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Yves Lhuillier (yves.lhuillier@cea.fr)
 */

template <typename R>
void init_tests( R& repos )
{
  repos.add( 0x80074f00, "add %r29, %r0, %r0" );
  repos.add( 0x800150b6, "add %r5, %r22, %r0" );
  repos.add( 0x80019252, "add %r6, %r18, %r0" );
  repos.add( 0x9e0001d5, "add %r0, %r21, %r15" );
  repos.add( 0x8a000a8b, "add %r0, %r11, %r5" );
  repos.add( 0x8e019ba0, "add %r6, %r0, %r7" );
  repos.add( 0x8c02cee0, "add %r11, %r0, %r6" );
  repos.add( 0x960281aa, "add %r10, %r10, %r11" );
  repos.add( 0x8a005281, "add %r1, %r1, %r5" );
  repos.add( 0xa4049f89, "add %r18, %r9, %r18" );
  repos.add( 0x8c03dc66, "add %r15, %r6, %r6" );
  repos.add( 0xa600436f, "add %r1, %r15, %r19" );
  repos.add( 0x9e07455c, "add %r29, %r28, %r15" );
  repos.add( 0x80848812, "addcc %r18, %r18, %r0" );
  repos.add( 0x828016a2, "addcc %r0, %r2, %r1" );
  repos.add( 0x96800d9a, "addcc %r0, %r26, %r11" );
  repos.add( 0xa8814840, "addcc %r5, %r0, %r20" );
  repos.add( 0x868117c0, "addcc %r4, %r0, %r3" );
  repos.add( 0x9c830dec, "addcc %r12, %r12, %r14" );
  repos.add( 0x8485c777, "addcc %r23, %r23, %r2" );
  repos.add( 0xb482db7a, "addcc %r11, %r26, %r26" );
  repos.add( 0x9c859dee, "addcc %r22, %r14, %r14" );
  repos.add( 0xae85cb61, "addcc %r23, %r1, %r23" );
  repos.add( 0x82805592, "addcc %r1, %r18, %r1" );
  repos.add( 0x9881084f, "addcc %r4, %r15, %r12" );
  repos.add( 0x8c83096e, "addcc %r12, %r14, %r6" );
  repos.add( 0x9a802b84, "addcc %r0, 2948, %r13" );
  repos.add( 0x8e803f6c, "addcc %r0, -148, %r7" );
  repos.add( 0x80823e4f, "addcc %r8, -433, %r0" );
  repos.add( 0x80813639, "addcc %r4, -2503, %r0" );
  repos.add( 0x8084a5f9, "addcc %r18, 1529, %r0" );
  repos.add( 0xa8852c9e, "addcc %r20, 3230, %r20" );
  repos.add( 0x8885f7f7, "addcc %r23, -2057, %r4" );
  repos.add( 0xac84375f, "addcc %r16, -2209, %r22" );
  repos.add( 0x8886b97f, "addcc %r26, -1665, %r4" );
  repos.add( 0xba86bf47, "addcc %r26, -185, %r29" );
  repos.add( 0x84837bd5, "addcc %r13, -1067, %r2" );
  repos.add( 0xaa8239ae, "addcc %r8, -1618, %r21" );
  repos.add( 0xa085b667, "addcc %r22, -2457, %r16" );
  repos.add( 0x8881ba8b, "addcc %r6, -1397, %r4" );
  repos.add( 0xac86bd46, "addcc %r26, -698, %r22" );
  repos.add( 0xba85719c, "addcc %r21, -3684, %r29" );
  repos.add( 0xa685f07c, "addcc %r23, -3972, %r19" );
  repos.add( 0x9e82f684, "addcc %r11, -2428, %r15" );
  repos.add( 0xaa82f2a1, "addcc %r11, -3423, %r21" );
  repos.add( 0xb4853281, "addcc %r20, -3455, %r26" );
  repos.add( 0xa083b810, "addcc %r14, -2032, %r16" );
  repos.add( 0x9883ebf9, "addcc %r15, 3065, %r12" );
  repos.add( 0x8c806dcd, "addcc %r1, 3533, %r6" );
  repos.add( 0x8c85a7ae, "addcc %r22, 1966, %r6" );
  repos.add( 0x9082e87b, "addcc %r11, 2171, %r8" );
  repos.add( 0xac86e7a5, "addcc %r27, 1957, %r22" );
  repos.add( 0x9a84ee8a, "addcc %r19, 3722, %r13" );
  repos.add( 0xba85699c, "addcc %r21, 2460, %r29" );
  repos.add( 0x8281a166, "addcc %r6, 358, %r1" );
  repos.add( 0xaa83eb12, "addcc %r15, 2834, %r21" );
  repos.add( 0xa881222c, "addcc %r4, 556, %r20" );
  repos.add( 0x94852223, "addcc %r20, 547, %r10" );
  repos.add( 0x9e82a520, "addcc %r10, 1312, %r15" );
  repos.add( 0x8285640c, "addcc %r21, 1036, %r1" );
  repos.add( 0x9283e440, "addcc %r15, 1088, %r9" );
  repos.add( 0x80003fe6, "add %r0, -26, %r0" );
  repos.add( 0x8c0022be, "add %r0, 702, %r6" );
  repos.add( 0x8002b378, "add %r10, -3208, %r0" );
  repos.add( 0xb606f5c0, "add %r27, -2624, %r27" );
  repos.add( 0x8c01bf60, "add %r6, -160, %r6" );
  repos.add( 0xba04e80a, "add %r19, 2058, %r29" );
  repos.add( 0xa603a888, "add %r14, 2184, %r19" );
  repos.add( 0xb802aa22, "add %r10, 2594, %r28" );
  repos.add( 0xb605a1c4, "add %r22, 452, %r27" );
  repos.add( 0xaa04ac26, "add %r18, 3110, %r21" );
  repos.add( 0x94012923, "add %r4, 2339, %r10" );
  repos.add( 0x900565b2, "add %r21, 1458, %r8" );
  repos.add( 0x94032d2a, "add %r12, 3370, %r10" );
  repos.add( 0x8a06edca, "add %r27, 3530, %r5" );
  repos.add( 0x9400aa9e, "add %r2, 2718, %r10" );
  repos.add( 0x8e036e5b, "add %r13, 3675, %r7" );
  repos.add( 0x88056f8e, "add %r21, 3982, %r4" );
  repos.add( 0x8e037201, "add %r13, -3583, %r7" );
  repos.add( 0xb605b890, "add %r22, -1904, %r27" );
  repos.add( 0x98047244, "add %r17, -3516, %r12" );
  repos.add( 0xb80330d4, "add %r12, -3884, %r28" );
  repos.add( 0x8a06b261, "add %r26, -3487, %r5" );
  repos.add( 0xac01f8d8, "add %r7, -1832, %r22" );
  repos.add( 0x960276c2, "add %r9, -2366, %r11" );
  repos.add( 0x96077b26, "add %r29, -1242, %r11" );
  repos.add( 0x9c00f86d, "add %r3, -1939, %r14" );
  repos.add( 0x9200f27e, "add %r3, -3458, %r9" );
  repos.add( 0x82023b2e, "add %r8, -1234, %r1" );
  repos.add( 0x860337dc, "add %r12, -2084, %r3" );
  repos.add( 0xb802bab7, "add %r10, -1353, %r28" );
  repos.add( 0x9600ffae, "add %r3, -82, %r11" );
  repos.add( 0xa6073daf, "add %r28, -593, %r19" );
  repos.add( 0x8040d1fc, "addx %r3, %r28, %r0" );
  repos.add( 0x8044845c, "addx %r18, %r28, %r0" );
  repos.add( 0xa44008fb, "addx %r0, %r27, %r18" );
  repos.add( 0x8642d520, "addx %r11, %r0, %r3" );
  repos.add( 0x8c40dc03, "addx %r3, %r3, %r6" );
  repos.add( 0xb6418c46, "addx %r6, %r6, %r27" );
  repos.add( 0x8e41c884, "addx %r7, %r4, %r7" );
  repos.add( 0x84408949, "addx %r2, %r9, %r2" );
  repos.add( 0x9c4343ee, "addx %r13, %r14, %r14" );
  repos.add( 0x964213eb, "addx %r8, %r11, %r11" );
  repos.add( 0x9e411bf1, "addx %r4, %r17, %r15" );
  repos.add( 0xa6429672, "addx %r10, %r18, %r19" );
  repos.add( 0xbac008f7, "addxcc %r0, %r23, %r29" );
  repos.add( 0x9ac01b35, "addxcc %r0, %r21, %r13" );
  repos.add( 0xb4c75c40, "addxcc %r29, %r0, %r26" );
  repos.add( 0xa0c50c80, "addxcc %r20, %r0, %r16" );
  repos.add( 0x96c41f50, "addxcc %r16, %r16, %r11" );
  repos.add( 0x9ac14285, "addxcc %r5, %r5, %r13" );
  repos.add( 0x80c153a4, "addxcc %r5, %r4, %r0" );
  repos.add( 0x80c31087, "addxcc %r12, %r7, %r0" );
  repos.add( 0x8cc18fce, "addxcc %r6, %r14, %r6" );
  repos.add( 0x8ec2c7f4, "addxcc %r11, %r20, %r7" );
  repos.add( 0x8ac053cd, "addxcc %r1, %r13, %r5" );
  repos.add( 0x80c37454, "addxcc %r13, -2988, %r0" );
  repos.add( 0x80c233a0, "addxcc %r8, -3168, %r0" );
  repos.add( 0xaec5f2b7, "addxcc %r23, -3401, %r23" );
  repos.add( 0x8ec1f5f6, "addxcc %r7, -2570, %r7" );
  repos.add( 0x80c4fbd7, "addxcc %r19, -1065, %r0" );
  repos.add( 0xa2c476bf, "addxcc %r17, -2369, %r17" );
  repos.add( 0x80c03027, "addxcc %r0, -4057, %r0" );
  repos.add( 0x80c033ca, "addxcc %r0, -3126, %r0" );
  repos.add( 0xb8c5e054, "addxcc %r23, 84, %r28" );
  repos.add( 0x9ac3a700, "addxcc %r14, 1792, %r13" );
  repos.add( 0xacc4e125, "addxcc %r19, 293, %r22" );
  repos.add( 0x8ac2611a, "addxcc %r9, 282, %r5" );
  repos.add( 0x98c26c38, "addxcc %r9, 3128, %r12" );
  repos.add( 0x84c2e6c2, "addxcc %r11, 1730, %r2" );
  repos.add( 0x94c1a732, "addxcc %r6, 1842, %r10" );
  repos.add( 0x9cc4e94e, "addxcc %r19, 2382, %r14" );
  repos.add( 0x90c3ecf4, "addxcc %r15, 3316, %r8" );
  repos.add( 0xa2c326bc, "addxcc %r12, 1724, %r17" );
  repos.add( 0x86c6e9bd, "addxcc %r27, 2493, %r3" );
  repos.add( 0x94c0e4ef, "addxcc %r3, 1263, %r10" );
  repos.add( 0x86c0af8f, "addxcc %r2, 3983, %r3" );
  repos.add( 0xa2c42f3b, "addxcc %r16, 3899, %r17" );
  repos.add( 0x86c43084, "addxcc %r16, -3964, %r3" );
  repos.add( 0xb8c23061, "addxcc %r8, -3999, %r28" );
  repos.add( 0x8cc2f340, "addxcc %r11, -3264, %r6" );
  repos.add( 0x92c1324c, "addxcc %r4, -3508, %r9" );
  repos.add( 0xa8c23485, "addxcc %r8, -2939, %r20" );
  repos.add( 0xa8c3fa8c, "addxcc %r15, -1396, %r20" );
  repos.add( 0xaac5343a, "addxcc %r20, -3014, %r21" );
  repos.add( 0x8ac0b556, "addxcc %r2, -2730, %r5" );
  repos.add( 0xbac27b51, "addxcc %r9, -1199, %r29" );
  repos.add( 0xb8c13ce5, "addxcc %r4, -795, %r28" );
  repos.add( 0xaac53ec3, "addxcc %r20, -317, %r21" );
  repos.add( 0xa8c27dab, "addxcc %r9, -597, %r20" );
  repos.add( 0x84c2bc77, "addxcc %r10, -905, %r2" );
  repos.add( 0x8ec33fe9, "addxcc %r12, -23, %r7" );
  repos.add( 0xa2c133df, "addxcc %r4, -3105, %r17" );
  repos.add( 0x9ac02050, "addxcc %r0, 80, %r13" );
  repos.add( 0xa8c031b6, "addxcc %r0, -3658, %r20" );
  repos.add( 0x8042f707, "addx %r11, -2297, %r0" );
  repos.add( 0x80437d36, "addx %r13, -714, %r0" );
  repos.add( 0x984023e8, "addx %r0, 1000, %r12" );
  repos.add( 0x88402bd2, "addx %r0, 3026, %r4" );
  repos.add( 0xa0403de7, "addx %r0, -537, %r16" );
  repos.add( 0x8c41a689, "addx %r6, 1673, %r6" );
  repos.add( 0xa644eac9, "addx %r19, 2761, %r19" );
  repos.add( 0x8a417780, "addx %r5, -2176, %r5" );
  repos.add( 0xae45fbc0, "addx %r23, -1088, %r23" );
  repos.add( 0x9c43b40f, "addx %r14, -3057, %r14" );
  repos.add( 0x98433b3d, "addx %r12, -1219, %r12" );
  repos.add( 0xa842ea81, "addx %r11, 2689, %r20" );
  repos.add( 0x9446a552, "addx %r26, 1362, %r10" );
  repos.add( 0x92476827, "addx %r29, 2087, %r9" );
  repos.add( 0x9a406179, "addx %r1, 377, %r13" );
  repos.add( 0x9245aac9, "addx %r22, 2761, %r9" );
  repos.add( 0x9243edb2, "addx %r15, 3506, %r9" );
  repos.add( 0x90452ccb, "addx %r20, 3275, %r8" );
  repos.add( 0xae472dba, "addx %r28, 3514, %r23" );
  repos.add( 0x92406f4e, "addx %r1, 3918, %r9" );
  repos.add( 0xaa412ded, "addx %r4, 3565, %r21" );
  repos.add( 0x8646ee6f, "addx %r27, 3695, %r3" );
  repos.add( 0x9246abfe, "addx %r26, 3070, %r9" );
  repos.add( 0x92453380, "addx %r20, -3200, %r9" );
  repos.add( 0xb4417142, "addx %r5, -3774, %r26" );
  repos.add( 0xb440f4a1, "addx %r3, -2911, %r26" );
  repos.add( 0xa0417096, "addx %r5, -3946, %r16" );
  repos.add( 0xa246fd41, "addx %r27, -703, %r17" );
  repos.add( 0xa6417994, "addx %r5, -1644, %r19" );
  repos.add( 0x9245f1d3, "addx %r23, -3629, %r9" );
  repos.add( 0x9244f51d, "addx %r19, -2787, %r9" );
  repos.add( 0x8847317e, "addx %r28, -3714, %r4" );
  repos.add( 0x8a427d2b, "addx %r9, -725, %r5" );
  repos.add( 0x9241bcaf, "addx %r6, -849, %r9" );
  repos.add( 0xa04239e7, "addx %r8, -1561, %r16" );
  repos.add( 0xb444beeb, "addx %r18, -277, %r26" );
  repos.add( 0xa2453f3d, "addx %r20, -195, %r17" );
  repos.add( 0x800a4df7, "and %r9, %r23, %r0" );
  repos.add( 0x800bcf70, "and %r15, %r16, %r0" );
  repos.add( 0xba08046e, "and %r0, %r14, %r29" );
  repos.add( 0x9a0810d6, "and %r0, %r22, %r13" );
  repos.add( 0x8c0bc9e0, "and %r15, %r0, %r6" );
  repos.add( 0x9c0c9732, "and %r18, %r18, %r14" );
  repos.add( 0x880a42c9, "and %r9, %r9, %r4" );
  repos.add( 0xb40e9a29, "and %r26, %r9, %r26" );
  repos.add( 0xa60cc408, "and %r19, %r8, %r19" );
  repos.add( 0xa20d9591, "and %r22, %r17, %r17" );
  repos.add( 0xa40f0d12, "and %r28, %r18, %r18" );
  repos.add( 0xa409cbd6, "and %r7, %r22, %r18" );
  repos.add( 0xb60994bc, "and %r6, %r28, %r27" );
  repos.add( 0x98880840, "andcc %r0, %r0, %r12" );
  repos.add( 0xa8881cbc, "andcc %r0, %r28, %r20" );
  repos.add( 0x9a8800d3, "andcc %r0, %r19, %r13" );
  repos.add( 0x9a8a0700, "andcc %r8, %r0, %r13" );
  repos.add( 0x8a8d4120, "andcc %r21, %r0, %r5" );
  repos.add( 0x8e8ad3ab, "andcc %r11, %r11, %r7" );
  repos.add( 0x828ac7ab, "andcc %r11, %r11, %r1" );
  repos.add( 0x808895db, "andcc %r2, %r27, %r0" );
  repos.add( 0x808c0065, "andcc %r16, %r5, %r0" );
  repos.add( 0x988b0d0e, "andcc %r12, %r14, %r12" );
  repos.add( 0x928a4694, "andcc %r9, %r20, %r9" );
  repos.add( 0x9a89c9ad, "andcc %r7, %r13, %r13" );
  repos.add( 0xa08a5430, "andcc %r9, %r16, %r16" );
  repos.add( 0xba8ad552, "andcc %r11, %r18, %r29" );
  repos.add( 0x988a1b0d, "andcc %r8, %r13, %r12" );
  repos.add( 0x8c8834f2, "andcc %r0, -2830, %r6" );
  repos.add( 0x808f6a0d, "andcc %r29, 2573, %r0" );
  repos.add( 0x968aeaa8, "andcc %r11, 2728, %r11" );
  repos.add( 0x9a8b6d58, "andcc %r13, 3416, %r13" );
  repos.add( 0x8e89ea17, "andcc %r7, 2583, %r7" );
  repos.add( 0x80896b33, "andcc %r5, 2867, %r0" );
  repos.add( 0x968ae3fe, "andcc %r11, 1022, %r11" );
  repos.add( 0xb88f30a8, "andcc %r28, -3928, %r28" );
  repos.add( 0xba8f7369, "andcc %r29, -3223, %r29" );
  repos.add( 0x8a8977ae, "andcc %r5, -2130, %r5" );
  repos.add( 0xb88a6209, "andcc %r9, 521, %r28" );
  repos.add( 0xb68ea818, "andcc %r26, 2072, %r27" );
  repos.add( 0x9c88a24c, "andcc %r2, 588, %r14" );
  repos.add( 0x8e8f2911, "andcc %r28, 2321, %r7" );
  repos.add( 0x8a89e4e8, "andcc %r7, 1256, %r5" );
  repos.add( 0x988ba705, "andcc %r14, 1797, %r12" );
  repos.add( 0xa888e68d, "andcc %r3, 1677, %r20" );
  repos.add( 0x8c8ea3d4, "andcc %r26, 980, %r6" );
  repos.add( 0x8e8cee93, "andcc %r19, 3731, %r7" );
  repos.add( 0x928ceae5, "andcc %r19, 2789, %r9" );
  repos.add( 0x9a89edbc, "andcc %r7, 3516, %r13" );
  repos.add( 0xba8966e7, "andcc %r5, 1767, %r29" );
  repos.add( 0x8c8b3840, "andcc %r12, -1984, %r6" );
  repos.add( 0xac8b7005, "andcc %r13, -4091, %r22" );
  repos.add( 0xa68f7094, "andcc %r29, -3948, %r19" );
  repos.add( 0x9a8b3a42, "andcc %r12, -1470, %r13" );
  repos.add( 0xa88a3491, "andcc %r8, -2927, %r20" );
  repos.add( 0xa68ab43a, "andcc %r10, -3014, %r19" );
  repos.add( 0x8c8d36a2, "andcc %r20, -2398, %r6" );
  repos.add( 0xae89bc6c, "andcc %r6, -916, %r23" );
  repos.add( 0x868d74d6, "andcc %r21, -2858, %r3" );
  repos.add( 0x908cfb33, "andcc %r19, -1229, %r8" );
  repos.add( 0x968dfdc5, "andcc %r23, -571, %r11" );
  repos.add( 0x968b7bea, "andcc %r13, -1046, %r11" );
  repos.add( 0xa68eb9db, "andcc %r26, -1573, %r19" );
  repos.add( 0xb68ebbe7, "andcc %r26, -1049, %r27" );
  repos.add( 0x9c8bfecf, "andcc %r15, -305, %r14" );
  repos.add( 0xaa887ebf, "andcc %r1, -321, %r21" );
  repos.add( 0x92083d1a, "and %r0, -742, %r9" );
  repos.add( 0xa8082d76, "and %r0, 3446, %r20" );
  repos.add( 0x800caf4a, "and %r18, 3914, %r0" );
  repos.add( 0xaa0d688d, "and %r21, 2189, %r21" );
  repos.add( 0x8c09b266, "and %r6, -3482, %r6" );
  repos.add( 0xb6092404, "and %r4, 1028, %r27" );
  repos.add( 0xa60c6194, "and %r17, 404, %r19" );
  repos.add( 0xa40daa41, "and %r22, 2625, %r18" );
  repos.add( 0x90096c19, "and %r5, 3097, %r8" );
  repos.add( 0x840b28e8, "and %r12, 2280, %r2" );
  repos.add( 0xa20de34b, "and %r23, 843, %r17" );
  repos.add( 0x9209e29b, "and %r7, 667, %r9" );
  repos.add( 0xba0c2e33, "and %r16, 3635, %r29" );
  repos.add( 0xb609aa5d, "and %r6, 2653, %r27" );
  repos.add( 0x8e0a2e7c, "and %r8, 3708, %r7" );
  repos.add( 0xb40ce6bd, "and %r19, 1725, %r26" );
  repos.add( 0x960a3120, "and %r8, -3808, %r11" );
  repos.add( 0x960f7406, "and %r29, -3066, %r11" );
  repos.add( 0xa40a30a8, "and %r8, -3928, %r18" );
  repos.add( 0x8808b4c8, "and %r2, -2872, %r4" );
  repos.add( 0xba08b921, "and %r2, -1759, %r29" );
  repos.add( 0xb60a31cc, "and %r8, -3636, %r27" );
  repos.add( 0x860cb68a, "and %r18, -2422, %r3" );
  repos.add( 0xac0d7b94, "and %r21, -1132, %r22" );
  repos.add( 0x9a09b5c6, "and %r6, -2618, %r13" );
  repos.add( 0xb80a7717, "and %r9, -2281, %r28" );
  repos.add( 0xa40c77a5, "and %r17, -2139, %r18" );
  repos.add( 0x9e09fed3, "and %r7, -301, %r15" );
  repos.add( 0x880ebf3c, "and %r26, -196, %r4" );
  repos.add( 0x9e0c7be7, "and %r17, -1049, %r15" );
  repos.add( 0x880cfeee, "and %r19, -274, %r4" );
  repos.add( 0x900bb7df, "and %r14, -2081, %r8" );
  repos.add( 0x860c7fd7, "and %r17, -41, %r3" );
  repos.add( 0x980c7f7f, "and %r17, -129, %r12" );
  repos.add( 0x802a9688, "andn %r10, %r8, %r0" );
  repos.add( 0xaa28166e, "andn %r0, %r14, %r21" );
  repos.add( 0xa82806c7, "andn %r0, %r7, %r20" );
  repos.add( 0xa62a4540, "andn %r9, %r0, %r19" );
  repos.add( 0x922bd6c0, "andn %r15, %r0, %r9" );
  repos.add( 0xb82bce6f, "andn %r15, %r15, %r28" );
  repos.add( 0x8a288402, "andn %r2, %r2, %r5" );
  repos.add( 0x8a295141, "andn %r5, %r1, %r5" );
  repos.add( 0x9e2bd032, "andn %r15, %r18, %r15" );
  repos.add( 0x9c2d06ae, "andn %r20, %r14, %r14" );
  repos.add( 0x8e2d58e7, "andn %r21, %r7, %r7" );
  repos.add( 0xa02a5408, "andn %r9, %r8, %r16" );
  repos.add( 0x902ec614, "andn %r27, %r20, %r8" );
  repos.add( 0x9ea81b72, "andncc %r0, %r18, %r15" );
  repos.add( 0xaca806e9, "andncc %r0, %r9, %r22" );
  repos.add( 0xacac0e20, "andncc %r16, %r0, %r22" );
  repos.add( 0x90a997a0, "andncc %r6, %r0, %r8" );
  repos.add( 0xa8a8c163, "andncc %r3, %r3, %r20" );
  repos.add( 0x80a98fe4, "andncc %r6, %r4, %r0" );
  repos.add( 0xb8af0144, "andncc %r28, %r4, %r28" );
  repos.add( 0xb8ab5f43, "andncc %r13, %r3, %r28" );
  repos.add( 0x98aa95b3, "andncc %r10, %r19, %r12" );
  repos.add( 0xa2a82504, "andncc %r0, 1284, %r17" );
  repos.add( 0x8ca83045, "andncc %r0, -4027, %r6" );
  repos.add( 0x9caba2ad, "andncc %r14, 685, %r14" );
  repos.add( 0x8ca9ae43, "andncc %r6, 3651, %r6" );
  repos.add( 0x9ca93ffa, "andncc %r4, -6, %r14" );
  repos.add( 0xa4ac7d9f, "andncc %r17, -609, %r18" );
  repos.add( 0x94ad73fe, "andncc %r21, -3074, %r10" );
  repos.add( 0x9aab336f, "andncc %r12, -3217, %r13" );
  repos.add( 0x82abfd6e, "andncc %r15, -658, %r1" );
  repos.add( 0x9ea97997, "andncc %r5, -1641, %r15" );
  repos.add( 0x88ac73ad, "andncc %r17, -3155, %r4" );
  repos.add( 0x98a8fc2d, "andncc %r3, -979, %r12" );
  repos.add( 0xaea974a7, "andncc %r5, -2905, %r23" );
  repos.add( 0x88ad32ca, "andncc %r20, -3382, %r4" );
  repos.add( 0xb6ab35e0, "andncc %r12, -2592, %r27" );
  repos.add( 0xa8a87238, "andncc %r1, -3528, %r20" );
  repos.add( 0xaaaeb413, "andncc %r26, -3053, %r21" );
  repos.add( 0x8aaab812, "andncc %r10, -2030, %r5" );
  repos.add( 0xa4aaa3ff, "andncc %r10, 1023, %r18" );
  repos.add( 0x9aa967bd, "andncc %r5, 1981, %r13" );
  repos.add( 0x9aabe3fb, "andncc %r15, 1019, %r13" );
  repos.add( 0xaaaa6ee3, "andncc %r9, 3811, %r21" );
  repos.add( 0x90a8a78f, "andncc %r2, 1935, %r8" );
  repos.add( 0x88a8aee8, "andncc %r2, 3816, %r4" );
  repos.add( 0x8ca96b5c, "andncc %r5, 2908, %r6" );
  repos.add( 0xb8a966ca, "andncc %r5, 1738, %r28" );
  repos.add( 0x84aa69c5, "andncc %r9, 2501, %r2" );
  repos.add( 0x8ca9248b, "andncc %r4, 1163, %r6" );
  repos.add( 0x96af6a07, "andncc %r29, 2567, %r11" );
  repos.add( 0xb8aea6c0, "andncc %r26, 1728, %r28" );
  repos.add( 0x8aab6861, "andncc %r13, 2145, %r5" );
  repos.add( 0x98a8e014, "andncc %r3, 20, %r12" );
  repos.add( 0x802ebe05, "andn %r26, -507, %r0" );
  repos.add( 0x802f6353, "andn %r29, 851, %r0" );
  repos.add( 0x882935fd, "andn %r4, -2563, %r4" );
  repos.add( 0xa22c7c75, "andn %r17, -907, %r17" );
  repos.add( 0xac2dac5f, "andn %r22, 3167, %r22" );
  repos.add( 0x9c2ba1f6, "andn %r14, 502, %r14" );
  repos.add( 0xae2de217, "andn %r23, 535, %r23" );
  repos.add( 0x9a2aff7d, "andn %r11, -131, %r13" );
  repos.add( 0xa8297bd7, "andn %r5, -1065, %r20" );
  repos.add( 0x8c2d3b9d, "andn %r20, -1123, %r6" );
  repos.add( 0x9c2f75f9, "andn %r29, -2567, %r14" );
  repos.add( 0xb62c7f4c, "andn %r17, -180, %r27" );
  repos.add( 0xa62d7ae9, "andn %r21, -1303, %r19" );
  repos.add( 0xa62d70f9, "andn %r21, -3847, %r19" );
  repos.add( 0xac2eb13e, "andn %r26, -3778, %r22" );
  repos.add( 0xa62cb598, "andn %r18, -2664, %r19" );
  repos.add( 0x922970dc, "andn %r5, -3876, %r9" );
  repos.add( 0xae2af0aa, "andn %r11, -3926, %r23" );
  repos.add( 0xba2db20c, "andn %r22, -3572, %r29" );
  repos.add( 0xa62bfa80, "andn %r15, -1408, %r19" );
  repos.add( 0x962d7820, "andn %r21, -2016, %r11" );
  repos.add( 0x842ab840, "andn %r10, -1984, %r2" );
  repos.add( 0xa82a6bee, "andn %r9, 3054, %r20" );
  repos.add( 0xa82aef5d, "andn %r11, 3933, %r20" );
  repos.add( 0x8e2eaf2b, "andn %r26, 3883, %r7" );
  repos.add( 0xa62deef8, "andn %r23, 3832, %r19" );
  repos.add( 0xa62ca7c3, "andn %r18, 1987, %r19" );
  repos.add( 0x842aac9b, "andn %r10, 3227, %r2" );
  repos.add( 0x902de3a3, "andn %r23, 931, %r8" );
  repos.add( 0xaa286a9a, "andn %r1, 2714, %r21" );
  repos.add( 0xa82f622e, "andn %r29, 558, %r20" );
  repos.add( 0x8c2a6585, "andn %r9, 1413, %r6" );
  repos.add( 0xb82de852, "andn %r23, 2130, %r28" );
  repos.add( 0x942ea482, "andn %r26, 1154, %r10" );
  repos.add( 0xa8286441, "andn %r1, 1089, %r20" );
  repos.add( 0xc0051be8, "ld [%r20 + %r8], %r0" );
  repos.add( 0xc002c0d6, "ld [%r11 + %r22], %r0" );
  repos.add( 0xd6000b4f, "ld [%r0 + %r15], %r11" );
  repos.add( 0xec070660, "ld [%r28 + %r0], %r22" );
  repos.add( 0xd602d936, "ld [%r11 + %r22], %r11" );
  repos.add( 0xde034e6f, "ld [%r13 + %r15], %r15" );
  repos.add( 0xc4044b49, "ld [%r17 + %r9], %r2" );
  repos.add( 0xd806dbb1, "ld [%r27 + %r17], %r12" );
  repos.add( 0xc2180db7, "ldd [%r0 + %r23], %r0" );
  repos.add( 0xe41c8f60, "ldd [%r18 + %r0], %r18" );
  repos.add( 0xc01994c9, "ldd [%r6 + %r9], %r0" );
  repos.add( 0xc21991d3, "ldd [%r6 + %r19], %r0" );
  repos.add( 0xde18c820, "ldd [%r3 + %r0], %r14" );
  repos.add( 0xe21c0465, "ldd [%r16 + %r5], %r16" );
  repos.add( 0xe01f48d1, "ldd [%r29 + %r17], %r16" );
  repos.add( 0xf61b835b, "ldd [%r14 + %r27], %r26" );
  repos.add( 0xec1a5891, "ldd [%r9 + %r17], %r22" );
  repos.add( 0xe81c189b, "ldd [%r16 + %r27], %r20" );
  repos.add( 0xc01a6645, "ldd [%r9 + 0x645], %r0" );
  repos.add( 0xc219e157, "ldd [%r7 + 0x157], %r0" );
  repos.add( 0xc01dfb3a, "ldd [%r23 - 0x4c6], %r0" );
  repos.add( 0xc618e21d, "ldd [%r3 + 0x21d], %r2" );
  repos.add( 0xee1da1b4, "ldd [%r22 + 0x1b4], %r22" );
  repos.add( 0xd61af987, "ldd [%r11 - 0x679], %r10" );
  repos.add( 0xd21c2284, "ldd [%r16 + 0x284], %r8" );
  repos.add( 0xd218a1c0, "ldd [%r2 + 0x1c0], %r8" );
  repos.add( 0xea1a6226, "ldd [%r9 + 0x226], %r20" );
  repos.add( 0xe018a429, "ldd [%r2 + 0x429], %r16" );
  repos.add( 0xfa1c62e8, "ldd [%r17 + 0x2e8], %r28" );
  repos.add( 0xde18a478, "ldd [%r2 + 0x478], %r14" );
  repos.add( 0xd81a28f1, "ldd [%r8 + 0x8f1], %r12" );
  repos.add( 0xe01a256a, "ldd [%r8 + 0x56a], %r16" );
  repos.add( 0xd01d23b6, "ldd [%r20 + 0x3b6], %r8" );
  repos.add( 0xc81d2cd3, "ldd [%r20 + 0xcd3], %r4" );
  repos.add( 0xe61dee6e, "ldd [%r23 + 0xe6e], %r18" );
  repos.add( 0xd81a2dba, "ldd [%r8 + 0xdba], %r12" );
  repos.add( 0xd819b468, "ldd [%r6 - 0xb98], %r12" );
  repos.add( 0xd61cfa84, "ldd [%r19 - 0x57c], %r10" );
  repos.add( 0xec18f5c2, "ldd [%r3 - 0xa3e], %r22" );
  repos.add( 0xf41db42d, "ldd [%r22 - 0xbd3], %r26" );
  repos.add( 0xea1eb0fc, "ldd [%r26 - 0xf04], %r20" );
  repos.add( 0xda193659, "ldd [%r4 - 0x9a7], %r12" );
  repos.add( 0xc41bb93e, "ldd [%r14 - 0x6c2], %r2" );
  repos.add( 0xd41eb5da, "ldd [%r26 - 0xa26], %r10" );
  repos.add( 0xe81c75fc, "ldd [%r17 - 0xa04], %r20" );
  repos.add( 0xea1a7757, "ldd [%r9 - 0x8a9], %r20" );
  repos.add( 0xe41bf3ef, "ldd [%r15 - 0xc11], %r18" );
  repos.add( 0xe8187baf, "ldd [%r1 - 0x451], %r20" );
  repos.add( 0xcc18fefb, "ldd [%r3 - 0x105], %r6" );
  repos.add( 0xc005a67f, "ld [%r22 + 0x67f], %r0" );
  repos.add( 0xc0006988, "ld [%r1 + 0x988], %r0" );
  repos.add( 0xec05b5c5, "ld [%r22 - 0xa3b], %r22" );
  repos.add( 0xd602fb3d, "ld [%r11 - 0x4c3], %r11" );
  repos.add( 0xda02e248, "ld [%r11 + 0x248], %r13" );
  repos.add( 0xde02aaa0, "ld [%r10 + 0xaa0], %r15" );
  repos.add( 0xee04a415, "ld [%r18 + 0x415], %r23" );
  repos.add( 0xc2012916, "ld [%r4 + 0x916], %r1" );
  repos.add( 0xd800ecc1, "ld [%r3 + 0xcc1], %r12" );
  repos.add( 0xca0223b4, "ld [%r8 + 0x3b4], %r5" );
  repos.add( 0xc6012e38, "ld [%r4 + 0xe38], %r3" );
  repos.add( 0xd004e8cf, "ld [%r19 + 0x8cf], %r8" );
  repos.add( 0xe800ee47, "ld [%r3 + 0xe47], %r20" );
  repos.add( 0xea03af5c, "ld [%r14 + 0xf5c], %r21" );
  repos.add( 0xc605e39f, "ld [%r23 + 0x39f], %r3" );
  repos.add( 0xd206af76, "ld [%r26 + 0xf76], %r9" );
  repos.add( 0xe0022fdd, "ld [%r8 + 0xfdd], %r16" );
  repos.add( 0xc6046efe, "ld [%r17 + 0xefe], %r3" );
  repos.add( 0xec02b100, "ld [%r10 - 0xf00], %r22" );
  repos.add( 0xce043204, "ld [%r16 - 0xdfc], %r7" );
  repos.add( 0xd002f812, "ld [%r11 - 0x7ee], %r8" );
  repos.add( 0xd8023268, "ld [%r8 - 0xd98], %r12" );
  repos.add( 0xd802f81a, "ld [%r11 - 0x7e6], %r12" );
  repos.add( 0xf602b433, "ld [%r10 - 0xbcd], %r27" );
  repos.add( 0xe6057586, "ld [%r21 - 0xa7a], %r19" );
  repos.add( 0xf800b5b8, "ld [%r2 - 0xa48], %r28" );
  repos.add( 0xee0077a4, "ld [%r1 - 0x85c], %r23" );
  repos.add( 0xce037a1f, "ld [%r13 - 0x5e1], %r7" );
  repos.add( 0xe600bab5, "ld [%r2 - 0x54b], %r19" );
  repos.add( 0xe0057df2, "ld [%r21 - 0x20e], %r16" );
  repos.add( 0xe603b7d6, "ld [%r14 - 0x82a], %r19" );
  repos.add( 0xd8057fbe, "ld [%r21 - 0x42], %r12" );
  repos.add( 0xc04edf53, "ldsb [%r27 + %r19], %r0" );
  repos.add( 0xe44808a8, "ldsb [%r0 + %r8], %r18" );
  repos.add( 0xc6481876, "ldsb [%r0 + %r22], %r3" );
  repos.add( 0xc44892bd, "ldsb [%r2 + %r29], %r2" );
  repos.add( 0xc44a504a, "ldsb [%r9 + %r10], %r2" );
  repos.add( 0xe849d6ba, "ldsb [%r7 + %r26], %r20" );
  repos.add( 0xc049b52a, "ldsb [%r6 - 0xad6], %r0" );
  repos.add( 0xc04ef524, "ldsb [%r27 - 0xadc], %r0" );
  repos.add( 0xc2487727, "ldsb [%r1 - 0x8d9], %r1" );
  repos.add( 0xf84f3f5f, "ldsb [%r28 - 0xa1], %r28" );
  repos.add( 0xee4ea045, "ldsb [%r26 + 0x45], %r23" );
  repos.add( 0xf84c2342, "ldsb [%r16 + 0x342], %r28" );
  repos.add( 0xe64aa129, "ldsb [%r10 + 0x129], %r19" );
  repos.add( 0xc44b2349, "ldsb [%r12 + 0x349], %r2" );
  repos.add( 0xce4c6709, "ldsb [%r17 + 0x709], %r7" );
  repos.add( 0xd64a668e, "ldsb [%r9 + 0x68e], %r11" );
  repos.add( 0xc648699a, "ldsb [%r1 + 0x99a], %r3" );
  repos.add( 0xf44c2997, "ldsb [%r16 + 0x997], %r26" );
  repos.add( 0xd649e29f, "ldsb [%r7 + 0x29f], %r11" );
  repos.add( 0xc84f2bb9, "ldsb [%r28 + 0xbb9], %r4" );
  repos.add( 0xf6486ecd, "ldsb [%r1 + 0xecd], %r27" );
  repos.add( 0xc4492b6f, "ldsb [%r4 + 0xb6f], %r2" );
  repos.add( 0xde4d2fdd, "ldsb [%r20 + 0xfdd], %r15" );
  repos.add( 0xda4f2f7d, "ldsb [%r28 + 0xf7d], %r13" );
  repos.add( 0xec4a2fbf, "ldsb [%r8 + 0xfbf], %r22" );
  repos.add( 0xd64d3008, "ldsb [%r20 - 0xff8], %r11" );
  repos.add( 0xc44cf028, "ldsb [%r19 - 0xfd8], %r2" );
  repos.add( 0xec4bf803, "ldsb [%r15 - 0x7fd], %r22" );
  repos.add( 0xd24ab160, "ldsb [%r10 - 0xea0], %r9" );
  repos.add( 0xd24db22c, "ldsb [%r22 - 0xdd4], %r9" );
  repos.add( 0xca49330c, "ldsb [%r4 - 0xcf4], %r5" );
  repos.add( 0xd049788b, "ldsb [%r5 - 0x775], %r8" );
  repos.add( 0xd64b7da0, "ldsb [%r13 - 0x260], %r11" );
  repos.add( 0xe048b16e, "ldsb [%r2 - 0xe92], %r16" );
  repos.add( 0xe24eff84, "ldsb [%r27 - 0x7c], %r17" );
  repos.add( 0xc848beb8, "ldsb [%r2 - 0x148], %r4" );
  repos.add( 0xcc4b3ad9, "ldsb [%r12 - 0x527], %r6" );
  repos.add( 0xd848f977, "ldsb [%r3 - 0x689], %r12" );
  repos.add( 0xee4a396f, "ldsb [%r8 - 0x691], %r23" );
  repos.add( 0xda4f3fba, "ldsb [%r28 - 0x46], %r13" );
  repos.add( 0xc64937db, "ldsb [%r4 - 0x825], %r3" );
  repos.add( 0xd04b3fb7, "ldsb [%r12 - 0x49], %r8" );
  repos.add( 0xe2501271, "ldsh [%r0 + %r17], %r17" );
  repos.add( 0xc050d1d3, "ldsh [%r3 + %r19], %r0" );
  repos.add( 0xea5547fa, "ldsh [%r21 + %r26], %r21" );
  repos.add( 0xe654d001, "ldsh [%r19 + %r1], %r19" );
  repos.add( 0xe6545401, "ldsh [%r17 + %r1], %r19" );
  repos.add( 0xec515c74, "ldsh [%r5 + %r20], %r22" );
  repos.add( 0xc0573afc, "ldsh [%r28 - 0x504], %r0" );
  repos.add( 0xc051e68e, "ldsh [%r7 + 0x68e], %r0" );
  repos.add( 0xca51750a, "ldsh [%r5 - 0xaf6], %r5" );
  repos.add( 0xfa577377, "ldsh [%r29 - 0xc89], %r29" );
  repos.add( 0xc652250a, "ldsh [%r8 + 0x50a], %r3" );
  repos.add( 0xd853a2a4, "ldsh [%r14 + 0x2a4], %r12" );
  repos.add( 0xde51e265, "ldsh [%r7 + 0x265], %r15" );
  repos.add( 0xd455e1d2, "ldsh [%r23 + 0x1d2], %r10" );
  repos.add( 0xcc53a137, "ldsh [%r14 + 0x137], %r6" );
  repos.add( 0xca55626b, "ldsh [%r21 + 0x26b], %r5" );
  repos.add( 0xd65062af, "ldsh [%r1 + 0x2af], %r11" );
  repos.add( 0xe651233e, "ldsh [%r4 + 0x33e], %r19" );
  repos.add( 0xc6556a9f, "ldsh [%r21 + 0xa9f], %r3" );
  repos.add( 0xe856e93f, "ldsh [%r27 + 0x93f], %r20" );
  repos.add( 0xc456eb7e, "ldsh [%r27 + 0xb7e], %r2" );
  repos.add( 0xcc576e7f, "ldsh [%r29 + 0xe7f], %r6" );
  repos.add( 0xc4513440, "ldsh [%r4 - 0xbc0], %r2" );
  repos.add( 0xec5732e0, "ldsh [%r28 - 0xd20], %r22" );
  repos.add( 0xcc5531c2, "ldsh [%r20 - 0xe3e], %r6" );
  repos.add( 0xdc573c31, "ldsh [%r28 - 0x3cf], %r14" );
  repos.add( 0xf455f1f0, "ldsh [%r23 - 0xe10], %r26" );
  repos.add( 0xe253358e, "ldsh [%r12 - 0xa72], %r17" );
  repos.add( 0xe85471ea, "ldsh [%r17 - 0xe16], %r20" );
  repos.add( 0xc455b337, "ldsh [%r22 - 0xcc9], %r2" );
  repos.add( 0xc254f6e9, "ldsh [%r19 - 0x917], %r1" );
  repos.add( 0xcc507f1d, "ldsh [%r1 - 0xe3], %r6" );
  repos.add( 0xd05539fd, "ldsh [%r20 - 0x603], %r8" );
  repos.add( 0xc06dd286, "ldstub [%r23 + %r6], %r0" );
  repos.add( 0xc06d9cac, "ldstub [%r22 + %r12], %r0" );
  repos.add( 0xce680021, "ldstub [%r0 + %r1], %r7" );
  repos.add( 0xca681950, "ldstub [%r0 + %r16], %r5" );
  repos.add( 0xe26c0520, "ldstub [%r16 + %r0], %r17" );
  repos.add( 0xe86c4fa0, "ldstub [%r17 + %r0], %r20" );
  repos.add( 0xf66a847b, "ldstub [%r10 + %r27], %r27" );
  repos.add( 0xc46cc90b, "ldstub [%r19 + %r11], %r2" );
  repos.add( 0xe26cc4d7, "ldstub [%r19 + %r23], %r17" );
  repos.add( 0xda6b6b83, "ldstub [%r13 + 0xb83], %r13" );
  repos.add( 0xe86d3b16, "ldstub [%r20 - 0x4ea], %r20" );
  repos.add( 0xca6975c7, "ldstub [%r5 - 0xa39], %r5" );
  repos.add( 0xc46bec00, "ldstub [%r15 + 0xc00], %r2" );
  repos.add( 0xf46d6821, "ldstub [%r21 + 0x821], %r26" );
  repos.add( 0xc86a2550, "ldstub [%r8 + 0x550], %r4" );
  repos.add( 0xdc6b6225, "ldstub [%r13 + 0x225], %r14" );
  repos.add( 0xf86de338, "ldstub [%r23 + 0x338], %r28" );
  repos.add( 0xe46eef08, "ldstub [%r27 + 0xf08], %r18" );
  repos.add( 0xc46ce758, "ldstub [%r19 + 0x758], %r2" );
  repos.add( 0xc26966b2, "ldstub [%r5 + 0x6b2], %r1" );
  repos.add( 0xe06a671b, "ldstub [%r9 + 0x71b], %r16" );
  repos.add( 0xca6a639b, "ldstub [%r9 + 0x39b], %r5" );
  repos.add( 0xca69ab7e, "ldstub [%r6 + 0xb7e], %r5" );
  repos.add( 0xe86b6f57, "ldstub [%r13 + 0xf57], %r20" );
  repos.add( 0xea6aaffa, "ldstub [%r10 + 0xffa], %r21" );
  repos.add( 0xe46d7042, "ldstub [%r21 - 0xfbe], %r18" );
  repos.add( 0xfa6cf300, "ldstub [%r19 - 0xd00], %r29" );
  repos.add( 0xca6ef898, "ldstub [%r27 - 0x768], %r5" );
  repos.add( 0xc8687a30, "ldstub [%r1 - 0x5d0], %r4" );
  repos.add( 0xf469b1c3, "ldstub [%r6 - 0xe3d], %r26" );
  repos.add( 0xe66a7b42, "ldstub [%r9 - 0x4be], %r19" );
  repos.add( 0xe46af36c, "ldstub [%r11 - 0xc94], %r18" );
  repos.add( 0xf669bdc8, "ldstub [%r6 - 0x238], %r27" );
  repos.add( 0xfa68774d, "ldstub [%r1 - 0x8b3], %r29" );
  repos.add( 0xf86efc5d, "ldstub [%r27 - 0x3a3], %r28" );
  repos.add( 0xee6977bc, "ldstub [%r5 - 0x844], %r23" );
  repos.add( 0xf86b7f17, "ldstub [%r13 - 0xe9], %r28" );
  repos.add( 0xc00d1f55, "ldub [%r20 + %r21], %r0" );
  repos.add( 0xdc0b921d, "ldub [%r14 + %r29], %r14" );
  repos.add( 0xd40a9495, "ldub [%r10 + %r21], %r10" );
  repos.add( 0xe8089e94, "ldub [%r2 + %r20], %r20" );
  repos.add( 0xf80b0aa5, "ldub [%r12 + %r5], %r28" );
  repos.add( 0xda0d8d46, "ldub [%r22 + %r6], %r13" );
  repos.add( 0xd80b2b97, "ldub [%r12 + 0xb97], %r12" );
  repos.add( 0xc8092eb6, "ldub [%r4 + 0xeb6], %r4" );
  repos.add( 0xf60ee6fd, "ldub [%r27 + 0x6fd], %r27" );
  repos.add( 0xc2086dff, "ldub [%r1 + 0xdff], %r1" );
  repos.add( 0xca0b620c, "ldub [%r13 + 0x20c], %r5" );
  repos.add( 0xce0a2425, "ldub [%r8 + 0x425], %r7" );
  repos.add( 0xc40de40e, "ldub [%r23 + 0x40e], %r2" );
  repos.add( 0xce0ea22b, "ldub [%r26 + 0x22b], %r7" );
  repos.add( 0xe00aa48e, "ldub [%r10 + 0x48e], %r16" );
  repos.add( 0xca0de30f, "ldub [%r23 + 0x30f], %r5" );
  repos.add( 0xde0ba3ca, "ldub [%r14 + 0x3ca], %r15" );
  repos.add( 0xde0c2ad9, "ldub [%r16 + 0xad9], %r15" );
  repos.add( 0xc60eae69, "ldub [%r26 + 0xe69], %r3" );
  repos.add( 0xf609abbe, "ldub [%r6 + 0xbbe], %r27" );
  repos.add( 0xe4092baf, "ldub [%r4 + 0xbaf], %r18" );
  repos.add( 0xd0096ebf, "ldub [%r5 + 0xebf], %r8" );
  repos.add( 0xf4097c03, "ldub [%r5 - 0x3fd], %r26" );
  repos.add( 0xc60eb314, "ldub [%r26 - 0xcec], %r3" );
  repos.add( 0xdc0ef23a, "ldub [%r27 - 0xdc6], %r14" );
  repos.add( 0xfa0c3a8c, "ldub [%r16 - 0x574], %r29" );
  repos.add( 0xd20b7a0f, "ldub [%r13 - 0x5f1], %r9" );
  repos.add( 0xec0b7c2d, "ldub [%r13 - 0x3d3], %r22" );
  repos.add( 0xd609372e, "ldub [%r4 - 0x8d2], %r11" );
  repos.add( 0xd40935b5, "ldub [%r4 - 0xa4b], %r10" );
  repos.add( 0xd40975f9, "ldub [%r5 - 0xa07], %r10" );
  repos.add( 0xe609ff2b, "ldub [%r7 - 0xd5], %r19" );
  repos.add( 0xe60cbbcf, "ldub [%r18 - 0x431], %r19" );
  repos.add( 0xc40ebe3f, "ldub [%r26 - 0x1c1], %r2" );
  repos.add( 0xc014dbe5, "lduh [%r19 + %r5], %r0" );
  repos.add( 0xde1011ec, "lduh [%r0 + %r12], %r15" );
  repos.add( 0xe6141d60, "lduh [%r16 + %r0], %r19" );
  repos.add( 0xd41447e0, "lduh [%r17 + %r0], %r10" );
  repos.add( 0xd81304ca, "lduh [%r12 + %r10], %r12" );
  repos.add( 0xda135db7, "lduh [%r13 + %r23], %r13" );
  repos.add( 0xda11df4e, "lduh [%r7 + %r14], %r13" );
  repos.add( 0xce15ccb2, "lduh [%r23 + %r18], %r7" );
  repos.add( 0xc013ed34, "lduh [%r15 + 0xd34], %r0" );
  repos.add( 0xc014e14f, "lduh [%r19 + 0x14f], %r0" );
  repos.add( 0xda1360e8, "lduh [%r13 + 0xe8], %r13" );
  repos.add( 0xe414a223, "lduh [%r18 + 0x223], %r18" );
  repos.add( 0xe2147eaf, "lduh [%r17 - 0x151], %r17" );
  repos.add( 0xee12e00c, "lduh [%r11 + 0xc], %r23" );
  repos.add( 0xcc12e440, "lduh [%r11 + 0x440], %r6" );
  repos.add( 0xdc112944, "lduh [%r4 + 0x944], %r14" );
  repos.add( 0xda13228a, "lduh [%r12 + 0x28a], %r13" );
  repos.add( 0xee16a20f, "lduh [%r26 + 0x20f], %r23" );
  repos.add( 0xcc14e7c0, "lduh [%r19 + 0x7c0], %r6" );
  repos.add( 0xec14258e, "lduh [%r16 + 0x58e], %r22" );
  repos.add( 0xd8122b4a, "lduh [%r8 + 0xb4a], %r12" );
  repos.add( 0xf4152f92, "lduh [%r20 + 0xf92], %r26" );
  repos.add( 0xc813617d, "lduh [%r13 + 0x17d], %r4" );
  repos.add( 0xca13abf8, "lduh [%r14 + 0xbf8], %r5" );
  repos.add( 0xf815edba, "lduh [%r23 + 0xdba], %r28" );
  repos.add( 0xe61565fe, "lduh [%r21 + 0x5fe], %r19" );
  repos.add( 0xde172fbc, "lduh [%r28 + 0xfbc], %r15" );
  repos.add( 0xfa12b020, "lduh [%r10 - 0xfe0], %r29" );
  repos.add( 0xd2177811, "lduh [%r29 - 0x7ef], %r9" );
  repos.add( 0xc215701a, "lduh [%r21 - 0xfe6], %r1" );
  repos.add( 0xc212b0a6, "lduh [%r10 - 0xf5a], %r1" );
  repos.add( 0xd8113892, "lduh [%r4 - 0x76e], %r12" );
  repos.add( 0xfa16b562, "lduh [%r26 - 0xa9e], %r29" );
  repos.add( 0xc2137c51, "lduh [%r13 - 0x3af], %r1" );
  repos.add( 0xc215fd54, "lduh [%r23 - 0x2ac], %r1" );
  repos.add( 0xd211bc36, "lduh [%r6 - 0x3ca], %r9" );
  repos.add( 0xde1175f1, "lduh [%r5 - 0xa0f], %r15" );
  repos.add( 0xfa14b3c7, "lduh [%r18 - 0xc39], %r29" );
  repos.add( 0xd613bddc, "lduh [%r14 - 0x224], %r11" );
  repos.add( 0xe216beda, "lduh [%r26 - 0x126], %r17" );
  repos.add( 0xc81276fd, "lduh [%r9 - 0x903], %r4" );
  repos.add( 0xe6133bbf, "lduh [%r12 - 0x441], %r19" );
  repos.add( 0x93201f5a, "mulscc %r0, %r26, %r9" );
  repos.add( 0x91200415, "mulscc %r0, %r21, %r8" );
  repos.add( 0x9522983c, "mulscc %r10, %r28, %r10" );
  repos.add( 0x932251a2, "mulscc %r9, %r2, %r9" );
  repos.add( 0xbb26803a, "mulscc %r26, %r26, %r29" );
  repos.add( 0x8525cf77, "mulscc %r23, %r23, %r2" );
  repos.add( 0xa7249e93, "mulscc %r18, %r19, %r19" );
  repos.add( 0x8b2491e5, "mulscc %r18, %r5, %r5" );
  repos.add( 0x8b221ce4, "mulscc %r8, %r4, %r5" );
  repos.add( 0x93220051, "mulscc %r8, %r17, %r9" );
  repos.add( 0xb7224340, "mulscc %r9, %r0, %r27" );
  repos.add( 0xa5269960, "mulscc %r26, %r0, %r18" );
  repos.add( 0x9b203daf, "mulscc %r0, -593, %r13" );
  repos.add( 0xb52035f6, "mulscc %r0, -2570, %r26" );
  repos.add( 0x89202aa2, "mulscc %r0, 2722, %r4" );
  repos.add( 0xa7202033, "mulscc %r0, 51, %r19" );
  repos.add( 0xa3247f12, "mulscc %r17, -238, %r17" );
  repos.add( 0x9b237d84, "mulscc %r13, -636, %r13" );
  repos.add( 0x8520a133, "mulscc %r2, 307, %r2" );
  repos.add( 0x812160bc, "mulscc %r5, 188, %r0" );
  repos.add( 0x81206b80, "mulscc %r1, 2944, %r0" );
  repos.add( 0x91273ffa, "mulscc %r28, -6, %r8" );
  repos.add( 0x85227f75, "mulscc %r9, -139, %r2" );
  repos.add( 0x85213bbb, "mulscc %r4, -1093, %r2" );
  repos.add( 0x8b223f74, "mulscc %r8, -140, %r5" );
  repos.add( 0x9f26f5fa, "mulscc %r27, -2566, %r15" );
  repos.add( 0x872437c6, "mulscc %r16, -2106, %r3" );
  repos.add( 0x8323fb4b, "mulscc %r15, -1205, %r1" );
  repos.add( 0xab2474f8, "mulscc %r17, -2824, %r21" );
  repos.add( 0xa922f5e4, "mulscc %r11, -2588, %r20" );
  repos.add( 0x8722bb03, "mulscc %r10, -1277, %r3" );
  repos.add( 0x8d23b0d6, "mulscc %r14, -3882, %r6" );
  repos.add( 0xb525f834, "mulscc %r23, -1996, %r26" );
  repos.add( 0xb721f489, "mulscc %r7, -2935, %r27" );
  repos.add( 0x8925eefb, "mulscc %r23, 3835, %r4" );
  repos.add( 0x8b23af9d, "mulscc %r14, 3997, %r5" );
  repos.add( 0x9f222ff4, "mulscc %r8, 4084, %r15" );
  repos.add( 0x9d26ebab, "mulscc %r27, 2987, %r14" );
  repos.add( 0xb9242bb5, "mulscc %r16, 2997, %r28" );
  repos.add( 0xa526ecba, "mulscc %r27, 3258, %r18" );
  repos.add( 0x93222be4, "mulscc %r8, 3044, %r9" );
  repos.add( 0xaf22edc8, "mulscc %r11, 3528, %r23" );
  repos.add( 0x8921ea8e, "mulscc %r7, 2702, %r4" );
  repos.add( 0x8b21a607, "mulscc %r6, 1543, %r5" );
  repos.add( 0xa92228a9, "mulscc %r8, 2217, %r20" );
  repos.add( 0x8f26e42a, "mulscc %r27, 1066, %r7" );
  repos.add( 0x9526a40d, "mulscc %r26, 1037, %r10" );
  repos.add( 0xad25240a, "mulscc %r20, 1034, %r22" );
  repos.add( 0x9f25a8c0, "mulscc %r22, 2240, %r15" );
  repos.add( 0xaf20a110, "mulscc %r2, 272, %r23" );
  repos.add( 0x8014c5f3, "or %r19, %r19, %r0" );
  repos.add( 0xa21001b1, "or %r0, %r17, %r17" );
  repos.add( 0x861000c3, "or %r0, %r3, %r3" );
  repos.add( 0xb61001c2, "or %r0, %r2, %r27" );
  repos.add( 0xb41015b7, "or %r0, %r23, %r26" );
  repos.add( 0x901056c0, "or %r1, %r0, %r8" );
  repos.add( 0xa610c160, "or %r3, %r0, %r19" );
  repos.add( 0xa61202e8, "or %r8, %r8, %r19" );
  repos.add( 0x9612d9da, "or %r11, %r26, %r11" );
  repos.add( 0x82105853, "or %r1, %r19, %r1" );
  repos.add( 0x8c138de6, "or %r14, %r6, %r6" );
  repos.add( 0xa0148430, "or %r18, %r16, %r16" );
  repos.add( 0x8a1545c8, "or %r21, %r8, %r5" );
  repos.add( 0x9817558b, "or %r29, %r11, %r12" );
  repos.add( 0xae909620, "orcc %r2, %r0, %r23" );
  repos.add( 0x98951354, "orcc %r20, %r20, %r12" );
  repos.add( 0xba915d25, "orcc %r5, %r5, %r29" );
  repos.add( 0x80910ba3, "tst %r4, %r3" );
  repos.add( 0x80938fe9, "tst %r14, %r9" );
  repos.add( 0x90920a50, "orcc %r8, %r16, %r8" );
  repos.add( 0x8691dbe3, "orcc %r7, %r3, %r3" );
  repos.add( 0x9293c5c7, "orcc %r15, %r7, %r9" );
  repos.add( 0x8694ca1a, "orcc %r19, %r26, %r3" );
  repos.add( 0xaa90274f, "orcc %r0, 1871, %r21" );
  repos.add( 0x8c902fd4, "orcc %r0, 4052, %r6" );
  repos.add( 0x98903233, "orcc %r0, -3533, %r12" );
  repos.add( 0xae95e985, "orcc %r23, 2437, %r23" );
  repos.add( 0x80977355, "tst %r29, -3243" );
  repos.add( 0xba977b3f, "orcc %r29, -1217, %r29" );
  repos.add( 0x82946300, "orcc %r17, 768, %r1" );
  repos.add( 0x9e926091, "orcc %r9, 145, %r15" );
  repos.add( 0xa4926409, "orcc %r9, 1033, %r18" );
  repos.add( 0xb692a924, "orcc %r10, 2340, %r27" );
  repos.add( 0x9291a423, "orcc %r6, 1059, %r9" );
  repos.add( 0xa295ed41, "orcc %r23, 3393, %r17" );
  repos.add( 0x8a9562b4, "orcc %r21, 692, %r5" );
  repos.add( 0x94922d46, "orcc %r8, 3398, %r10" );
  repos.add( 0x9e96a734, "orcc %r26, 1844, %r15" );
  repos.add( 0x9a93af43, "orcc %r14, 3907, %r13" );
  repos.add( 0x82932ee1, "orcc %r12, 3809, %r1" );
  repos.add( 0x969765be, "orcc %r29, 1470, %r11" );
  repos.add( 0xb69225af, "orcc %r8, 1455, %r27" );
  repos.add( 0x94932777, "orcc %r12, 1911, %r10" );
  repos.add( 0x9a9766fe, "orcc %r29, 1790, %r13" );
  repos.add( 0x94936efb, "orcc %r13, 3835, %r10" );
  repos.add( 0x88956bfb, "orcc %r21, 3067, %r4" );
  repos.add( 0x96973008, "orcc %r28, -4088, %r11" );
  repos.add( 0xac947c0a, "orcc %r17, -1014, %r22" );
  repos.add( 0xa496faa0, "orcc %r27, -1376, %r18" );
  repos.add( 0x8c96b0dc, "orcc %r26, -3876, %r6" );
  repos.add( 0x8895f931, "orcc %r23, -1743, %r4" );
  repos.add( 0xa692771c, "orcc %r9, -2276, %r19" );
  repos.add( 0x9891fca6, "orcc %r7, -858, %r12" );
  repos.add( 0x8295b4bd, "orcc %r22, -2883, %r1" );
  repos.add( 0xb490ff31, "orcc %r3, -207, %r26" );
  repos.add( 0x94943be3, "orcc %r16, -1053, %r10" );
  repos.add( 0xb69376f3, "orcc %r13, -2317, %r27" );
  repos.add( 0xba96bf2f, "orcc %r26, -209, %r29" );
  repos.add( 0x94947fee, "orcc %r17, -18, %r10" );
  repos.add( 0x8e10280c, "or %r0, 2060, %r7" );
  repos.add( 0xb6102733, "or %r0, 1843, %r27" );
  repos.add( 0xba102f92, "or %r0, 3986, %r29" );
  repos.add( 0x8a103117, "or %r0, -3817, %r5" );
  repos.add( 0xb81032ed, "or %r0, -3347, %r28" );
  repos.add( 0x8013fcf0, "or %r15, -784, %r0" );
  repos.add( 0x8015be95, "or %r22, -363, %r0" );
  repos.add( 0x8811270e, "or %r4, 1806, %r4" );
  repos.add( 0x84152083, "or %r20, 131, %r2" );
  repos.add( 0x8a152038, "or %r20, 56, %r5" );
  repos.add( 0xb816a415, "or %r26, 1045, %r28" );
  repos.add( 0x9615a50c, "or %r22, 1292, %r11" );
  repos.add( 0x8811ac89, "or %r6, 3209, %r4" );
  repos.add( 0x9a176b06, "or %r29, 2822, %r13" );
  repos.add( 0x9011e2ec, "or %r7, 748, %r8" );
  repos.add( 0xa810619d, "or %r1, 413, %r20" );
  repos.add( 0xac152177, "or %r20, 375, %r22" );
  repos.add( 0xa6122d53, "or %r8, 3411, %r19" );
  repos.add( 0x8615af87, "or %r22, 3975, %r3" );
  repos.add( 0xb611279e, "or %r4, 1950, %r27" );
  repos.add( 0x9a15f288, "or %r23, -3448, %r13" );
  repos.add( 0xb4147222, "or %r17, -3550, %r26" );
  repos.add( 0x8613b960, "or %r14, -1696, %r3" );
  repos.add( 0xa6177149, "or %r29, -3767, %r19" );
  repos.add( 0xba10b079, "or %r2, -3975, %r29" );
  repos.add( 0x9811728b, "or %r5, -3445, %r12" );
  repos.add( 0x9216fd31, "or %r27, -719, %r9" );
  repos.add( 0x9c14f7c8, "or %r19, -2104, %r14" );
  repos.add( 0xa813369e, "or %r12, -2402, %r20" );
  repos.add( 0x8612333b, "or %r8, -3269, %r3" );
  repos.add( 0xa0133b97, "or %r12, -1129, %r16" );
  repos.add( 0x8213bb75, "or %r14, -1163, %r1" );
  repos.add( 0x9a12fded, "or %r11, -531, %r13" );
  repos.add( 0x8213fcef, "or %r15, -785, %r1" );
  repos.add( 0x88310324, "orn %r4, %r4, %r4" );
  repos.add( 0x8e3001fb, "orn %r0, %r27, %r7" );
  repos.add( 0xac33d200, "orn %r15, %r0, %r22" );
  repos.add( 0xae311760, "orn %r4, %r0, %r23" );
  repos.add( 0x9a370e7c, "orn %r28, %r28, %r13" );
  repos.add( 0x8c315f46, "orn %r5, %r6, %r6" );
  repos.add( 0x9036d188, "orn %r27, %r8, %r8" );
  repos.add( 0xba330333, "orn %r12, %r19, %r29" );
  repos.add( 0xb4341351, "orn %r16, %r17, %r26" );
  repos.add( 0xb6b00ea7, "orncc %r0, %r7, %r27" );
  repos.add( 0x92b2d880, "orncc %r11, %r0, %r9" );
  repos.add( 0x88b4cc00, "orncc %r19, %r0, %r4" );
  repos.add( 0x92b1cec7, "orncc %r7, %r7, %r9" );
  repos.add( 0x80b0cae4, "orncc %r3, %r4, %r0" );
  repos.add( 0x80b28b31, "orncc %r10, %r17, %r0" );
  repos.add( 0xa0b4066f, "orncc %r16, %r15, %r16" );
  repos.add( 0xa0b75c83, "orncc %r29, %r3, %r16" );
  repos.add( 0x9eb18c64, "orncc %r6, %r4, %r15" );
  repos.add( 0x94b03bc7, "orncc %r0, -1081, %r10" );
  repos.add( 0xa8b0266e, "orncc %r0, 1646, %r20" );
  repos.add( 0xaab02dd4, "orncc %r0, 3540, %r21" );
  repos.add( 0x80b0f4c9, "orncc %r3, -2871, %r0" );
  repos.add( 0x80b068c7, "orncc %r1, 2247, %r0" );
  repos.add( 0xa4b4fdf7, "orncc %r19, -521, %r18" );
  repos.add( 0x88b0f7fd, "orncc %r3, -2051, %r4" );
  repos.add( 0x94b1f8ff, "orncc %r7, -1793, %r10" );
  repos.add( 0x8ab1fedd, "orncc %r7, -291, %r5" );
  repos.add( 0x9ab77fa3, "orncc %r29, -93, %r13" );
  repos.add( 0x86b6f9fa, "orncc %r27, -1542, %r3" );
  repos.add( 0xaab4fb65, "orncc %r19, -1179, %r21" );
  repos.add( 0xa0b4bf4a, "orncc %r18, -182, %r16" );
  repos.add( 0x98b270eb, "orncc %r9, -3861, %r12" );
  repos.add( 0x90b4b5b4, "orncc %r18, -2636, %r8" );
  repos.add( 0x84b37926, "orncc %r13, -1754, %r2" );
  repos.add( 0xb4b5b741, "orncc %r22, -2239, %r26" );
  repos.add( 0x92b47aa0, "orncc %r17, -1376, %r9" );
  repos.add( 0x96b1ba82, "orncc %r6, -1406, %r11" );
  repos.add( 0xa0b1b0a8, "orncc %r6, -3928, %r16" );
  repos.add( 0x94b6b022, "orncc %r26, -4062, %r10" );
  repos.add( 0x88b2eefd, "orncc %r11, 3837, %r4" );
  repos.add( 0x92b4e7fe, "orncc %r19, 2046, %r9" );
  repos.add( 0x8eb465fd, "orncc %r17, 1533, %r7" );
  repos.add( 0x8eb06f6e, "orncc %r1, 3950, %r7" );
  repos.add( 0x92b5aee9, "orncc %r22, 3817, %r9" );
  repos.add( 0xb6b46b3b, "orncc %r17, 2875, %r27" );
  repos.add( 0xacb1ab33, "orncc %r6, 2867, %r22" );
  repos.add( 0x92b42d1d, "orncc %r16, 3357, %r9" );
  repos.add( 0x8cb1613d, "orncc %r5, 317, %r6" );
  repos.add( 0xb4b122f8, "orncc %r4, 760, %r26" );
  repos.add( 0x84b5a683, "orncc %r22, 1667, %r2" );
  repos.add( 0x86b5e82e, "orncc %r23, 2094, %r3" );
  repos.add( 0xa8b1e688, "orncc %r7, 1672, %r20" );
  repos.add( 0x84b16492, "orncc %r5, 1170, %r2" );
  repos.add( 0xa4b42811, "orncc %r16, 2065, %r18" );
  repos.add( 0x9cb6a809, "orncc %r26, 2057, %r14" );
  repos.add( 0xb6b1e440, "orncc %r7, 1088, %r27" );
  repos.add( 0x82b26300, "orncc %r9, 768, %r1" );
  repos.add( 0x80303151, "orn %r0, -3759, %r0" );
  repos.add( 0xba302d57, "orn %r0, 3415, %r29" );
  repos.add( 0x8031a10b, "orn %r6, 267, %r0" );
  repos.add( 0x803472ef, "orn %r17, -3345, %r0" );
  repos.add( 0x9432b346, "orn %r10, -3258, %r10" );
  repos.add( 0xac34bfa7, "orn %r18, -89, %r22" );
  repos.add( 0xb435ffba, "orn %r23, -70, %r26" );
  repos.add( 0x9032bf8b, "orn %r10, -117, %r8" );
  repos.add( 0xa43335af, "orn %r12, -2641, %r18" );
  repos.add( 0x8831b62f, "orn %r6, -2513, %r4" );
  repos.add( 0xa632392f, "orn %r8, -1745, %r19" );
  repos.add( 0x9e313da4, "orn %r4, -604, %r15" );
  repos.add( 0x8830f476, "orn %r3, -2954, %r4" );
  repos.add( 0x8a373343, "orn %r28, -3261, %r5" );
  repos.add( 0x9631b233, "orn %r6, -3533, %r11" );
  repos.add( 0x863171c2, "orn %r5, -3646, %r3" );
  repos.add( 0x8a33f509, "orn %r15, -2807, %r5" );
  repos.add( 0xa830fe00, "orn %r3, -512, %r20" );
  repos.add( 0x8432f824, "orn %r11, -2012, %r2" );
  repos.add( 0xa4312afb, "orn %r4, 2811, %r18" );
  repos.add( 0x96332eed, "orn %r12, 3821, %r11" );
  repos.add( 0x98372b3d, "orn %r28, 2877, %r12" );
  repos.add( 0xb430aee3, "orn %r2, 3811, %r26" );
  repos.add( 0x8a376cd6, "orn %r29, 3286, %r5" );
  repos.add( 0x9631ec3e, "orn %r7, 3134, %r11" );
  repos.add( 0x8c32e60f, "orn %r11, 1551, %r6" );
  repos.add( 0xa631214f, "orn %r4, 335, %r19" );
  repos.add( 0x96372c52, "orn %r28, 3154, %r11" );
  repos.add( 0xb835a2d8, "orn %r22, 728, %r28" );
  repos.add( 0x9e34a027, "orn %r18, 39, %r15" );
  repos.add( 0xb6312443, "orn %r4, 1091, %r27" );
  repos.add( 0xa432ec08, "orn %r11, 3080, %r18" );
  repos.add( 0xa940078f, "rd %y, %r20" );
  repos.add( 0xa4fca722, "sdivcc %r18, 1826, %r18" );
  repos.add( 0xb4feaf0c, "sdivcc %r26, 3852, %r26" );
  repos.add( 0x92fa6673, "sdivcc %r9, 1651, %r9" );
  repos.add( 0x98fb331a, "sdivcc %r12, -3302, %r12" );
  repos.add( 0xa0fc3bba, "sdivcc %r16, -1094, %r16" );
  repos.add( 0x96f82325, "sdivcc %r0, 805, %r11" );
  repos.add( 0x9af830e2, "sdivcc %r0, -3870, %r13" );
  repos.add( 0xb6f83318, "sdivcc %r0, -3304, %r27" );
  repos.add( 0xaaf83f89, "sdivcc %r0, -119, %r21" );
  repos.add( 0x86f8a628, "sdivcc %r2, 1576, %r3" );
  repos.add( 0xb4fbe096, "sdivcc %r15, 150, %r26" );
  repos.add( 0x80fc2a94, "sdivcc %r16, 2708, %r0" );
  repos.add( 0x80fae46a, "sdivcc %r11, 1130, %r0" );
  repos.add( 0xa0fbe0e5, "sdivcc %r15, 229, %r16" );
  repos.add( 0x82fd66c1, "sdivcc %r21, 1729, %r1" );
  repos.add( 0xb8fa29e8, "sdivcc %r8, 2536, %r28" );
  repos.add( 0x86fbe617, "sdivcc %r15, 1559, %r3" );
  repos.add( 0x80ff2b56, "sdivcc %r28, 2902, %r0" );
  repos.add( 0x94fda5f4, "sdivcc %r22, 1524, %r10" );
  repos.add( 0x92fdaa9d, "sdivcc %r22, 2717, %r9" );
  repos.add( 0x80ff2b8f, "sdivcc %r28, 2959, %r0" );
  repos.add( 0x9aff67e9, "sdivcc %r29, 2025, %r13" );
  repos.add( 0x94f92aed, "sdivcc %r4, 2797, %r10" );
  repos.add( 0xa8feb424, "sdivcc %r26, -3036, %r20" );
  repos.add( 0x92fc3430, "sdivcc %r16, -3024, %r9" );
  repos.add( 0xacf8714a, "sdivcc %r1, -3766, %r22" );
  repos.add( 0xa2fab407, "sdivcc %r10, -3065, %r17" );
  repos.add( 0x8cff3d88, "sdivcc %r28, -632, %r6" );
  repos.add( 0xa2fbb954, "sdivcc %r14, -1708, %r17" );
  repos.add( 0x80fef6e4, "sdivcc %r27, -2332, %r0" );
  repos.add( 0x80fcf1d5, "sdivcc %r19, -3627, %r0" );
  repos.add( 0xbafc3e8a, "sdivcc %r16, -374, %r29" );
  repos.add( 0x8afaf366, "sdivcc %r11, -3226, %r5" );
  repos.add( 0x8afd74fa, "sdivcc %r21, -2822, %r5" );
  repos.add( 0x9efcbc37, "sdivcc %r18, -969, %r15" );
  repos.add( 0xa6fefb6e, "sdivcc %r27, -1170, %r19" );
  repos.add( 0xaafefbae, "sdivcc %r27, -1106, %r21" );
  repos.add( 0x82ff3dde, "sdivcc %r28, -546, %r1" );
  repos.add( 0x82fdbb3f, "sdivcc %r22, -1217, %r1" );
  repos.add( 0x80fd3ffa, "sdivcc %r20, -6, %r0" );
  repos.add( 0x82fdbdfd, "sdivcc %r22, -515, %r1" );
  repos.add( 0xa4fcfdfe, "sdivcc %r19, -514, %r18" );
  repos.add( 0xaafabfef, "sdivcc %r10, -17, %r21" );
  repos.add( 0xaa7d6810, "sdiv %r21, 2064, %r21" );
  repos.add( 0x987b3959, "sdiv %r12, -1703, %r12" );
  repos.add( 0xa47cbab2, "sdiv %r18, -1358, %r18" );
  repos.add( 0x8478b7f5, "sdiv %r2, -2059, %r2" );
  repos.add( 0x807b6b30, "sdiv %r13, 2864, %r0" );
  repos.add( 0xb67ea224, "sdiv %r26, 548, %r27" );
  repos.add( 0x927dec09, "sdiv %r23, 3081, %r9" );
  repos.add( 0x8e7f6914, "sdiv %r29, 2324, %r7" );
  repos.add( 0xa47f2913, "sdiv %r28, 2323, %r18" );
  repos.add( 0xae7923a2, "sdiv %r4, 930, %r23" );
  repos.add( 0xa07cad0e, "sdiv %r18, 3342, %r16" );
  repos.add( 0x8c79e9e8, "sdiv %r7, 2536, %r6" );
  repos.add( 0xae7ceb17, "sdiv %r19, 2839, %r23" );
  repos.add( 0xaa7d2ad9, "sdiv %r20, 2777, %r21" );
  repos.add( 0x867f637b, "sdiv %r29, 891, %r3" );
  repos.add( 0x927eef47, "sdiv %r27, 3911, %r9" );
  repos.add( 0xa87cecfd, "sdiv %r19, 3325, %r20" );
  repos.add( 0x9a7a6e5f, "sdiv %r9, 3679, %r13" );
  repos.add( 0xa07cacff, "sdiv %r18, 3327, %r16" );
  repos.add( 0xb4793a01, "sdiv %r4, -1535, %r26" );
  repos.add( 0x9e7c7308, "sdiv %r17, -3320, %r15" );
  repos.add( 0x867d7506, "sdiv %r21, -2810, %r3" );
  repos.add( 0x827b3489, "sdiv %r12, -2935, %r1" );
  repos.add( 0x827abc49, "sdiv %r10, -951, %r1" );
  repos.add( 0xaa7df90b, "sdiv %r23, -1781, %r21" );
  repos.add( 0xb67871d5, "sdiv %r1, -3627, %r27" );
  repos.add( 0xae7d3789, "sdiv %r20, -2167, %r23" );
  repos.add( 0x8a7a72f9, "sdiv %r9, -3335, %r5" );
  repos.add( 0xac7ef793, "sdiv %r27, -2157, %r22" );
  repos.add( 0xb679b1fb, "sdiv %r6, -3589, %r27" );
  repos.add( 0xb87f7577, "sdiv %r29, -2697, %r28" );
  repos.add( 0x8c7b3b6f, "sdiv %r12, -1169, %r6" );
  repos.add( 0x9678fbdb, "sdiv %r3, -1061, %r11" );
  repos.add( 0x12e8708, "sethi %hi(-0xba1c2000), %r0" );
  repos.add( 0x106de59, "sethi %hi(-0x1b796400), %r0" );
  repos.add( 0x2100c0a4, "sethi %hi(-0x3029000), %r16" );
  repos.add( 0x25022214, "sethi %hi(-0x8885000), %r18" );
  repos.add( 0x7151082, "sethi %hi(-0x54420800), %r3" );
  repos.add( 0x132198a0, "sethi %hi(-0x86628000), %r9" );
  repos.add( 0x371b2085, "sethi %hi(-0x6c821400), %r27" );
  repos.add( 0x17151330, "sethi %hi(-0x544cc000), %r11" );
  repos.add( 0x19276414, "sethi %hi(-0x9d905000), %r12" );
  repos.add( 0x19249863, "sethi %hi(-0x92618c00), %r12" );
  repos.add( 0x131a39b0, "sethi %hi(-0x68e6c000), %r9" );
  repos.add( 0x191570a5, "sethi %hi(-0x55c29400), %r12" );
  repos.add( 0x1914ee4c, "sethi %hi(-0x53b93000), %r12" );
  repos.add( 0x232c19f8, "sethi %hi(-0xb067e000), %r17" );
  repos.add( 0x2536c4c7, "sethi %hi(-0xdb131c00), %r18" );
  repos.add( 0x1316caf4, "sethi %hi(-0x5b2bd000), %r9" );
  repos.add( 0x1b3ad2e9, "sethi %hi(-0xeb4ba400), %r13" );
  repos.add( 0x233d5725, "sethi %hi(-0xf55c9400), %r17" );
  repos.add( 0x1f2139ff, "sethi %hi(-0x84e7fc00), %r15" );
  repos.add( 0x71abfd1, "sethi %hi(-0x6aff4400), %r3" );
  repos.add( 0x2b3735bb, "sethi %hi(-0xdcd6ec00), %r21" );
  repos.add( 0x533ed2f, "sethi %hi(-0xcfb4bc00), %r2" );
  repos.add( 0x7354ffb, "sethi %hi(-0xd53fec00), %r3" );
  repos.add( 0x231f39ef, "sethi %hi(-0x7ce7bc00), %r17" );
  repos.add( 0x33fbbec, "sethi %hi(-0xfeefb000), %r1" );
  repos.add( 0x812806d2, "sll %r0, %r18, %r0" );
  repos.add( 0x9f2e8aba, "sll %r26, %r26, %r15" );
  repos.add( 0x9f29c447, "sll %r7, %r7, %r15" );
  repos.add( 0xb929cf3c, "sll %r7, %r28, %r28" );
  repos.add( 0xad2b160f, "sll %r12, %r15, %r22" );
  repos.add( 0xbb2ed4da, "sll %r27, %r26, %r29" );
  repos.add( 0xb52826aa, "sll %r0, 10, %r26" );
  repos.add( 0x83283de3, "sll %r0, 3, %r1" );
  repos.add( 0x812c3d9b, "sll %r16, 27, %r0" );
  repos.add( 0x812aecce, "sll %r11, 14, %r0" );
  repos.add( 0xa32c7c00, "sll %r17, 0, %r17" );
  repos.add( 0x932a780a, "sll %r9, 10, %r9" );
  repos.add( 0xa52caaae, "sll %r18, 14, %r18" );
  repos.add( 0x992b28ae, "sll %r12, 14, %r12" );
  repos.add( 0x8b2938a0, "sll %r4, 0, %r5" );
  repos.add( 0xad2966c2, "sll %r5, 2, %r22" );
  repos.add( 0xb72a3344, "sll %r8, 4, %r27" );
  repos.add( 0x872be394, "sll %r15, 20, %r3" );
  repos.add( 0x9328b872, "sll %r2, 18, %r9" );
  repos.add( 0x9528fd1c, "sll %r3, 28, %r10" );
  repos.add( 0xa52b3793, "sll %r12, 19, %r18" );
  repos.add( 0x992b791d, "sll %r13, 29, %r12" );
  repos.add( 0x8b2ba21e, "sll %r14, 30, %r5" );
  repos.add( 0x852da45f, "sll %r22, 31, %r2" );
  repos.add( 0x992f317f, "sll %r28, 31, %r12" );
  repos.add( 0x805f193b, "smul %r28, %r27, %r0" );
  repos.add( 0x805a802f, "smul %r10, %r15, %r0" );
  repos.add( 0x9e581f41, "smul %r0, %r1, %r15" );
  repos.add( 0xba58028b, "smul %r0, %r11, %r29" );
  repos.add( 0x905953c0, "smul %r5, %r0, %r8" );
  repos.add( 0x88584e00, "smul %r1, %r0, %r4" );
  repos.add( 0x885b8d2e, "smul %r14, %r14, %r4" );
  repos.add( 0xba5ed53b, "smul %r27, %r27, %r29" );
  repos.add( 0x8c599fce, "smul %r6, %r14, %r6" );
  repos.add( 0xa05c0d4d, "smul %r16, %r13, %r16" );
  repos.add( 0xb45945ec, "smul %r5, %r12, %r26" );
  repos.add( 0x825ec894, "smul %r27, %r20, %r1" );
  repos.add( 0x9ad801a7, "smulcc %r0, %r7, %r13" );
  repos.add( 0x96d8dae0, "smulcc %r3, %r0, %r11" );
  repos.add( 0x94da0040, "smulcc %r8, %r0, %r10" );
  repos.add( 0x9ada0b68, "smulcc %r8, %r8, %r13" );
  repos.add( 0xa0d85221, "smulcc %r1, %r1, %r16" );
  repos.add( 0x80d850f2, "smulcc %r1, %r18, %r0" );
  repos.add( 0x80ddd6c6, "smulcc %r23, %r6, %r0" );
  repos.add( 0x8cdd9106, "smulcc %r22, %r6, %r6" );
  repos.add( 0x94d99e44, "smulcc %r6, %r4, %r10" );
  repos.add( 0xbad8cde5, "smulcc %r3, %r5, %r29" );
  repos.add( 0x82d82c6b, "smulcc %r0, 3179, %r1" );
  repos.add( 0x80df2886, "smulcc %r28, 2182, %r0" );
  repos.add( 0x80dc6a14, "smulcc %r17, 2580, %r0" );
  repos.add( 0xb4deaf60, "smulcc %r26, 3936, %r26" );
  repos.add( 0xb6def4d0, "smulcc %r27, -2864, %r27" );
  repos.add( 0x98db3a70, "smulcc %r12, -1424, %r12" );
  repos.add( 0x80dcf9d6, "smulcc %r19, -1578, %r0" );
  repos.add( 0xa4dcb1ee, "smulcc %r18, -3602, %r18" );
  repos.add( 0xb8da6890, "smulcc %r9, 2192, %r28" );
  repos.add( 0x98dca451, "smulcc %r18, 1105, %r12" );
  repos.add( 0xacdea981, "smulcc %r26, 2433, %r22" );
  repos.add( 0x96dea1d2, "smulcc %r26, 466, %r11" );
  repos.add( 0x86df203d, "smulcc %r28, 61, %r3" );
  repos.add( 0x98d861ea, "smulcc %r1, 490, %r12" );
  repos.add( 0xa8d8eae1, "smulcc %r3, 2785, %r20" );
  repos.add( 0x8edc6d8d, "smulcc %r17, 3469, %r7" );
  repos.add( 0x8cda2ec5, "smulcc %r8, 3781, %r6" );
  repos.add( 0x9adde4df, "smulcc %r23, 1247, %r13" );
  repos.add( 0x90deeff0, "smulcc %r27, 4080, %r8" );
  repos.add( 0xaedf69ef, "smulcc %r29, 2543, %r23" );
  repos.add( 0x86df6fe7, "smulcc %r29, 4071, %r3" );
  repos.add( 0x86da3330, "smulcc %r8, -3280, %r3" );
  repos.add( 0xbad8b911, "smulcc %r2, -1775, %r29" );
  repos.add( 0x94d93a07, "smulcc %r4, -1529, %r10" );
  repos.add( 0x82dbb0e6, "smulcc %r14, -3866, %r1" );
  repos.add( 0x8adb72ec, "smulcc %r13, -3348, %r5" );
  repos.add( 0x88deb3c6, "smulcc %r26, -3130, %r4" );
  repos.add( 0x86d9fc3e, "smulcc %r7, -962, %r3" );
  repos.add( 0xa2d97e99, "smulcc %r5, -359, %r17" );
  repos.add( 0xb6dd3f33, "smulcc %r20, -205, %r27" );
  repos.add( 0x9adc7f5a, "smulcc %r17, -166, %r13" );
  repos.add( 0xa8d87fce, "smulcc %r1, -50, %r20" );
  repos.add( 0xa4d9b73f, "smulcc %r6, -2241, %r18" );
  repos.add( 0xa8dd7edf, "smulcc %r21, -289, %r20" );
  repos.add( 0x8c58250c, "smul %r0, 1292, %r6" );
  repos.add( 0x805dfc19, "smul %r23, -999, %r0" );
  repos.add( 0xa45ca1e5, "smul %r18, 485, %r18" );
  repos.add( 0x8a596b72, "smul %r5, 2930, %r5" );
  repos.add( 0x965ae6d6, "smul %r11, 1750, %r11" );
  repos.add( 0x905a318e, "smul %r8, -3698, %r8" );
  repos.add( 0x825ca240, "smul %r18, 576, %r1" );
  repos.add( 0x9c5c2890, "smul %r16, 2192, %r14" );
  repos.add( 0x905c2501, "smul %r16, 1281, %r8" );
  repos.add( 0xa85d6078, "smul %r21, 120, %r20" );
  repos.add( 0xa459a542, "smul %r6, 1346, %r18" );
  repos.add( 0xb85ae85a, "smul %r11, 2138, %r28" );
  repos.add( 0xa05a66a1, "smul %r9, 1697, %r16" );
  repos.add( 0x8e58ed68, "smul %r3, 3432, %r7" );
  repos.add( 0x8c5868e9, "smul %r1, 2281, %r6" );
  repos.add( 0xa259eba9, "smul %r7, 2985, %r17" );
  repos.add( 0x9c5ce73c, "smul %r19, 1852, %r14" );
  repos.add( 0x9058e79f, "smul %r3, 1951, %r8" );
  repos.add( 0x925da3ef, "smul %r22, 1007, %r9" );
  repos.add( 0x9c5b2fed, "smul %r12, 4077, %r14" );
  repos.add( 0xba593909, "smul %r4, -1783, %r29" );
  repos.add( 0xae58f708, "smul %r3, -2296, %r23" );
  repos.add( 0x9a5df21b, "smul %r23, -3557, %r13" );
  repos.add( 0xa85f7b0a, "smul %r29, -1270, %r20" );
  repos.add( 0xb45f7b15, "smul %r29, -1259, %r26" );
  repos.add( 0x8458f9cc, "smul %r3, -1588, %r2" );
  repos.add( 0xae5f7cd9, "smul %r29, -807, %r23" );
  repos.add( 0x9e5df1fa, "smul %r23, -3590, %r15" );
  repos.add( 0xa858ffb2, "smul %r3, -78, %r20" );
  repos.add( 0xae5ebdba, "smul %r26, -582, %r23" );
  repos.add( 0xae5ebfe5, "smul %r26, -27, %r23" );
  repos.add( 0xb65afe7e, "smul %r11, -386, %r27" );
  repos.add( 0x9d380960, "sra %r0, %r0, %r14" );
  repos.add( 0x813c15fc, "sra %r16, %r28, %r0" );
  repos.add( 0xa3380d75, "sra %r0, %r21, %r17" );
  repos.add( 0xab3810fc, "sra %r0, %r28, %r21" );
  repos.add( 0x8b38d2c0, "sra %r3, %r0, %r5" );
  repos.add( 0x9f3f57e0, "sra %r29, %r0, %r15" );
  repos.add( 0x953c0470, "sra %r16, %r16, %r10" );
  repos.add( 0x87385e61, "sra %r1, %r1, %r3" );
  repos.add( 0x8b38de25, "sra %r3, %r5, %r5" );
  repos.add( 0x9f3bdd9a, "sra %r15, %r26, %r15" );
  repos.add( 0xa53c95a6, "sra %r18, %r6, %r18" );
  repos.add( 0xad3ed34b, "sra %r27, %r11, %r22" );
  repos.add( 0x933d07fd, "sra %r20, %r29, %r9" );
  repos.add( 0x9d3827da, "sra %r0, 26, %r14" );
  repos.add( 0x8138a83b, "sra %r2, 27, %r0" );
  repos.add( 0x813c3818, "sra %r16, 24, %r0" );
  repos.add( 0x993b3c8c, "sra %r12, 12, %r12" );
  repos.add( 0xa53cb276, "sra %r18, 22, %r18" );
  repos.add( 0x9f3bfa47, "sra %r15, 7, %r15" );
  repos.add( 0xab3d7d6f, "sra %r21, 15, %r21" );
  repos.add( 0x953aac1b, "sra %r10, 27, %r10" );
  repos.add( 0x993aa4c0, "sra %r10, 0, %r12" );
  repos.add( 0x853b38c0, "sra %r12, 0, %r2" );
  repos.add( 0x8d3c6410, "sra %r17, 16, %r6" );
  repos.add( 0x8d3f7c01, "sra %r29, 1, %r6" );
  repos.add( 0xb93a2d94, "sra %r8, 20, %r28" );
  repos.add( 0xb93d778c, "sra %r21, 12, %r28" );
  repos.add( 0x9f3c7c7c, "sra %r17, 28, %r15" );
  repos.add( 0xab3af39a, "sra %r11, 26, %r21" );
  repos.add( 0x8b3a7f1e, "sra %r9, 30, %r5" );
  repos.add( 0x833f7537, "sra %r29, 23, %r1" );
  repos.add( 0x973ea6df, "sra %r26, 31, %r11" );
  repos.add( 0x9f3a74ff, "sra %r9, 31, %r15" );
  repos.add( 0xb5301b20, "srl %r0, %r0, %r26" );
  repos.add( 0x9f300da0, "srl %r0, %r0, %r15" );
  repos.add( 0x8132dccb, "srl %r11, %r11, %r0" );
  repos.add( 0x8133c1e4, "srl %r15, %r4, %r0" );
  repos.add( 0x933016dc, "srl %r0, %r28, %r9" );
  repos.add( 0xb73180a6, "srl %r6, %r6, %r27" );
  repos.add( 0x99311ea4, "srl %r4, %r4, %r12" );
  repos.add( 0xaf354bf7, "srl %r21, %r23, %r23" );
  repos.add( 0x9b33d02d, "srl %r15, %r13, %r13" );
  repos.add( 0xad359cf2, "srl %r22, %r18, %r22" );
  repos.add( 0x99331e4e, "srl %r12, %r14, %r12" );
  repos.add( 0x9930cd64, "srl %r3, %r4, %r12" );
  repos.add( 0x8f371ff7, "srl %r28, %r23, %r7" );
  repos.add( 0x93303420, "srl %r0, 0, %r9" );
  repos.add( 0x85302118, "srl %r0, 24, %r2" );
  repos.add( 0x81372efa, "srl %r28, 26, %r0" );
  repos.add( 0x81326721, "srl %r9, 1, %r0" );
  repos.add( 0xaf35e086, "srl %r23, 6, %r23" );
  repos.add( 0x8330632e, "srl %r1, 14, %r1" );
  repos.add( 0xa3376210, "srl %r29, 16, %r17" );
  repos.add( 0x9b316910, "srl %r5, 16, %r13" );
  repos.add( 0x893069ea, "srl %r1, 10, %r4" );
  repos.add( 0x99316e69, "srl %r5, 9, %r12" );
  repos.add( 0x9d32a2cd, "srl %r10, 13, %r14" );
  repos.add( 0x9531fd96, "srl %r7, 22, %r10" );
  repos.add( 0xa332ab9e, "srl %r10, 30, %r17" );
  repos.add( 0xa531ee0f, "srl %r7, 15, %r18" );
  repos.add( 0x8533e7ff, "srl %r15, 31, %r2" );
  repos.add( 0xb7306fbf, "srl %r1, 31, %r27" );
  repos.add( 0xe2205820, "st %r17, [%r1 + %r0]" );
  repos.add( 0xc0251401, "st %r0, [%r20 + %r1]" );
  repos.add( 0xee251077, "st %r23, [%r20 + %r23]" );
  repos.add( 0xda20971b, "st %r13, [%r2 + %r27]" );
  repos.add( 0xf421c054, "st %r26, [%r7 + %r20]" );
  repos.add( 0xea281d68, "stb %r21, [%r0 + %r8]" );
  repos.add( 0xf6280d29, "stb %r27, [%r0 + %r9]" );
  repos.add( 0xc4288509, "stb %r2, [%r2 + %r9]" );
  repos.add( 0xe62b5d00, "stb %r19, [%r13 + %r0]" );
  repos.add( 0xcc290ac0, "stb %r6, [%r4 + %r0]" );
  repos.add( 0xde290f4f, "stb %r15, [%r4 + %r15]" );
  repos.add( 0xda2a5c6d, "stb %r13, [%r9 + %r13]" );
  repos.add( 0xc22905ef, "stb %r1, [%r4 + %r15]" );
  repos.add( 0xd628d928, "stb %r11, [%r3 + %r8]" );
  repos.add( 0xc02dea82, "stb %r0, [%r23 + 0xa82]" );
  repos.add( 0xc8292dfb, "stb %r4, [%r4 + 0xdfb]" );
  repos.add( 0xc02db774, "stb %r0, [%r22 - 0x88c]" );
  repos.add( 0xda2d2110, "stb %r13, [%r20 + 0x110]" );
  repos.add( 0xc82ce406, "stb %r4, [%r19 + 0x406]" );
  repos.add( 0xd02d6b00, "stb %r8, [%r21 + 0xb00]" );
  repos.add( 0xcc2c20a9, "stb %r6, [%r16 + 0xa9]" );
  repos.add( 0xe8292e01, "stb %r20, [%r4 + 0xe01]" );
  repos.add( 0xd42cae44, "stb %r10, [%r18 + 0xe44]" );
  repos.add( 0xe42a28e8, "stb %r18, [%r8 + 0x8e8]" );
  repos.add( 0xd02a64e5, "stb %r8, [%r9 + 0x4e5]" );
  repos.add( 0xda28e563, "stb %r13, [%r3 + 0x563]" );
  repos.add( 0xd42d6e6a, "stb %r10, [%r21 + 0xe6a]" );
  repos.add( 0xe429a8f5, "stb %r18, [%r6 + 0x8f5]" );
  repos.add( 0xf8296d2f, "stb %r28, [%r5 + 0xd2f]" );
  repos.add( 0xf42a6e97, "stb %r26, [%r9 + 0xe97]" );
  repos.add( 0xc42a6f76, "stb %r2, [%r9 + 0xf76]" );
  repos.add( 0xf428acfd, "stb %r26, [%r2 + 0xcfd]" );
  repos.add( 0xf42a7013, "stb %r26, [%r9 - 0xfed]" );
  repos.add( 0xde2a7805, "stb %r15, [%r9 - 0x7fb]" );
  repos.add( 0xd42c3309, "stb %r10, [%r16 - 0xcf7]" );
  repos.add( 0xf42dfc84, "stb %r26, [%r23 - 0x37c]" );
  repos.add( 0xc22c3949, "stb %r1, [%r16 - 0x6b7]" );
  repos.add( 0xee2c768a, "stb %r23, [%r17 - 0x976]" );
  repos.add( 0xd0297176, "stb %r8, [%r5 - 0xe8a]" );
  repos.add( 0xce287a95, "stb %r7, [%r1 - 0x56b]" );
  repos.add( 0xcc2dbde2, "stb %r6, [%r22 - 0x21e]" );
  repos.add( 0xfa2af5f1, "stb %r29, [%r11 - 0xa0f]" );
  repos.add( 0xf429fcaf, "stb %r26, [%r7 - 0x351]" );
  repos.add( 0xde2938ef, "stb %r15, [%r4 - 0x711]" );
  repos.add( 0xf42cff7c, "stb %r26, [%r19 - 0x84]" );
  repos.add( 0xd42b76bf, "stb %r10, [%r13 - 0x941]" );
  repos.add( 0xec29bdef, "stb %r22, [%r6 - 0x211]" );
  repos.add( 0xcc39ddd4, "std %r6, [%r7 + %r20]" );
  repos.add( 0xc4389df4, "std %r2, [%r2 + %r20]" );
  repos.add( 0xe43c86bd, "std %r18, [%r18 + %r29]" );
  repos.add( 0xec3a1ad6, "std %r22, [%r8 + %r22]" );
  repos.add( 0xc23a807b, "std %r0, [%r10 + %r27]" );
  repos.add( 0xc03bc609, "std %r0, [%r15 + %r9]" );
  repos.add( 0xfa3ac845, "std %r28, [%r11 + %r5]" );
  repos.add( 0xec3a4aa7, "std %r22, [%r9 + %r7]" );
  repos.add( 0xde3be422, "std %r14, [%r15 + 0x422]" );
  repos.add( 0xc03ca198, "std %r0, [%r18 + 0x198]" );
  repos.add( 0xc03de356, "std %r0, [%r23 + 0x356]" );
  repos.add( 0xc238acb3, "std %r0, [%r2 + 0xcb3]" );
  repos.add( 0xe23c2e75, "std %r16, [%r16 + 0xe75]" );
  repos.add( 0xc839352d, "std %r4, [%r4 - 0xad3]" );
  repos.add( 0xc03eb0db, "std %r0, [%r26 - 0xf25]" );
  repos.add( 0xc03a375d, "std %r0, [%r8 - 0x8a3]" );
  repos.add( 0xca38a600, "std %r4, [%r2 + 0x600]" );
  repos.add( 0xd639e840, "std %r10, [%r7 + 0x840]" );
  repos.add( 0xce392205, "std %r6, [%r4 + 0x205]" );
  repos.add( 0xd43a2841, "std %r10, [%r8 + 0x841]" );
  repos.add( 0xee3aa0ac, "std %r22, [%r10 + 0xac]" );
  repos.add( 0xd439a614, "std %r10, [%r6 + 0x614]" );
  repos.add( 0xfa3da961, "std %r28, [%r22 + 0x961]" );
  repos.add( 0xe43de42d, "std %r18, [%r23 + 0x42d]" );
  repos.add( 0xd43ea8b5, "std %r10, [%r26 + 0x8b5]" );
  repos.add( 0xc639649e, "std %r2, [%r5 + 0x49e]" );
  repos.add( 0xea3de477, "std %r20, [%r23 + 0x477]" );
  repos.add( 0xde3aed8d, "std %r14, [%r11 + 0xd8d]" );
  repos.add( 0xca3eadcd, "std %r4, [%r26 + 0xdcd]" );
  repos.add( 0xf63de6bd, "std %r26, [%r23 + 0x6bd]" );
  repos.add( 0xdc3aa3fd, "std %r14, [%r10 + 0x3fd]" );
  repos.add( 0xfa393500, "std %r28, [%r4 - 0xb00]" );
  repos.add( 0xe83c38a0, "std %r20, [%r16 - 0x760]" );
  repos.add( 0xd43f7442, "std %r10, [%r29 - 0xbbe]" );
  repos.add( 0xda3f7095, "std %r12, [%r29 - 0xf6b]" );
  repos.add( 0xec3cf708, "std %r22, [%r19 - 0x8f8]" );
  repos.add( 0xd23af70a, "std %r8, [%r11 - 0x8f6]" );
  repos.add( 0xc6387073, "std %r2, [%r1 - 0xf8d]" );
  repos.add( 0xd43f3e2c, "std %r10, [%r28 - 0x1d4]" );
  repos.add( 0xf63dbb0b, "std %r26, [%r22 - 0x4f5]" );
  repos.add( 0xd63875f4, "std %r10, [%r1 - 0xa0c]" );
  repos.add( 0xe03f77f0, "std %r16, [%r29 - 0x810]" );
  repos.add( 0xd23f3e8f, "std %r8, [%r28 - 0x171]" );
  repos.add( 0xd23935bb, "std %r8, [%r4 - 0xa45]" );
  repos.add( 0xdc3f39fe, "std %r14, [%r28 - 0x602]" );
  repos.add( 0xee38f3fe, "std %r22, [%r3 - 0xc02]" );
  repos.add( 0xd23bfbdf, "std %r8, [%r15 - 0x421]" );
  repos.add( 0xd03afeff, "std %r8, [%r11 - 0x101]" );
  repos.add( 0xc230d800, "sth %r1, [%r3 + %r0]" );
  repos.add( 0xc231dd01, "sth %r1, [%r7 + %r1]" );
  repos.add( 0xe0318430, "sth %r16, [%r6 + %r16]" );
  repos.add( 0xc032462c, "sth %r0, [%r9 + %r12]" );
  repos.add( 0xc033802f, "sth %r0, [%r14 + %r15]" );
  repos.add( 0xee32d1ec, "sth %r23, [%r11 + %r12]" );
  repos.add( 0xd23200e5, "sth %r9, [%r8 + %r5]" );
  repos.add( 0xc034645f, "sth %r0, [%r17 + 0x45f]" );
  repos.add( 0xc034316d, "sth %r0, [%r16 - 0xe93]" );
  repos.add( 0xc0347a71, "sth %r0, [%r17 - 0x58f]" );
  repos.add( 0xc0337e6d, "sth %r0, [%r13 - 0x193]" );
  repos.add( 0xc03236bb, "sth %r0, [%r8 - 0x945]" );
  repos.add( 0xc636ea10, "sth %r3, [%r27 + 0xa10]" );
  repos.add( 0xe432e688, "sth %r18, [%r11 + 0x688]" );
  repos.add( 0xe2332834, "sth %r17, [%r12 + 0x834]" );
  repos.add( 0xe433e51c, "sth %r18, [%r15 + 0x51c]" );
  repos.add( 0xe835e5e1, "sth %r20, [%r23 + 0x5e1]" );
  repos.add( 0xd4332393, "sth %r10, [%r12 + 0x393]" );
  repos.add( 0xce36ed47, "sth %r7, [%r27 + 0xd47]" );
  repos.add( 0xe6326d33, "sth %r19, [%r9 + 0xd33]" );
  repos.add( 0xe43229e7, "sth %r18, [%r8 + 0x9e7]" );
  repos.add( 0xea32a7e9, "sth %r21, [%r10 + 0x7e9]" );
  repos.add( 0xc4352d3f, "sth %r2, [%r20 + 0xd3f]" );
  repos.add( 0xca31e5ff, "sth %r5, [%r7 + 0x5ff]" );
  repos.add( 0xde377007, "sth %r15, [%r29 - 0xff9]" );
  repos.add( 0xf634f818, "sth %r27, [%r19 - 0x7e8]" );
  repos.add( 0xec353530, "sth %r22, [%r20 - 0xad0]" );
  repos.add( 0xf4377870, "sth %r26, [%r29 - 0x790]" );
  repos.add( 0xee32b9c1, "sth %r23, [%r10 - 0x63f]" );
  repos.add( 0xcc343391, "sth %r6, [%r16 - 0xc6f]" );
  repos.add( 0xe232351d, "sth %r17, [%r8 - 0xae3]" );
  repos.add( 0xf632ff90, "sth %r27, [%r11 - 0x70]" );
  repos.add( 0xc237733d, "sth %r1, [%r29 - 0xcc3]" );
  repos.add( 0xe034fbd8, "sth %r16, [%r19 - 0x428]" );
  repos.add( 0xd033fbcb, "sth %r8, [%r15 - 0x435]" );
  repos.add( 0xe633fdbc, "sth %r19, [%r15 - 0x244]" );
  repos.add( 0xce32f7cf, "sth %r7, [%r11 - 0x831]" );
  repos.add( 0xee323eb7, "sth %r23, [%r8 - 0x149]" );
  repos.add( 0xce21e4b0, "st %r7, [%r7 + 0x4b0]" );
  repos.add( 0xc220606b, "st %r1, [%r1 + 0x6b]" );
  repos.add( 0xc220694d, "st %r1, [%r1 + 0x94d]" );
  repos.add( 0xde23e46d, "st %r15, [%r15 + 0x46d]" );
  repos.add( 0xca2167b4, "st %r5, [%r5 + 0x7b4]" );
  repos.add( 0xd622f435, "st %r11, [%r11 - 0xbcb]" );
  repos.add( 0xe624f634, "st %r19, [%r19 - 0x9cc]" );
  repos.add( 0xc620f0de, "st %r3, [%r3 - 0xf22]" );
  repos.add( 0xc026b4fc, "st %r0, [%r26 - 0xb04]" );
  repos.add( 0xce21f99b, "st %r7, [%r7 - 0x665]" );
  repos.add( 0xd422bebb, "st %r10, [%r10 - 0x145]" );
  repos.add( 0xee23a241, "st %r23, [%r14 + 0x241]" );
  repos.add( 0xd426e145, "st %r10, [%r27 + 0x145]" );
  repos.add( 0xca25e843, "st %r5, [%r23 + 0x843]" );
  repos.add( 0xf425270a, "st %r26, [%r20 + 0x70a]" );
  repos.add( 0xf6232166, "st %r27, [%r12 + 0x166]" );
  repos.add( 0xc2212ad1, "st %r1, [%r4 + 0xad1]" );
  repos.add( 0xf420ebc4, "st %r26, [%r3 + 0xbc4]" );
  repos.add( 0xf42369c7, "st %r26, [%r13 + 0x9c7]" );
  repos.add( 0xca212d63, "st %r5, [%r4 + 0xd63]" );
  repos.add( 0xd02568fd, "st %r8, [%r21 + 0x8fd]" );
  repos.add( 0xea2765f7, "st %r21, [%r29 + 0x5f7]" );
  repos.add( 0xe223ef5f, "st %r17, [%r15 + 0xf5f]" );
  repos.add( 0xc426adfb, "st %r2, [%r26 + 0xdfb]" );
  repos.add( 0xfa23edff, "st %r29, [%r15 + 0xdff]" );
  repos.add( 0xc6237710, "st %r3, [%r13 - 0x8f0]" );
  repos.add( 0xd8247708, "st %r12, [%r17 - 0x8f8]" );
  repos.add( 0xd024b866, "st %r8, [%r18 - 0x79a]" );
  repos.add( 0xcc24f714, "st %r6, [%r19 - 0x8ec]" );
  repos.add( 0xd02338b3, "st %r8, [%r12 - 0x74d]" );
  repos.add( 0xc8227d1c, "st %r4, [%r9 - 0x2e4]" );
  repos.add( 0xee273e9a, "st %r23, [%r28 - 0x166]" );
  repos.add( 0xc2233ee1, "st %r1, [%r12 - 0x11f]" );
  repos.add( 0xf420f5fc, "st %r26, [%r3 - 0xa04]" );
  repos.add( 0xca243f69, "st %r5, [%r16 - 0x97]" );
  repos.add( 0xdc253fb9, "st %r14, [%r20 - 0x47]" );
  repos.add( 0xec23f7db, "st %r22, [%r15 - 0x825]" );
  repos.add( 0xd4257ff3, "st %r10, [%r21 - 0xd]" );
  repos.add( 0xa02013b0, "sub %r0, %r16, %r16" );
  repos.add( 0x8024d30d, "sub %r19, %r13, %r0" );
  repos.add( 0x8024cf23, "sub %r19, %r3, %r0" );
  repos.add( 0x9220154c, "sub %r0, %r12, %r9" );
  repos.add( 0x8e23160c, "sub %r12, %r12, %r7" );
  repos.add( 0xb6240590, "sub %r16, %r16, %r27" );
  repos.add( 0x9822993d, "sub %r10, %r29, %r12" );
  repos.add( 0x88231da5, "sub %r12, %r5, %r4" );
  repos.add( 0x90a01c48, "subcc %r0, %r8, %r8" );
  repos.add( 0x94a007d4, "subcc %r0, %r20, %r10" );
  repos.add( 0xa4a007e2, "subcc %r0, %r2, %r18" );
  repos.add( 0x84a31a0c, "subcc %r12, %r12, %r2" );
  repos.add( 0x80a11066, "cmp %r4, %r6" );
  repos.add( 0x92a75b29, "subcc %r29, %r9, %r9" );
  repos.add( 0x90a50588, "subcc %r20, %r8, %r8" );
  repos.add( 0xbaa14d29, "subcc %r5, %r9, %r29" );
  repos.add( 0xaca286db, "subcc %r10, %r27, %r22" );
  repos.add( 0x94a03c6f, "subcc %r0, -913, %r10" );
  repos.add( 0x90a03ec1, "subcc %r0, -319, %r8" );
  repos.add( 0x80a26247, "cmp %r9, 583" );
  repos.add( 0x8aa176a4, "subcc %r5, -2396, %r5" );
  repos.add( 0x9aa3e021, "subcc %r15, 33, %r13" );
  repos.add( 0x8ea72114, "subcc %r28, 276, %r7" );
  repos.add( 0xb4a3ea02, "subcc %r15, 2562, %r26" );
  repos.add( 0x9ca428c4, "subcc %r16, 2244, %r14" );
  repos.add( 0x9ea22416, "subcc %r8, 1046, %r15" );
  repos.add( 0xbaa4a991, "subcc %r18, 2449, %r29" );
  repos.add( 0xaaa724b1, "subcc %r28, 1201, %r21" );
  repos.add( 0xa0a0a1ea, "subcc %r2, 490, %r16" );
  repos.add( 0x88a1ed0d, "subcc %r7, 3341, %r4" );
  repos.add( 0xa2a6e43f, "subcc %r27, 1087, %r17" );
  repos.add( 0x90a6a74b, "subcc %r26, 1867, %r8" );
  repos.add( 0x86a0adea, "subcc %r2, 3562, %r3" );
  repos.add( 0x86a4ef3a, "subcc %r19, 3898, %r3" );
  repos.add( 0xa6a32bee, "subcc %r12, 3054, %r19" );
  repos.add( 0xaaa26dcf, "subcc %r9, 3535, %r21" );
  repos.add( 0xa8a769ff, "subcc %r29, 2559, %r20" );
  repos.add( 0xa2a3a7ff, "subcc %r14, 2047, %r17" );
  repos.add( 0xa0a0f032, "subcc %r3, -4046, %r16" );
  repos.add( 0x94a1b209, "subcc %r6, -3575, %r10" );
  repos.add( 0xa8a57234, "subcc %r21, -3532, %r20" );
  repos.add( 0x90a2f50c, "subcc %r11, -2804, %r8" );
  repos.add( 0xb8a6fb21, "subcc %r27, -1247, %r28" );
  repos.add( 0x8ca33392, "subcc %r12, -3182, %r6" );
  repos.add( 0x9ca13749, "subcc %r4, -2231, %r14" );
  repos.add( 0xb6a5b78a, "subcc %r22, -2166, %r27" );
  repos.add( 0x8ca432de, "subcc %r16, -3362, %r6" );
  repos.add( 0x9aa271bb, "subcc %r9, -3653, %r13" );
  repos.add( 0x90a537f8, "subcc %r20, -2056, %r8" );
  repos.add( 0xa0a572ef, "subcc %r21, -3345, %r16" );
  repos.add( 0xa4a139fd, "subcc %r4, -1539, %r18" );
  repos.add( 0xaca0b1ff, "subcc %r2, -3585, %r22" );
  repos.add( 0xa2a5b6ff, "subcc %r22, -2305, %r17" );
  repos.add( 0x8a203c53, "sub %r0, -941, %r5" );
  repos.add( 0x8e2039a1, "sub %r0, -1631, %r7" );
  repos.add( 0xa8202c8e, "sub %r0, 3214, %r20" );
  repos.add( 0x82202627, "sub %r0, 1575, %r1" );
  repos.add( 0xba2021d5, "sub %r0, 469, %r29" );
  repos.add( 0x802229f0, "sub %r8, 2544, %r0" );
  repos.add( 0xa0242e8c, "sub %r16, 3724, %r16" );
  repos.add( 0x8e21ecc6, "sub %r7, 3270, %r7" );
  repos.add( 0x9e2760a2, "sub %r29, 162, %r15" );
  repos.add( 0x8a232a02, "sub %r12, 2562, %r5" );
  repos.add( 0x94276a09, "sub %r29, 2569, %r10" );
  repos.add( 0x8823a451, "sub %r14, 1105, %r4" );
  repos.add( 0x94242683, "sub %r16, 1667, %r10" );
  repos.add( 0xb821e417, "sub %r7, 1047, %r28" );
  repos.add( 0xb822a72c, "sub %r10, 1836, %r28" );
  repos.add( 0x9023a387, "sub %r14, 903, %r8" );
  repos.add( 0xba21a379, "sub %r6, 889, %r29" );
  repos.add( 0x9a27239d, "sub %r28, 925, %r13" );
  repos.add( 0xb621276e, "sub %r4, 1902, %r27" );
  repos.add( 0x9c20eaf5, "sub %r3, 2805, %r14" );
  repos.add( 0x8426aeaf, "sub %r26, 3759, %r2" );
  repos.add( 0x8226ee7b, "sub %r27, 3707, %r1" );
  repos.add( 0x8622b0d1, "sub %r10, -3887, %r3" );
  repos.add( 0x8c21314a, "sub %r4, -3766, %r6" );
  repos.add( 0xae24764c, "sub %r17, -2484, %r23" );
  repos.add( 0x9c20f4cc, "sub %r3, -2868, %r14" );
  repos.add( 0x8a25b8f2, "sub %r22, -1806, %r5" );
  repos.add( 0x82277a3a, "sub %r29, -1478, %r1" );
  repos.add( 0xb621bb5c, "sub %r6, -1188, %r27" );
  repos.add( 0x9027396e, "sub %r28, -1682, %r8" );
  repos.add( 0xba273d8f, "sub %r28, -625, %r29" );
  repos.add( 0x9c20fb9e, "sub %r3, -1122, %r14" );
  repos.add( 0x8621fb3f, "sub %r7, -1217, %r3" );
  repos.add( 0x8064566e, "subx %r17, %r14, %r0" );
  repos.add( 0x8061428d, "subx %r5, %r13, %r0" );
  repos.add( 0x9864d4e0, "subx %r19, %r0, %r12" );
  repos.add( 0xb6635180, "subx %r13, %r0, %r27" );
  repos.add( 0xa06141c5, "subx %r5, %r5, %r16" );
  repos.add( 0x826053aa, "subx %r1, %r10, %r1" );
  repos.add( 0xb8670b74, "subx %r28, %r20, %r28" );
  repos.add( 0x8263de61, "subx %r15, %r1, %r1" );
  repos.add( 0xa0638050, "subx %r14, %r16, %r16" );
  repos.add( 0x96608f57, "subx %r2, %r23, %r11" );
  repos.add( 0x8a65d8f3, "subx %r23, %r19, %r5" );
  repos.add( 0x80e01d2e, "subxcc %r0, %r14, %r0" );
  repos.add( 0x9ce007ae, "subxcc %r0, %r14, %r14" );
  repos.add( 0xa8e01dd0, "subxcc %r0, %r16, %r20" );
  repos.add( 0x9ae00c27, "subxcc %r0, %r7, %r13" );
  repos.add( 0x82e6c6c0, "subxcc %r27, %r0, %r1" );
  repos.add( 0xa8e281a0, "subxcc %r10, %r0, %r20" );
  repos.add( 0x86e05de1, "subxcc %r1, %r1, %r3" );
  repos.add( 0xa4e09102, "subxcc %r2, %r2, %r18" );
  repos.add( 0x80e2dec3, "subxcc %r11, %r3, %r0" );
  repos.add( 0x80e14e87, "subxcc %r5, %r7, %r0" );
  repos.add( 0xb8e7126e, "subxcc %r28, %r14, %r28" );
  repos.add( 0xaae05c4b, "subxcc %r1, %r11, %r21" );
  repos.add( 0xa4e1d5c3, "subxcc %r7, %r3, %r18" );
  repos.add( 0x80e52069, "subxcc %r20, 105, %r0" );
  repos.add( 0x80e4e3f2, "subxcc %r19, 1010, %r0" );
  repos.add( 0xa0e42db4, "subxcc %r16, 3508, %r16" );
  repos.add( 0x80e2f450, "subxcc %r11, -2992, %r0" );
  repos.add( 0x80e531c8, "subxcc %r20, -3640, %r0" );
  repos.add( 0x80e0f2d9, "subxcc %r3, -3367, %r0" );
  repos.add( 0x9ce3b1cd, "subxcc %r14, -3635, %r14" );
  repos.add( 0x9ae377a6, "subxcc %r13, -2138, %r13" );
  repos.add( 0xaee5f76b, "subxcc %r23, -2197, %r23" );
  repos.add( 0x80e0fcfd, "subxcc %r3, -771, %r0" );
  repos.add( 0xb8e22180, "subxcc %r8, 384, %r28" );
  repos.add( 0x88e42044, "subxcc %r16, 68, %r4" );
  repos.add( 0x98e12b00, "subxcc %r4, 2816, %r12" );
  repos.add( 0x82e5e14a, "subxcc %r23, 330, %r1" );
  repos.add( 0x9ae4a158, "subxcc %r18, 344, %r13" );
  repos.add( 0xb4e1aab0, "subxcc %r6, 2736, %r26" );
  repos.add( 0x9ee12586, "subxcc %r4, 1414, %r15" );
  repos.add( 0xbae727d0, "subxcc %r28, 2000, %r29" );
  repos.add( 0x8ae2215b, "subxcc %r8, 347, %r5" );
  repos.add( 0x92e322eb, "subxcc %r12, 747, %r9" );
  repos.add( 0x82e26e35, "subxcc %r9, 3637, %r1" );
  repos.add( 0x86e6e6f5, "subxcc %r27, 1781, %r3" );
  repos.add( 0x9ee2671f, "subxcc %r9, 1823, %r15" );
  repos.add( 0x8ae4af5d, "subxcc %r18, 3933, %r5" );
  repos.add( 0xa4e77034, "subxcc %r29, -4044, %r18" );
  repos.add( 0x88e73930, "subxcc %r28, -1744, %r4" );
  repos.add( 0xace3704d, "subxcc %r13, -4019, %r22" );
  repos.add( 0xa8e0b5c4, "subxcc %r2, -2620, %r20" );
  repos.add( 0x9ee53d22, "subxcc %r20, -734, %r15" );
  repos.add( 0x8ce3be61, "subxcc %r14, -415, %r6" );
  repos.add( 0x8ae2f12f, "subxcc %r11, -3793, %r5" );
  repos.add( 0xb6e4f3cb, "subxcc %r19, -3125, %r27" );
  repos.add( 0x98e2b9f1, "subxcc %r10, -1551, %r12" );
  repos.add( 0x88e17b3b, "subxcc %r5, -1221, %r4" );
  repos.add( 0x9ae53aeb, "subxcc %r20, -1301, %r13" );
  repos.add( 0x9ae3ffb5, "subxcc %r15, -75, %r13" );
  repos.add( 0xace1bfad, "subxcc %r6, -83, %r22" );
  repos.add( 0x9ae035a8, "subxcc %r0, -2648, %r13" );
  repos.add( 0x82e0355d, "subxcc %r0, -2723, %r1" );
  repos.add( 0x9ce03616, "subxcc %r0, -2538, %r14" );
  repos.add( 0xb4e025f1, "subxcc %r0, 1521, %r26" );
  repos.add( 0x98e024e9, "subxcc %r0, 1257, %r12" );
  repos.add( 0xbae02061, "subxcc %r0, 97, %r29" );
  repos.add( 0x80606d33, "subx %r1, 3379, %r0" );
  repos.add( 0xb66039fd, "subx %r0, -1539, %r27" );
  repos.add( 0x8e603b15, "subx %r0, -1259, %r7" );
  repos.add( 0xb8603074, "subx %r0, -3980, %r28" );
  repos.add( 0xaa6027c9, "subx %r0, 1993, %r21" );
  repos.add( 0x88613874, "subx %r4, -1932, %r4" );
  repos.add( 0xb666fe68, "subx %r27, -408, %r27" );
  repos.add( 0x8e62a300, "subx %r10, 768, %r7" );
  repos.add( 0x8c66e460, "subx %r27, 1120, %r6" );
  repos.add( 0xa062ec06, "subx %r11, 3078, %r16" );
  repos.add( 0x9c676e20, "subx %r29, 3616, %r14" );
  repos.add( 0xac606d06, "subx %r1, 3334, %r22" );
  repos.add( 0x9660e70c, "subx %r3, 1804, %r11" );
  repos.add( 0x9264ea1b, "subx %r19, 2587, %r9" );
  repos.add( 0xb865a7a8, "subx %r22, 1960, %r28" );
  repos.add( 0xa063e1f9, "subx %r15, 505, %r16" );
  repos.add( 0xa263e9d5, "subx %r15, 2517, %r17" );
  repos.add( 0xb6616ed9, "subx %r5, 3801, %r27" );
  repos.add( 0xa0672777, "subx %r28, 1911, %r16" );
  repos.add( 0x8e6727f7, "subx %r28, 2039, %r7" );
  repos.add( 0x9a617482, "subx %r5, -2942, %r13" );
  repos.add( 0x8a63f026, "subx %r15, -4058, %r5" );
  repos.add( 0xa064f053, "subx %r19, -4013, %r16" );
  repos.add( 0xba60f22c, "subx %r3, -3540, %r29" );
  repos.add( 0x9a613ea0, "subx %r4, -352, %r13" );
  repos.add( 0x8664fac2, "subx %r19, -1342, %r3" );
  repos.add( 0x9a657738, "subx %r21, -2248, %r13" );
  repos.add( 0x9e64f0ee, "subx %r19, -3858, %r15" );
  repos.add( 0xa2657a7a, "subx %r21, -1414, %r17" );
  repos.add( 0x8867347b, "subx %r28, -2949, %r4" );
  repos.add( 0xa665fcf6, "subx %r23, -778, %r19" );
  repos.add( 0xa46176ee, "subx %r5, -2322, %r18" );
  repos.add( 0xb4673e7d, "subx %r28, -387, %r26" );
  repos.add( 0xc07d9d8e, "swap [%r22 + %r14], %r0" );
  repos.add( 0xc07cd187, "swap [%r19 + %r7], %r0" );
  repos.add( 0xf87d9f60, "swap [%r22 + %r0], %r28" );
  repos.add( 0xf67b8060, "swap [%r14 + %r0], %r27" );
  repos.add( 0xc2788003, "swap [%r2 + %r3], %r1" );
  repos.add( 0xdc791701, "swap [%r4 + %r1], %r14" );
  repos.add( 0xc07c3e7a, "swap [%r16 - 0x186], %r0" );
  repos.add( 0xce79e962, "swap [%r7 + 0x962], %r7" );
  repos.add( 0xc678f8b3, "swap [%r3 - 0x74d], %r3" );
  repos.add( 0xea7ae808, "swap [%r11 + 0x808], %r21" );
  repos.add( 0xe47c2209, "swap [%r16 + 0x209], %r18" );
  repos.add( 0xf478e118, "swap [%r3 + 0x118], %r26" );
  repos.add( 0xdc7f2641, "swap [%r28 + 0x641], %r14" );
  repos.add( 0xc67ba0c6, "swap [%r14 + 0xc6], %r3" );
  repos.add( 0xd47f6496, "swap [%r29 + 0x496], %r10" );
  repos.add( 0xd07ba4a5, "swap [%r14 + 0x4a5], %r8" );
  repos.add( 0xd07ea3a3, "swap [%r26 + 0x3a3], %r8" );
  repos.add( 0xd07ae5f0, "swap [%r11 + 0x5f0], %r8" );
  repos.add( 0xe27dec7a, "swap [%r23 + 0xc7a], %r17" );
  repos.add( 0xc2796e96, "swap [%r5 + 0xe96], %r1" );
  repos.add( 0xea7a6db3, "swap [%r9 + 0xdb3], %r21" );
  repos.add( 0xcc7be1df, "swap [%r15 + 0x1df], %r6" );
  repos.add( 0xec7a2baf, "swap [%r8 + 0xbaf], %r22" );
  repos.add( 0xea7ea75f, "swap [%r26 + 0x75f], %r21" );
  repos.add( 0xe67cb80c, "swap [%r18 - 0x7f4], %r19" );
  repos.add( 0xf67bf04a, "swap [%r15 - 0xfb6], %r27" );
  repos.add( 0xe27af603, "swap [%r11 - 0x9fd], %r17" );
  repos.add( 0xe67a35a0, "swap [%r8 - 0xa60], %r19" );
  repos.add( 0xf47d305d, "swap [%r20 - 0xfa3], %r26" );
  repos.add( 0xc47bf32c, "swap [%r15 - 0xcd4], %r2" );
  repos.add( 0xc27b7a65, "swap [%r13 - 0x59b], %r1" );
  repos.add( 0xfa797a0f, "swap [%r5 - 0x5f1], %r29" );
  repos.add( 0xc47dbf64, "swap [%r22 - 0x9c], %r2" );
  repos.add( 0xea7b7cbc, "swap [%r13 - 0x344], %r21" );
  repos.add( 0xee7ef7ae, "swap [%r27 - 0x852], %r23" );
  repos.add( 0xc67c7bbd, "swap [%r17 - 0x443], %r3" );
  repos.add( 0xe47efffb, "swap [%r27 - 0x5], %r18" );
  repos.add( 0xa9051074, "taddcc %r20, %r20, %r20" );
  repos.add( 0xb7000f0b, "taddcc %r0, %r11, %r27" );
  repos.add( 0x9b000547, "taddcc %r0, %r7, %r13" );
  repos.add( 0x95039680, "taddcc %r14, %r0, %r10" );
  repos.add( 0xbb04d560, "taddcc %r19, %r0, %r29" );
  repos.add( 0x9b024789, "taddcc %r9, %r9, %r13" );
  repos.add( 0x81045f10, "taddcc %r17, %r16, %r0" );
  repos.add( 0x810744cf, "taddcc %r29, %r15, %r0" );
  repos.add( 0x8b02d8c5, "taddcc %r11, %r5, %r5" );
  repos.add( 0xa704cd81, "taddcc %r19, %r1, %r19" );
  repos.add( 0xb706da91, "taddcc %r27, %r17, %r27" );
  repos.add( 0xb7051324, "taddcc %r20, %r4, %r27" );
  repos.add( 0xab019617, "taddcc %r6, %r23, %r21" );
  repos.add( 0x87002b0e, "taddcc %r0, 2830, %r3" );
  repos.add( 0x8700e5f7, "taddcc %r3, 1527, %r3" );
  repos.add( 0x9702e96d, "taddcc %r11, 2413, %r11" );
  repos.add( 0x8104ef10, "taddcc %r19, 3856, %r0" );
  repos.add( 0x99013eef, "taddcc %r4, -273, %r12" );
  repos.add( 0xa10373fd, "taddcc %r13, -3075, %r16" );
  repos.add( 0x9d04be6b, "taddcc %r18, -405, %r14" );
  repos.add( 0x9300b7ae, "taddcc %r2, -2130, %r9" );
  repos.add( 0xa301396b, "taddcc %r4, -1685, %r17" );
  repos.add( 0xa3043735, "taddcc %r16, -2251, %r17" );
  repos.add( 0xbb02b578, "taddcc %r10, -2696, %r29" );
  repos.add( 0x870076d2, "taddcc %r1, -2350, %r3" );
  repos.add( 0x8b043c0e, "taddcc %r16, -1010, %r5" );
  repos.add( 0xb5027073, "taddcc %r9, -3981, %r26" );
  repos.add( 0x9d06f82a, "taddcc %r27, -2006, %r14" );
  repos.add( 0x9700703c, "taddcc %r1, -4036, %r11" );
  repos.add( 0x9302320c, "taddcc %r8, -3572, %r9" );
  repos.add( 0xad02abff, "taddcc %r10, 3071, %r22" );
  repos.add( 0xad072edf, "taddcc %r28, 3807, %r22" );
  repos.add( 0xaf02a3ff, "taddcc %r10, 1023, %r23" );
  repos.add( 0x8501ef57, "taddcc %r7, 3927, %r2" );
  repos.add( 0xb7012fb8, "taddcc %r4, 4024, %r27" );
  repos.add( 0xa3072c9f, "taddcc %r28, 3231, %r17" );
  repos.add( 0xa7046f68, "taddcc %r17, 3944, %r19" );
  repos.add( 0xa5076ca7, "taddcc %r29, 3239, %r18" );
  repos.add( 0x8d00623b, "taddcc %r1, 571, %r6" );
  repos.add( 0xb704e927, "taddcc %r19, 2343, %r27" );
  repos.add( 0x8f03e133, "taddcc %r15, 307, %r7" );
  repos.add( 0x9d072a13, "taddcc %r28, 2579, %r14" );
  repos.add( 0x9504a584, "taddcc %r18, 1412, %r10" );
  repos.add( 0x8b05e11c, "taddcc %r23, 284, %r5" );
  repos.add( 0x9704e20c, "taddcc %r19, 524, %r11" );
  repos.add( 0x81d4c464, "tn %r19 + %r4" );
  repos.add( 0x81d2c571, "tn %r11 + %r17" );
  repos.add( 0x81d138bd, "tn %r4 + -0x3d" );
  repos.add( 0xa1d6a630, "tn %r26 + -0x30" );
  repos.add( 0x890813e0, "tsubcc %r0, %r0, %r4" );
  repos.add( 0xb9080591, "tsubcc %r0, %r17, %r28" );
  repos.add( 0xb7081489, "tsubcc %r0, %r9, %r27" );
  repos.add( 0xb70a54e9, "tsubcc %r9, %r9, %r27" );
  repos.add( 0xa10c8c12, "tsubcc %r18, %r18, %r16" );
  repos.add( 0x810855c9, "tsubcc %r1, %r9, %r0" );
  repos.add( 0x8108d756, "tsubcc %r3, %r22, %r0" );
  repos.add( 0x8f0d84a7, "tsubcc %r22, %r7, %r7" );
  repos.add( 0x930a0f29, "tsubcc %r8, %r9, %r9" );
  repos.add( 0xa50c8afd, "tsubcc %r18, %r29, %r18" );
  repos.add( 0x970ac2d4, "tsubcc %r11, %r20, %r11" );
  repos.add( 0x830981a7, "tsubcc %r6, %r7, %r1" );
  repos.add( 0x990c1122, "tsubcc %r16, %r2, %r12" );
  repos.add( 0x8708e081, "tsubcc %r3, 129, %r3" );
  repos.add( 0x810cec86, "tsubcc %r19, 3206, %r0" );
  repos.add( 0x810bea9b, "tsubcc %r15, 2715, %r0" );
  repos.add( 0x810bf8b3, "tsubcc %r15, -1869, %r0" );
  repos.add( 0x810d7ce1, "tsubcc %r21, -799, %r0" );
  repos.add( 0x810efb33, "tsubcc %r27, -1229, %r0" );
  repos.add( 0x99086449, "tsubcc %r1, 1097, %r12" );
  repos.add( 0x8b0ae225, "tsubcc %r11, 549, %r5" );
  repos.add( 0xa70b2b48, "tsubcc %r12, 2888, %r19" );
  repos.add( 0x890c6583, "tsubcc %r17, 1411, %r4" );
  repos.add( 0x830de791, "tsubcc %r23, 1937, %r1" );
  repos.add( 0x8f0ee6b1, "tsubcc %r27, 1713, %r7" );
  repos.add( 0xbb0ead35, "tsubcc %r26, 3381, %r29" );
  repos.add( 0xa50c6d4b, "tsubcc %r17, 3403, %r18" );
  repos.add( 0x870de9e7, "tsubcc %r23, 2535, %r3" );
  repos.add( 0xad0d6377, "tsubcc %r21, 887, %r22" );
  repos.add( 0x9909afab, "tsubcc %r6, 4011, %r12" );
  repos.add( 0x970ea77e, "tsubcc %r26, 1918, %r11" );
  repos.add( 0xbb0db400, "tsubcc %r22, -3072, %r29" );
  repos.add( 0xa90a3c80, "tsubcc %r8, -896, %r20" );
  repos.add( 0x9f0c32a1, "tsubcc %r16, -3423, %r15" );
  repos.add( 0x8d097e02, "tsubcc %r5, -510, %r6" );
  repos.add( 0xa5087469, "tsubcc %r1, -2967, %r18" );
  repos.add( 0x850af668, "tsubcc %r11, -2456, %r2" );
  repos.add( 0x830b3e92, "tsubcc %r12, -366, %r1" );
  repos.add( 0xab0a3ba8, "tsubcc %r8, -1112, %r21" );
  repos.add( 0x890f7db1, "tsubcc %r29, -591, %r4" );
  repos.add( 0x83093af1, "tsubcc %r4, -1295, %r1" );
  repos.add( 0xb509bcdd, "tsubcc %r6, -803, %r26" );
  repos.add( 0xa309be6e, "tsubcc %r6, -402, %r17" );
  repos.add( 0xaf08b5f7, "tsubcc %r2, -2569, %r23" );
  repos.add( 0xa50dff73, "tsubcc %r23, -141, %r18" );
  repos.add( 0xb90dbff3, "tsubcc %r22, -13, %r28" );
  repos.add( 0xaef5e5b6, "udivcc %r23, 1462, %r23" );
  repos.add( 0x98f33a0a, "udivcc %r12, -1526, %r12" );
  repos.add( 0x92f02117, "udivcc %r0, 279, %r9" );
  repos.add( 0x82f023a4, "udivcc %r0, 932, %r1" );
  repos.add( 0x92f0243f, "udivcc %r0, 1087, %r9" );
  repos.add( 0x92f72041, "udivcc %r28, 65, %r9" );
  repos.add( 0x8ef6e301, "udivcc %r27, 769, %r7" );
  repos.add( 0x9ef3220a, "udivcc %r12, 522, %r15" );
  repos.add( 0x9ef6a027, "udivcc %r26, 39, %r15" );
  repos.add( 0x88f3ec50, "udivcc %r15, 3152, %r4" );
  repos.add( 0x80f5a0b5, "udivcc %r22, 181, %r0" );
  repos.add( 0xa0f06097, "udivcc %r1, 151, %r16" );
  repos.add( 0xacf460bc, "udivcc %r17, 188, %r22" );
  repos.add( 0x92f1e533, "udivcc %r7, 1331, %r9" );
  repos.add( 0x94f5aa56, "udivcc %r22, 2646, %r10" );
  repos.add( 0x88f466e9, "udivcc %r17, 1769, %r4" );
  repos.add( 0x8ef764bd, "udivcc %r29, 1213, %r7" );
  repos.add( 0xb8f2af55, "udivcc %r10, 3925, %r28" );
  repos.add( 0x88f429f6, "udivcc %r16, 2550, %r4" );
  repos.add( 0x92f1e7af, "udivcc %r7, 1967, %r9" );
  repos.add( 0x88f52e3f, "udivcc %r20, 3647, %r4" );
  repos.add( 0x8ef32ff9, "udivcc %r12, 4089, %r7" );
  repos.add( 0xb6f6b160, "udivcc %r26, -3744, %r27" );
  repos.add( 0xa0f2341a, "udivcc %r8, -3046, %r16" );
  repos.add( 0x96f2b0aa, "udivcc %r10, -3926, %r11" );
  repos.add( 0x98f272b1, "udivcc %r9, -3407, %r12" );
  repos.add( 0x8ef4b03e, "udivcc %r18, -4034, %r7" );
  repos.add( 0x80f77d61, "udivcc %r29, -671, %r0" );
  repos.add( 0x98f0f55a, "udivcc %r3, -2726, %r12" );
  repos.add( 0x86f77de0, "udivcc %r29, -544, %r3" );
  repos.add( 0xa6f3f557, "udivcc %r15, -2729, %r19" );
  repos.add( 0xa0f73bc3, "udivcc %r28, -1085, %r16" );
  repos.add( 0x96f13fcc, "udivcc %r4, -52, %r11" );
  repos.add( 0xa2f2bdba, "udivcc %r10, -582, %r17" );
  repos.add( 0xa0f0bdde, "udivcc %r2, -546, %r16" );
  repos.add( 0xaef5b77e, "udivcc %r22, -2178, %r23" );
  repos.add( 0x88f1ffee, "udivcc %r7, -18, %r4" );
  repos.add( 0x927269c5, "udiv %r9, 2501, %r9" );
  repos.add( 0xa2747e95, "udiv %r17, -363, %r17" );
  repos.add( 0xac702243, "udiv %r0, 579, %r22" );
  repos.add( 0x8c703d6d, "udiv %r0, -659, %r6" );
  repos.add( 0x8073e688, "udiv %r15, 1672, %r0" );
  repos.add( 0x80722dfd, "udiv %r8, 3581, %r0" );
  repos.add( 0x88722040, "udiv %r8, 64, %r4" );
  repos.add( 0xa0776414, "udiv %r29, 1044, %r16" );
  repos.add( 0x88752310, "udiv %r20, 784, %r4" );
  repos.add( 0x88706624, "udiv %r1, 1572, %r4" );
  repos.add( 0xa27525a0, "udiv %r20, 1440, %r17" );
  repos.add( 0xa471a1a9, "udiv %r6, 425, %r18" );
  repos.add( 0xa472ee21, "udiv %r11, 3617, %r18" );
  repos.add( 0xa071a53a, "udiv %r6, 1338, %r16" );
  repos.add( 0xac74a475, "udiv %r18, 1141, %r22" );
  repos.add( 0x8c756c7a, "udiv %r21, 3194, %r6" );
  repos.add( 0xac70ebcc, "udiv %r3, 3020, %r22" );
  repos.add( 0x9674e8fe, "udiv %r19, 2302, %r11" );
  repos.add( 0xa2736ed9, "udiv %r13, 3801, %r17" );
  repos.add( 0x9271abf9, "udiv %r6, 3065, %r9" );
  repos.add( 0xa072af6d, "udiv %r10, 3949, %r16" );
  repos.add( 0x8a73f880, "udiv %r15, -1920, %r5" );
  repos.add( 0x967238a4, "udiv %r8, -1884, %r11" );
  repos.add( 0xac7432b0, "udiv %r16, -3408, %r22" );
  repos.add( 0xa871306b, "udiv %r4, -3989, %r20" );
  repos.add( 0x867732aa, "udiv %r28, -3414, %r3" );
  repos.add( 0x9070f873, "udiv %r3, -1933, %r8" );
  repos.add( 0x9473f770, "udiv %r15, -2192, %r10" );
  repos.add( 0x8c75b9ab, "udiv %r22, -1621, %r6" );
  repos.add( 0xba74b1db, "udiv %r18, -3621, %r29" );
  repos.add( 0x9a74facf, "udiv %r19, -1329, %r13" );
  repos.add( 0x90753bd5, "udiv %r20, -1067, %r8" );
  repos.add( 0x9c707f5d, "udiv %r1, -163, %r14" );
  repos.add( 0xac70fde7, "udiv %r3, -537, %r22" );
  repos.add( 0x945293c0, "umul %r10, %r0, %r10" );
  repos.add( 0x80575768, "umul %r29, %r8, %r0" );
  repos.add( 0x805143c3, "umul %r5, %r3, %r0" );
  repos.add( 0x9e5510b4, "umul %r20, %r20, %r15" );
  repos.add( 0xaa519ec6, "umul %r6, %r6, %r21" );
  repos.add( 0x8c535966, "umul %r13, %r6, %r6" );
  repos.add( 0xa055ded0, "umul %r23, %r16, %r16" );
  repos.add( 0x9c530560, "umul %r12, %r0, %r14" );
  repos.add( 0xb854c500, "umul %r19, %r0, %r28" );
  repos.add( 0x8a500dd1, "umul %r0, %r17, %r5" );
  repos.add( 0x86500c2d, "umul %r0, %r13, %r3" );
  repos.add( 0xa25454cb, "umul %r17, %r11, %r17" );
  repos.add( 0xa2545227, "umul %r17, %r7, %r17" );
  repos.add( 0xa8554cdd, "umul %r21, %r29, %r20" );
  repos.add( 0x9e558fd7, "umul %r22, %r23, %r15" );
  repos.add( 0xa8d51c80, "umulcc %r20, %r0, %r20" );
  repos.add( 0xaed3de8f, "umulcc %r15, %r15, %r23" );
  repos.add( 0x80d54bba, "umulcc %r21, %r26, %r0" );
  repos.add( 0x94d1814a, "umulcc %r6, %r10, %r10" );
  repos.add( 0x8ed4c487, "umulcc %r19, %r7, %r7" );
  repos.add( 0x86d0cb88, "umulcc %r3, %r8, %r3" );
  repos.add( 0x84d04040, "umulcc %r1, %r0, %r2" );
  repos.add( 0x84d119e0, "umulcc %r4, %r0, %r2" );
  repos.add( 0x88d007d6, "umulcc %r0, %r22, %r4" );
  repos.add( 0x94d04537, "umulcc %r1, %r23, %r10" );
  repos.add( 0x92d30ec6, "umulcc %r12, %r6, %r9" );
  repos.add( 0x80d3baab, "umulcc %r14, -1365, %r0" );
  repos.add( 0x88d1367b, "umulcc %r4, -2437, %r4" );
  repos.add( 0x8cd76018, "umulcc %r29, 24, %r6" );
  repos.add( 0xb8d4a412, "umulcc %r18, 1042, %r28" );
  repos.add( 0x98d3e019, "umulcc %r15, 25, %r12" );
  repos.add( 0xacd36123, "umulcc %r13, 291, %r22" );
  repos.add( 0x8ed12238, "umulcc %r4, 568, %r7" );
  repos.add( 0x88d1ea49, "umulcc %r7, 2633, %r4" );
  repos.add( 0xa4d1e94c, "umulcc %r7, 2380, %r18" );
  repos.add( 0x82d1e89b, "umulcc %r7, 2203, %r1" );
  repos.add( 0x90d1e366, "umulcc %r7, 870, %r8" );
  repos.add( 0x9ad0ad87, "umulcc %r2, 3463, %r13" );
  repos.add( 0x9ed6ae65, "umulcc %r26, 3685, %r15" );
  repos.add( 0x88d4a39f, "umulcc %r18, 927, %r4" );
  repos.add( 0x8ad3ed76, "umulcc %r15, 3446, %r5" );
  repos.add( 0x9ad32de7, "umulcc %r12, 3559, %r13" );
  repos.add( 0xa0d4aafb, "umulcc %r18, 2811, %r16" );
  repos.add( 0xb8d33401, "umulcc %r12, -3071, %r28" );
  repos.add( 0x84d4308c, "umulcc %r16, -3956, %r2" );
  repos.add( 0x9ed2f50a, "umulcc %r11, -2806, %r15" );
  repos.add( 0x9cd5ba06, "umulcc %r22, -1530, %r14" );
  repos.add( 0xb4d3f155, "umulcc %r15, -3755, %r26" );
  repos.add( 0x86d3f8a6, "umulcc %r15, -1882, %r3" );
  repos.add( 0xacd075cc, "umulcc %r1, -2612, %r22" );
  repos.add( 0x8ad73a8b, "umulcc %r28, -1397, %r5" );
  repos.add( 0x88d3fb78, "umulcc %r15, -1160, %r4" );
  repos.add( 0xa0d0b4f6, "umulcc %r2, -2826, %r16" );
  repos.add( 0x86d5ff8b, "umulcc %r23, -117, %r3" );
  repos.add( 0x94d23ee9, "umulcc %r8, -279, %r10" );
  repos.add( 0xa0d6fbe7, "umulcc %r27, -1049, %r16" );
  repos.add( 0x84d2bedd, "umulcc %r10, -291, %r2" );
  repos.add( 0xae503185, "umul %r0, -3707, %r23" );
  repos.add( 0x86503d53, "umul %r0, -685, %r3" );
  repos.add( 0x8055b076, "umul %r22, -3978, %r0" );
  repos.add( 0xa85525b3, "umul %r20, 1459, %r20" );
  repos.add( 0x9a53780d, "umul %r13, -2035, %r13" );
  repos.add( 0xb852a411, "umul %r10, 1041, %r28" );
  repos.add( 0xba55608c, "umul %r21, 140, %r29" );
  repos.add( 0xb852ec82, "umul %r11, 3202, %r28" );
  repos.add( 0x92542c12, "umul %r16, 3090, %r9" );
  repos.add( 0x965364e2, "umul %r13, 1250, %r11" );
  repos.add( 0x8a5224b8, "umul %r8, 1208, %r5" );
  repos.add( 0x86522e4a, "umul %r8, 3658, %r3" );
  repos.add( 0x9a5168e9, "umul %r5, 2281, %r13" );
  repos.add( 0xba506a9e, "umul %r1, 2718, %r29" );
  repos.add( 0xa6572ab5, "umul %r28, 2741, %r19" );
  repos.add( 0xae56e9ed, "umul %r27, 2541, %r23" );
  repos.add( 0x8c56af8b, "umul %r26, 3979, %r6" );
  repos.add( 0xae51e7f3, "umul %r7, 2035, %r23" );
  repos.add( 0x98556f9b, "umul %r21, 3995, %r12" );
  repos.add( 0xac55320a, "umul %r20, -3574, %r22" );
  repos.add( 0x9651b882, "umul %r6, -1918, %r11" );
  repos.add( 0x9453f1c2, "umul %r15, -3646, %r10" );
  repos.add( 0xb6577d08, "umul %r29, -760, %r27" );
  repos.add( 0x9c53791a, "umul %r13, -1766, %r14" );
  repos.add( 0xa653fc62, "umul %r15, -926, %r19" );
  repos.add( 0x96517dd0, "umul %r5, -560, %r11" );
  repos.add( 0x9e51787a, "umul %r5, -1926, %r15" );
  repos.add( 0xa0537e8d, "umul %r13, -371, %r16" );
  repos.add( 0xac54bc79, "umul %r18, -903, %r22" );
  repos.add( 0xa65477b9, "umul %r17, -2119, %r19" );
  repos.add( 0x92513f1e, "umul %r4, -226, %r9" );
  repos.add( 0x8e53b7de, "umul %r14, -2082, %r7" );
  repos.add( 0x8453bf3b, "umul %r14, -197, %r2" );
  repos.add( 0x81835382, "wr %r13, %r2, %y" );
  repos.add( 0x81851db2, "wr %r20, %r18, %y" );
  repos.add( 0x8183b591, "wr %r14, -2671, %y" );
  repos.add( 0x8185a0be, "wr %r22, 190, %y" );
  repos.add( 0x803f56e0, "xnor %r29, %r0, %r0" );
  repos.add( 0x803d94f6, "xnor %r22, %r22, %r0" );
  repos.add( 0x803f05c2, "xnor %r28, %r2, %r0" );
  repos.add( 0x88381890, "xnor %r0, %r16, %r4" );
  repos.add( 0xaa381b3b, "xnor %r0, %r27, %r21" );
  repos.add( 0xa43b1a80, "xnor %r12, %r0, %r18" );
  repos.add( 0x903dca00, "xnor %r23, %r0, %r8" );
  repos.add( 0xa23b052c, "xnor %r12, %r12, %r17" );
  repos.add( 0x8e3a53a9, "xnor %r9, %r9, %r7" );
  repos.add( 0xa43c90b7, "xnor %r18, %r23, %r18" );
  repos.add( 0xb63ecf11, "xnor %r27, %r17, %r27" );
  repos.add( 0x963c546d, "xnor %r17, %r13, %r11" );
  repos.add( 0x9c38968c, "xnor %r2, %r12, %r14" );
  repos.add( 0x80bf09ab, "xnorcc %r28, %r11, %r0" );
  repos.add( 0x80bb0586, "xnorcc %r12, %r6, %r0" );
  repos.add( 0x9ebbc7c5, "xnorcc %r15, %r5, %r15" );
  repos.add( 0xaabacdb5, "xnorcc %r11, %r21, %r21" );
  repos.add( 0x9ebb870f, "xnorcc %r14, %r15, %r15" );
  repos.add( 0x82b99d7c, "xnorcc %r6, %r28, %r1" );
  repos.add( 0x8ab9d98c, "xnorcc %r7, %r12, %r5" );
  repos.add( 0x9ab839e4, "xnorcc %r0, -1564, %r13" );
  repos.add( 0x82b878bd, "xnorcc %r1, -1859, %r1" );
  repos.add( 0x80bd3b86, "xnorcc %r20, -1146, %r0" );
  repos.add( 0x80bcf704, "xnorcc %r19, -2300, %r0" );
  repos.add( 0xa8bd28fb, "xnorcc %r20, 2299, %r20" );
  repos.add( 0x80bb213f, "xnorcc %r12, 319, %r0" );
  repos.add( 0x92ba6e47, "xnorcc %r9, 3655, %r9" );
  repos.add( 0xa4bca2d3, "xnorcc %r18, 723, %r18" );
  repos.add( 0x80b8e350, "xnorcc %r3, 848, %r0" );
  repos.add( 0x9cbba009, "xnorcc %r14, 9, %r14" );
  repos.add( 0x8cbaf7fd, "xnorcc %r11, -2051, %r6" );
  repos.add( 0x9cbebdf3, "xnorcc %r26, -525, %r14" );
  repos.add( 0x88b8fc7f, "xnorcc %r3, -897, %r4" );
  repos.add( 0xb6babb3b, "xnorcc %r10, -1221, %r27" );
  repos.add( 0xa2bbbfb2, "xnorcc %r14, -78, %r17" );
  repos.add( 0x8cbc337c, "xnorcc %r16, -3204, %r6" );
  repos.add( 0x86bcf2cf, "xnorcc %r19, -3377, %r3" );
  repos.add( 0x9abbb8cd, "xnorcc %r14, -1843, %r13" );
  repos.add( 0x88bcfd0b, "xnorcc %r19, -757, %r4" );
  repos.add( 0x8cbf7f08, "xnorcc %r29, -248, %r6" );
  repos.add( 0xa0bebe14, "xnorcc %r26, -492, %r16" );
  repos.add( 0xa4baf063, "xnorcc %r11, -3997, %r18" );
  repos.add( 0x86bd3c03, "xnorcc %r20, -1021, %r3" );
  repos.add( 0xa4b9b860, "xnorcc %r6, -1952, %r18" );
  repos.add( 0xa4beb114, "xnorcc %r26, -3820, %r18" );
  repos.add( 0xb6b9a3fb, "xnorcc %r6, 1019, %r27" );
  repos.add( 0xa4ba6afd, "xnorcc %r9, 2813, %r18" );
  repos.add( 0xa4bc2f55, "xnorcc %r16, 3925, %r18" );
  repos.add( 0xbabdaeec, "xnorcc %r22, 3820, %r29" );
  repos.add( 0xb8bf676a, "xnorcc %r29, 1898, %r28" );
  repos.add( 0xb6bf6b72, "xnorcc %r29, 2930, %r27" );
  repos.add( 0xaab8eba4, "xnorcc %r3, 2980, %r21" );
  repos.add( 0x9cbbe43b, "xnorcc %r15, 1083, %r14" );
  repos.add( 0xaeb969a2, "xnorcc %r5, 2466, %r23" );
  repos.add( 0x92bea01f, "xnorcc %r26, 31, %r9" );
  repos.add( 0x90b9624a, "xnorcc %r5, 586, %r8" );
  repos.add( 0xa4bb240b, "xnorcc %r12, 1035, %r18" );
  repos.add( 0x88bba20c, "xnorcc %r14, 524, %r4" );
  repos.add( 0x82383335, "xnor %r0, -3275, %r1" );
  repos.add( 0xb4383181, "xnor %r0, -3711, %r26" );
  repos.add( 0x8038f85b, "xnor %r3, -1957, %r0" );
  repos.add( 0x803f75db, "xnor %r29, -2597, %r0" );
  repos.add( 0x8638eb62, "xnor %r3, 2914, %r3" );
  repos.add( 0x8e39e423, "xnor %r7, 1059, %r7" );
  repos.add( 0xa43ebf9b, "xnor %r26, -101, %r18" );
  repos.add( 0xa0393df5, "xnor %r4, -523, %r16" );
  repos.add( 0xa03eb6f6, "xnor %r26, -2314, %r16" );
  repos.add( 0xb638ba7e, "xnor %r2, -1410, %r27" );
  repos.add( 0x883eb7b8, "xnor %r26, -2120, %r4" );
  repos.add( 0xa0387bd1, "xnor %r1, -1071, %r16" );
  repos.add( 0xa0387c2d, "xnor %r1, -979, %r16" );
  repos.add( 0x9e3dbb46, "xnor %r22, -1210, %r15" );
  repos.add( 0x9e3df4e4, "xnor %r23, -2844, %r15" );
  repos.add( 0x963cf398, "xnor %r19, -3176, %r11" );
  repos.add( 0xa83a7590, "xnor %r9, -2672, %r20" );
  repos.add( 0x923cb28c, "xnor %r18, -3444, %r9" );
  repos.add( 0xba38b860, "xnor %r2, -1952, %r29" );
  repos.add( 0x843ceffc, "xnor %r19, 4092, %r2" );
  repos.add( 0x8c3aadbe, "xnor %r10, 3518, %r6" );
  repos.add( 0xa839a7e7, "xnor %r6, 2023, %r20" );
  repos.add( 0x94396ebc, "xnor %r5, 3772, %r10" );
  repos.add( 0xac3865f6, "xnor %r1, 1526, %r22" );
  repos.add( 0xba3ea53d, "xnor %r26, 1341, %r29" );
  repos.add( 0xba3cee63, "xnor %r19, 3683, %r29" );
  repos.add( 0x883d6ce2, "xnor %r21, 3298, %r4" );
  repos.add( 0x943ba0ed, "xnor %r14, 237, %r10" );
  repos.add( 0x943d24c6, "xnor %r20, 1222, %r10" );
  repos.add( 0xa23b2d0c, "xnor %r12, 3340, %r17" );
  repos.add( 0x9039e644, "xnor %r7, 1604, %r8" );
  repos.add( 0xa838e341, "xnor %r3, 833, %r20" );
  repos.add( 0xb43a6540, "xnor %r9, 1344, %r26" );
  repos.add( 0x9e3c6c01, "xnor %r17, 3073, %r15" );
  repos.add( 0x80199aca, "xor %r6, %r10, %r0" );
  repos.add( 0x801e8f35, "xor %r26, %r21, %r0" );
  repos.add( 0x9a1a0d60, "xor %r8, %r0, %r13" );
  repos.add( 0x8e1bddef, "xor %r15, %r15, %r7" );
  repos.add( 0xa21dc317, "xor %r23, %r23, %r17" );
  repos.add( 0x941a94fb, "xor %r10, %r27, %r10" );
  repos.add( 0xa61cd0ed, "xor %r19, %r13, %r19" );
  repos.add( 0x8a1984a5, "xor %r6, %r5, %r5" );
  repos.add( 0xa61f1bb3, "xor %r28, %r19, %r19" );
  repos.add( 0xae19cc8c, "xor %r7, %r12, %r23" );
  repos.add( 0x8e1a4477, "xor %r9, %r23, %r7" );
  repos.add( 0xac980fd0, "xorcc %r0, %r16, %r22" );
  repos.add( 0x8a9818f0, "xorcc %r0, %r16, %r5" );
  repos.add( 0x8e9a56e0, "xorcc %r9, %r0, %r7" );
  repos.add( 0x9899d420, "xorcc %r7, %r0, %r12" );
  repos.add( 0x809b1c26, "xorcc %r12, %r6, %r0" );
  repos.add( 0x809c9d8a, "xorcc %r18, %r10, %r0" );
  repos.add( 0x8498827d, "xorcc %r2, %r29, %r2" );
  repos.add( 0x84988228, "xorcc %r2, %r8, %r2" );
  repos.add( 0xb499471a, "xorcc %r5, %r26, %r26" );
  repos.add( 0x8e9c131d, "xorcc %r16, %r29, %r7" );
  repos.add( 0x9a9a0d2c, "xorcc %r8, %r12, %r13" );
  repos.add( 0x98982843, "xorcc %r0, 2115, %r12" );
  repos.add( 0x94982333, "xorcc %r0, 819, %r10" );
  repos.add( 0xae98341b, "xorcc %r0, -3045, %r23" );
  repos.add( 0x889838af, "xorcc %r0, -1873, %r4" );
  repos.add( 0xa89837a7, "xorcc %r0, -2137, %r20" );
  repos.add( 0xa89d2100, "xorcc %r20, 256, %r20" );
  repos.add( 0x809924ca, "xorcc %r4, 1226, %r0" );
  repos.add( 0xa89d2615, "xorcc %r20, 1557, %r20" );
  repos.add( 0x809afe32, "xorcc %r11, -462, %r0" );
  repos.add( 0x8099bbba, "xorcc %r6, -1094, %r0" );
  repos.add( 0xb89c6221, "xorcc %r17, 545, %r28" );
  repos.add( 0xa89b2234, "xorcc %r12, 564, %r20" );
  repos.add( 0x829c22c5, "xorcc %r16, 709, %r1" );
  repos.add( 0xa09aa8c3, "xorcc %r10, 2243, %r16" );
  repos.add( 0x949f2566, "xorcc %r28, 1382, %r10" );
  repos.add( 0xa09ce21f, "xorcc %r19, 543, %r16" );
  repos.add( 0x86996d65, "xorcc %r5, 3429, %r3" );
  repos.add( 0x889beeb4, "xorcc %r15, 3764, %r4" );
  repos.add( 0xa098e5f9, "xorcc %r3, 1529, %r16" );
  repos.add( 0x949d69f3, "xorcc %r21, 2547, %r10" );
  repos.add( 0xb498ae9f, "xorcc %r2, 3743, %r26" );
  repos.add( 0xa6997112, "xorcc %r5, -3822, %r19" );
  repos.add( 0x929cf109, "xorcc %r19, -3831, %r9" );
  repos.add( 0xa49eb01d, "xorcc %r26, -4067, %r18" );
  repos.add( 0x9c9a7845, "xorcc %r9, -1979, %r14" );
  repos.add( 0xa49afc8c, "xorcc %r11, -884, %r18" );
  repos.add( 0x9c9c3c52, "xorcc %r16, -942, %r14" );
  repos.add( 0x849cb91d, "xorcc %r18, -1763, %r2" );
  repos.add( 0x989cf31b, "xorcc %r19, -3301, %r12" );
  repos.add( 0xa69dbf1c, "xorcc %r22, -228, %r19" );
  repos.add( 0x9c9c39da, "xorcc %r16, -1574, %r14" );
  repos.add( 0x929cbb7c, "xorcc %r18, -1156, %r9" );
  repos.add( 0xa69ef9af, "xorcc %r27, -1617, %r19" );
  repos.add( 0x909abbee, "xorcc %r10, -1042, %r8" );
  repos.add( 0x8a9bbefa, "xorcc %r14, -262, %r5" );
  repos.add( 0x8698b5ff, "xorcc %r2, -2561, %r3" );
  repos.add( 0xae997dfe, "xorcc %r5, -514, %r23" );
  repos.add( 0x801ae611, "xor %r11, 1553, %r0" );
  repos.add( 0x80187739, "xor %r1, -2247, %r0" );
  repos.add( 0xb81f2826, "xor %r28, 2086, %r28" );
  repos.add( 0x9c1ba394, "xor %r14, 916, %r14" );
  repos.add( 0x8418b455, "xor %r2, -2987, %r2" );
  repos.add( 0x981b3775, "xor %r12, -2187, %r12" );
  repos.add( 0xa61a202c, "xor %r8, 44, %r19" );
  repos.add( 0x8c1b6482, "xor %r13, 1154, %r6" );
  repos.add( 0x9e186584, "xor %r1, 1412, %r15" );
  repos.add( 0xa61ee158, "xor %r27, 344, %r19" );
  repos.add( 0x881c213c, "xor %r16, 316, %r4" );
  repos.add( 0x8c186e06, "xor %r1, 3590, %r6" );
  repos.add( 0xa01ea6c5, "xor %r26, 1733, %r16" );
  repos.add( 0x901c2cd8, "xor %r16, 3288, %r8" );
  repos.add( 0xa81b27ac, "xor %r12, 1964, %r20" );
  repos.add( 0x881eab3c, "xor %r26, 2876, %r4" );
  repos.add( 0x9e18ab7c, "xor %r2, 2940, %r15" );
  repos.add( 0xa619ecf9, "xor %r7, 3321, %r19" );
  repos.add( 0x861b6fae, "xor %r13, 4014, %r3" );
  repos.add( 0x8c186bf5, "xor %r1, 3061, %r6" );
  repos.add( 0xaa18effc, "xor %r3, 4092, %r21" );
  repos.add( 0x901baff7, "xor %r14, 4087, %r8" );
  repos.add( 0xae1bf850, "xor %r15, -1968, %r23" );
  repos.add( 0xa21a3288, "xor %r8, -3448, %r17" );
  repos.add( 0x821c7229, "xor %r17, -3543, %r1" );
  repos.add( 0xba18f0d8, "xor %r3, -3880, %r29" );
  repos.add( 0x8e18f0b5, "xor %r3, -3915, %r7" );
  repos.add( 0x821d34e2, "xor %r20, -2846, %r1" );
  repos.add( 0xa618b9e8, "xor %r2, -1560, %r19" );
  repos.add( 0x881c7565, "xor %r17, -2715, %r4" );
  repos.add( 0xa018b74b, "xor %r2, -2229, %r16" );
  repos.add( 0xb819f9f2, "xor %r7, -1550, %r28" );
  repos.add( 0x921af4fb, "xor %r11, -2821, %r9" );
  repos.add( 0xb819bd73, "xor %r6, -653, %r28" );
  repos.add( 0xa8193f8f, "xor %r4, -113, %r20" );
  repos.add( 0xa41f773f, "xor %r29, -2241, %r18" );
  repos.add( 0x9819b3ff, "xor %r6, -3073, %r12" );
}
