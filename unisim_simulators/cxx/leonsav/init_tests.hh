/*
 *  Copyright (c) 2019-2020,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Yves Lhuillier (yves.lhuillier@cea.fr)
 */

extern bool keep_test();

template <typename R>
void init_tests( R& repos )
{
  repos.add( 0x8002c6e0, "add %r11, %r0, %r0" );
  repos.add( 0x80018cc0, "add %r6, %r0, %r0" );
  repos.add( 0x840000e2, "add %r0, %r2, %r2" );
  repos.add( 0x80035785, "add %r13, %r5, %r0" );
  repos.add( 0x8002ccc5, "add %r11, %r5, %r0" );
  repos.add( 0x960281aa, "add %r10, %r10, %r11" );
  repos.add( 0x84019a66, "add %r6, %r6, %r2" );
  repos.add( 0x8e019ba0, "add %r6, %r0, %r7" );
  repos.add( 0x8c02cee0, "add %r11, %r0, %r6" );
  repos.add( 0x8a000a8b, "add %r0, %r11, %r5" );
  repos.add( 0x94001d44, "add %r0, %r4, %r10" );
  repos.add( 0x8e015627, "add %r5, %r7, %r7" );
  repos.add( 0x8e011d47, "add %r4, %r7, %r7" );
  repos.add( 0x94010666, "add %r4, %r6, %r10" );
  repos.add( 0x9800cec6, "add %r3, %r6, %r12" );
  repos.add( 0x9a800e20, "addcc %r0, %r0, %r13" );
  repos.add( 0x84800aa0, "addcc %r0, %r0, %r2" );
  repos.add( 0x808159a0, "addcc %r5, %r0, %r0" );
  repos.add( 0x9a834f4d, "addcc %r13, %r13, %r13" );
  repos.add( 0x868117c0, "addcc %r4, %r0, %r3" );
  repos.add( 0x8082c9c4, "addcc %r11, %r4, %r0" );
  repos.add( 0x8080c68c, "addcc %r3, %r12, %r0" );
  repos.add( 0x9880906c, "addcc %r2, %r12, %r12" );
  repos.add( 0x96809acb, "addcc %r2, %r11, %r11" );
  repos.add( 0x98831faa, "addcc %r12, %r10, %r12" );
  repos.add( 0x9a800dec, "addcc %r0, %r12, %r13" );
  repos.add( 0x8e809e6c, "addcc %r2, %r12, %r7" );
  repos.add( 0x96834147, "addcc %r13, %r7, %r11" );
  repos.add( 0x9a802b84, "addcc %r0, 2948, %r13" );
  repos.add( 0x94802ab0, "addcc %r0, 2736, %r10" );
  repos.add( 0x988025d6, "addcc %r0, 1494, %r12" );
  repos.add( 0x9a802edc, "addcc %r0, 3804, %r13" );
  repos.add( 0x8c803390, "addcc %r0, -3184, %r6" );
  repos.add( 0x86803758, "addcc %r0, -2216, %r3" );
  repos.add( 0x8e803f6c, "addcc %r0, -148, %r7" );
  repos.add( 0x8a803ecb, "addcc %r0, -309, %r5" );
  repos.add( 0x9a803bfd, "addcc %r0, -1027, %r13" );
  repos.add( 0x88813cfb, "addcc %r4, -773, %r4" );
  repos.add( 0x8081b6cd, "addcc %r6, -2355, %r0" );
  repos.add( 0x80813639, "addcc %r4, -2503, %r0" );
  repos.add( 0x808371b2, "addcc %r13, -3662, %r0" );
  repos.add( 0x8082b8a1, "addcc %r10, -1887, %r0" );
  repos.add( 0x8c81af5d, "addcc %r6, 3933, %r6" );
  repos.add( 0x8080e7ad, "addcc %r3, 1965, %r0" );
  repos.add( 0x8080af59, "addcc %r2, 3929, %r0" );
  repos.add( 0x80836adc, "addcc %r13, 2780, %r0" );
  repos.add( 0x8082e8f6, "addcc %r11, 2294, %r0" );
  repos.add( 0x888124fa, "addcc %r4, 1274, %r4" );
  repos.add( 0x8c81a9f4, "addcc %r6, 2548, %r6" );
  repos.add( 0x8081e1f8, "addcc %r7, 504, %r0" );
  repos.add( 0x988321cb, "addcc %r12, 459, %r12" );
  repos.add( 0x8a8161a7, "addcc %r5, 423, %r5" );
  repos.add( 0x80812b18, "addcc %r4, 2840, %r0" );
  repos.add( 0x8081ab84, "addcc %r6, 2948, %r0" );
  repos.add( 0x8082e550, "addcc %r11, 1360, %r0" );
  repos.add( 0x8c82fefb, "addcc %r11, -261, %r6" );
  repos.add( 0x9480b7be, "addcc %r2, -2114, %r10" );
  repos.add( 0x8880bfda, "addcc %r2, -38, %r4" );
  repos.add( 0x84837bd5, "addcc %r13, -1067, %r2" );
  repos.add( 0x8e83775b, "addcc %r13, -2213, %r7" );
  repos.add( 0x8c80be63, "addcc %r2, -413, %r6" );
  repos.add( 0x8481fe17, "addcc %r7, -489, %r2" );
  repos.add( 0x8881ba8b, "addcc %r6, -1397, %r4" );
  repos.add( 0x8a80f8f1, "addcc %r3, -1807, %r5" );
  repos.add( 0x8882b946, "addcc %r10, -1722, %r4" );
  repos.add( 0x8c80f5c2, "addcc %r3, -2622, %r6" );
  repos.add( 0x8482b20b, "addcc %r10, -3573, %r2" );
  repos.add( 0x8c80b854, "addcc %r2, -1964, %r6" );
  repos.add( 0x8480f920, "addcc %r3, -1760, %r2" );
  repos.add( 0x84836d6f, "addcc %r13, 3439, %r2" );
  repos.add( 0x9881ab7d, "addcc %r6, 2941, %r12" );
  repos.add( 0x8c80e77c, "addcc %r3, 1916, %r6" );
  repos.add( 0x9881efe0, "addcc %r7, 4064, %r12" );
  repos.add( 0x8481a8bd, "addcc %r6, 2237, %r2" );
  repos.add( 0x8a832734, "addcc %r12, 1844, %r5" );
  repos.add( 0x9a80ec1b, "addcc %r3, 3099, %r13" );
  repos.add( 0x8482e1c5, "addcc %r11, 453, %r2" );
  repos.add( 0x8c80a8d0, "addcc %r2, 2256, %r6" );
  repos.add( 0x8c83224a, "addcc %r12, 586, %r6" );
  repos.add( 0x9481e4a0, "addcc %r7, 1184, %r10" );
  repos.add( 0x968324c0, "addcc %r12, 1216, %r11" );
  repos.add( 0x80003fe6, "add %r0, -26, %r0" );
  repos.add( 0x8002b378, "add %r10, -3208, %r0" );
  repos.add( 0x8002f76b, "add %r11, -2197, %r0" );
  repos.add( 0x96002104, "add %r0, 260, %r11" );
  repos.add( 0x88002864, "add %r0, 2148, %r4" );
  repos.add( 0x86002a13, "add %r0, 2579, %r3" );
  repos.add( 0x96002463, "add %r0, 1123, %r11" );
  repos.add( 0x8c0022be, "add %r0, 702, %r6" );
  repos.add( 0x840026f8, "add %r0, 1784, %r2" );
  repos.add( 0x960030f3, "add %r0, -3853, %r11" );
  repos.add( 0x9a036876, "add %r13, 2166, %r13" );
  repos.add( 0x98032d0e, "add %r12, 3342, %r12" );
  repos.add( 0x98032d6d, "add %r12, 3437, %r12" );
  repos.add( 0x8600f141, "add %r3, -3775, %r3" );
  repos.add( 0x8c01bf60, "add %r6, -160, %r6" );
  repos.add( 0x980336b4, "add %r12, -2380, %r12" );
  repos.add( 0x980339d3, "add %r12, -1581, %r12" );
  repos.add( 0x9402b3e7, "add %r10, -3097, %r10" );
  repos.add( 0x8e01f0ff, "add %r7, -3841, %r7" );
  repos.add( 0x8802e210, "add %r11, 528, %r4" );
  repos.add( 0x8601aa02, "add %r6, 2562, %r3" );
  repos.add( 0x94012923, "add %r4, 2339, %r10" );
  repos.add( 0x9602a8b8, "add %r10, 2232, %r11" );
  repos.add( 0x94032d2a, "add %r12, 3370, %r10" );
  repos.add( 0x8401a1f4, "add %r6, 500, %r2" );
  repos.add( 0x9400aa9e, "add %r2, 2718, %r10" );
  repos.add( 0x9802e7a6, "add %r11, 1958, %r12" );
  repos.add( 0x8e036e5b, "add %r13, 3675, %r7" );
  repos.add( 0x960125db, "add %r4, 1499, %r11" );
  repos.add( 0x8601e5f7, "add %r7, 1527, %r3" );
  repos.add( 0x84012cef, "add %r4, 3311, %r2" );
  repos.add( 0x9601a7f7, "add %r6, 2039, %r11" );
  repos.add( 0x9601e7ef, "add %r7, 2031, %r11" );
  repos.add( 0x8e037201, "add %r13, -3583, %r7" );
  repos.add( 0x84037440, "add %r13, -3008, %r2" );
  repos.add( 0x94017262, "add %r5, -3486, %r10" );
  repos.add( 0x8a01b628, "add %r6, -2520, %r5" );
  repos.add( 0x9801bd84, "add %r6, -636, %r12" );
  repos.add( 0x8802b0e9, "add %r10, -3863, %r4" );
  repos.add( 0x9400b0cf, "add %r2, -3889, %r10" );
  repos.add( 0x8a013578, "add %r4, -2696, %r5" );
  repos.add( 0x8800b3e5, "add %r2, -3099, %r4" );
  repos.add( 0x9a02f937, "add %r11, -1737, %r13" );
  repos.add( 0x860337dc, "add %r12, -2084, %r3" );
  repos.add( 0x8e02fb9b, "add %r11, -1125, %r7" );
  repos.add( 0x9600ffae, "add %r3, -82, %r11" );
  repos.add( 0x86037eee, "add %r13, -274, %r3" );
  repos.add( 0x86013dfe, "add %r4, -514, %r3" );
  repos.add( 0x8a00bf3f, "add %r2, -193, %r5" );
  repos.add( 0x8041cce7, "addx %r7, %r7, %r0" );
  repos.add( 0x964000e0, "addx %r0, %r0, %r11" );
  repos.add( 0x844001a2, "addx %r0, %r2, %r2" );
  repos.add( 0x80418e8d, "addx %r6, %r13, %r0" );
  repos.add( 0x80408c87, "addx %r2, %r7, %r0" );
  repos.add( 0x8c40dc03, "addx %r3, %r3, %r6" );
  repos.add( 0x8e4153a5, "addx %r5, %r5, %r7" );
  repos.add( 0x8642d520, "addx %r11, %r0, %r3" );
  repos.add( 0x98418ce0, "addx %r6, %r0, %r12" );
  repos.add( 0x8e41c884, "addx %r7, %r4, %r7" );
  repos.add( 0x8440902b, "addx %r2, %r11, %r2" );
  repos.add( 0x8e40088d, "addx %r0, %r13, %r7" );
  repos.add( 0x84400e46, "addx %r0, %r6, %r2" );
  repos.add( 0x8c428546, "addx %r10, %r6, %r6" );
  repos.add( 0x8e414ac7, "addx %r5, %r7, %r7" );
  repos.add( 0x8841ddea, "addx %r7, %r10, %r4" );
  repos.add( 0x96428327, "addx %r10, %r7, %r11" );
  repos.add( 0x8ec1d840, "addxcc %r7, %r0, %r7" );
  repos.add( 0x9ac14285, "addxcc %r5, %r5, %r13" );
  repos.add( 0x86c09f22, "addxcc %r2, %r2, %r3" );
  repos.add( 0x80c153a4, "addxcc %r5, %r4, %r0" );
  repos.add( 0x80c31087, "addxcc %r12, %r7, %r0" );
  repos.add( 0x8ac1ddc5, "addxcc %r7, %r5, %r5" );
  repos.add( 0x8cc08326, "addxcc %r2, %r6, %r6" );
  repos.add( 0x94c1c4c0, "addxcc %r7, %r0, %r10" );
  repos.add( 0x8ec014e3, "addxcc %r0, %r3, %r7" );
  repos.add( 0x94c01c02, "addxcc %r0, %r2, %r10" );
  repos.add( 0x8cc1de85, "addxcc %r7, %r5, %r6" );
  repos.add( 0x86c18a0d, "addxcc %r6, %r13, %r3" );
  repos.add( 0x8cc1a0c4, "addxcc %r6, 196, %r6" );
  repos.add( 0x80c122c4, "addxcc %r4, 708, %r0" );
  repos.add( 0x98c320a3, "addxcc %r12, 163, %r12" );
  repos.add( 0x84c0a3c4, "addxcc %r2, 964, %r2" );
  repos.add( 0x80c1e749, "addxcc %r7, 1865, %r0" );
  repos.add( 0x80c0aaf4, "addxcc %r2, 2804, %r0" );
  repos.add( 0x8ec1e8bb, "addxcc %r7, 2235, %r7" );
  repos.add( 0x80c1a6db, "addxcc %r6, 1755, %r0" );
  repos.add( 0x8ec1efcb, "addxcc %r7, 4043, %r7" );
  repos.add( 0x86c0eff5, "addxcc %r3, 4085, %r3" );
  repos.add( 0x80c37454, "addxcc %r13, -2988, %r0" );
  repos.add( 0x84c0b155, "addxcc %r2, -3755, %r2" );
  repos.add( 0x8ec1f5f6, "addxcc %r7, -2570, %r7" );
  repos.add( 0x96c2fbd9, "addxcc %r11, -1063, %r11" );
  repos.add( 0x80c03027, "addxcc %r0, -4057, %r0" );
  repos.add( 0x80c03351, "addxcc %r0, -3247, %r0" );
  repos.add( 0x80c033ca, "addxcc %r0, -3126, %r0" );
  repos.add( 0x8ec0a100, "addxcc %r2, 256, %r7" );
  repos.add( 0x9ac2a109, "addxcc %r10, 265, %r13" );
  repos.add( 0x8ec32498, "addxcc %r12, 1176, %r7" );
  repos.add( 0x98c16258, "addxcc %r5, 600, %r12" );
  repos.add( 0x84c2e6c2, "addxcc %r11, 1730, %r2" );
  repos.add( 0x8ec1a9a1, "addxcc %r6, 2465, %r7" );
  repos.add( 0x94c1a732, "addxcc %r6, 1842, %r10" );
  repos.add( 0x8cc325ac, "addxcc %r12, 1452, %r6" );
  repos.add( 0x94c1e35d, "addxcc %r7, 861, %r10" );
  repos.add( 0x94c0e4ef, "addxcc %r3, 1263, %r10" );
  repos.add( 0x96c329af, "addxcc %r12, 2479, %r11" );
  repos.add( 0x86c0af8f, "addxcc %r2, 3983, %r3" );
  repos.add( 0x98c0e9fd, "addxcc %r3, 2557, %r12" );
  repos.add( 0x8cc2f340, "addxcc %r11, -3264, %r6" );
  repos.add( 0x84c2b023, "addxcc %r10, -4061, %r2" );
  repos.add( 0x8ac0b8c1, "addxcc %r2, -1855, %r5" );
  repos.add( 0x86c0b189, "addxcc %r2, -3703, %r3" );
  repos.add( 0x88c17a85, "addxcc %r5, -1403, %r4" );
  repos.add( 0x8ac0b556, "addxcc %r2, -2730, %r5" );
  repos.add( 0x8cc0bda1, "addxcc %r2, -607, %r6" );
  repos.add( 0x8cc33c1f, "addxcc %r12, -993, %r6" );
  repos.add( 0x8ec1b31f, "addxcc %r6, -3297, %r7" );
  repos.add( 0x84c2bc77, "addxcc %r10, -905, %r2" );
  repos.add( 0x8ac1f577, "addxcc %r7, -2697, %r5" );
  repos.add( 0x8ec33fe9, "addxcc %r12, -23, %r7" );
  repos.add( 0x8ec17dfc, "addxcc %r5, -516, %r7" );
  repos.add( 0x8cc17fee, "addxcc %r5, -18, %r6" );
  repos.add( 0x9ac02050, "addxcc %r0, 80, %r13" );
  repos.add( 0x98c02c0c, "addxcc %r0, 3084, %r12" );
  repos.add( 0x9ac02b04, "addxcc %r0, 2820, %r13" );
  repos.add( 0x8cc02658, "addxcc %r0, 1624, %r6" );
  repos.add( 0x96c02f6c, "addxcc %r0, 3948, %r11" );
  repos.add( 0x8ac027cf, "addxcc %r0, 1999, %r5" );
  repos.add( 0x9ac02bed, "addxcc %r0, 3053, %r13" );
  repos.add( 0x94c02efb, "addxcc %r0, 3835, %r10" );
  repos.add( 0x88c03245, "addxcc %r0, -3515, %r4" );
  repos.add( 0x88c03358, "addxcc %r0, -3240, %r4" );
  repos.add( 0x8ec03672, "addxcc %r0, -2446, %r7" );
  repos.add( 0x86c038cf, "addxcc %r0, -1841, %r3" );
  repos.add( 0x84c031ee, "addxcc %r0, -3602, %r2" );
  repos.add( 0x80403497, "addx %r0, -2921, %r0" );
  repos.add( 0x8042f707, "addx %r11, -2297, %r0" );
  repos.add( 0x80437d36, "addx %r13, -714, %r0" );
  repos.add( 0x86402126, "addx %r0, 294, %r3" );
  repos.add( 0x84402682, "addx %r0, 1666, %r2" );
  repos.add( 0x984023e8, "addx %r0, 1000, %r12" );
  repos.add( 0x8e402a8d, "addx %r0, 2701, %r7" );
  repos.add( 0x88402bd2, "addx %r0, 3026, %r4" );
  repos.add( 0x844021cf, "addx %r0, 463, %r2" );
  repos.add( 0x94403529, "addx %r0, -2775, %r10" );
  repos.add( 0x984031a6, "addx %r0, -3674, %r12" );
  repos.add( 0x96403b52, "addx %r0, -1198, %r11" );
  repos.add( 0x94403766, "addx %r0, -2202, %r10" );
  repos.add( 0x88403ef2, "addx %r0, -270, %r4" );
  repos.add( 0x8c41a689, "addx %r6, 1673, %r6" );
  repos.add( 0x8440b082, "addx %r2, -3966, %r2" );
  repos.add( 0x8a417780, "addx %r5, -2176, %r5" );
  repos.add( 0x9642f33c, "addx %r11, -3268, %r11" );
  repos.add( 0x8440bb16, "addx %r2, -1258, %r2" );
  repos.add( 0x9843316f, "addx %r12, -3729, %r12" );
  repos.add( 0x98433b3d, "addx %r12, -1219, %r12" );
  repos.add( 0x9640a288, "addx %r2, 648, %r11" );
  repos.add( 0x86416c41, "addx %r5, 3137, %r3" );
  repos.add( 0x9a40e268, "addx %r3, 616, %r13" );
  repos.add( 0x884320b9, "addx %r12, 185, %r4" );
  repos.add( 0x8a42e05d, "addx %r11, 93, %r5" );
  repos.add( 0x884364b9, "addx %r13, 1209, %r4" );
  repos.add( 0x9441af28, "addx %r6, 3880, %r10" );
  repos.add( 0x964128db, "addx %r4, 2267, %r11" );
  repos.add( 0x9a42afd0, "addx %r10, 4048, %r13" );
  repos.add( 0x8441ad6e, "addx %r6, 3438, %r2" );
  repos.add( 0x88436ad7, "addx %r13, 2775, %r4" );
  repos.add( 0x8640a3bf, "addx %r2, 959, %r3" );
  repos.add( 0x9a416daf, "addx %r5, 3503, %r13" );
  repos.add( 0x8e41a7f7, "addx %r6, 2039, %r7" );
  repos.add( 0x88433888, "addx %r12, -1912, %r4" );
  repos.add( 0x9640b248, "addx %r2, -3512, %r11" );
  repos.add( 0x88433903, "addx %r12, -1789, %r4" );
  repos.add( 0x9442f50a, "addx %r11, -2806, %r10" );
  repos.add( 0x86417760, "addx %r5, -2208, %r3" );
  repos.add( 0x8441b24b, "addx %r6, -3509, %r2" );
  repos.add( 0x9a4335b2, "addx %r12, -2638, %r13" );
  repos.add( 0x9441fcb4, "addx %r7, -844, %r10" );
  repos.add( 0x98437b1d, "addx %r13, -1251, %r12" );
  repos.add( 0x9641fbaa, "addx %r7, -1110, %r11" );
  repos.add( 0x8842f57b, "addx %r11, -2693, %r4" );
  repos.add( 0x944333f3, "addx %r12, -3085, %r10" );
  repos.add( 0x9842fbd7, "addx %r11, -1065, %r12" );
  repos.add( 0x8c437f3d, "addx %r13, -195, %r6" );
  repos.add( 0x8c0a824a, "and %r10, %r10, %r6" );
  repos.add( 0x880ac68b, "and %r11, %r11, %r4" );
  repos.add( 0x8c08cc60, "and %r3, %r0, %r6" );
  repos.add( 0x8a0954e2, "and %r5, %r2, %r5" );
  repos.add( 0x84089aaa, "and %r2, %r10, %r2" );
  repos.add( 0x8c080e43, "and %r0, %r3, %r6" );
  repos.add( 0x8a08056c, "and %r0, %r12, %r5" );
  repos.add( 0x8c08c266, "and %r3, %r6, %r6" );
  repos.add( 0x8408deec, "and %r3, %r12, %r2" );
  repos.add( 0x88088a8a, "and %r2, %r10, %r4" );
  repos.add( 0x98880840, "andcc %r0, %r0, %r12" );
  repos.add( 0x80889aa2, "andcc %r2, %r2, %r0" );
  repos.add( 0x8088c7a0, "andcc %r3, %r0, %r0" );
  repos.add( 0x8a880365, "andcc %r0, %r5, %r5" );
  repos.add( 0x8e8ad3ab, "andcc %r11, %r11, %r7" );
  repos.add( 0x86895b65, "andcc %r5, %r5, %r3" );
  repos.add( 0x988b5580, "andcc %r13, %r0, %r12" );
  repos.add( 0x808b0865, "andcc %r12, %r5, %r0" );
  repos.add( 0x8088df24, "andcc %r3, %r4, %r0" );
  repos.add( 0x988b0f27, "andcc %r12, %r7, %r12" );
  repos.add( 0x9a89c9ad, "andcc %r7, %r13, %r13" );
  repos.add( 0x9a89940d, "andcc %r6, %r13, %r13" );
  repos.add( 0x8c881f83, "andcc %r0, %r3, %r6" );
  repos.add( 0x98880b0b, "andcc %r0, %r11, %r12" );
  repos.add( 0x96890742, "andcc %r4, %r2, %r11" );
  repos.add( 0x98889faa, "andcc %r2, %r10, %r12" );
  repos.add( 0x8088249e, "andcc %r0, 1182, %r0" );
  repos.add( 0x80882511, "andcc %r0, 1297, %r0" );
  repos.add( 0x8c8834f2, "andcc %r0, -2830, %r6" );
  repos.add( 0x968822a3, "andcc %r0, 675, %r11" );
  repos.add( 0x8088e8c0, "andcc %r3, 2240, %r0" );
  repos.add( 0x80896344, "andcc %r5, 836, %r0" );
  repos.add( 0x8088aec0, "andcc %r2, 3776, %r0" );
  repos.add( 0x808b628e, "andcc %r13, 654, %r0" );
  repos.add( 0x968aeaa8, "andcc %r11, 2728, %r11" );
  repos.add( 0x8c89a469, "andcc %r6, 1129, %r6" );
  repos.add( 0x808b6a2e, "andcc %r13, 2606, %r0" );
  repos.add( 0x9a8b6d58, "andcc %r13, 3416, %r13" );
  repos.add( 0x8e89ea17, "andcc %r7, 2583, %r7" );
  repos.add( 0x80896b33, "andcc %r5, 2867, %r0" );
  repos.add( 0x8088eacf, "andcc %r3, 2767, %r0" );
  repos.add( 0x8e89efe8, "andcc %r7, 4072, %r7" );
  repos.add( 0x968ae3fe, "andcc %r11, 1022, %r11" );
  repos.add( 0x968af204, "andcc %r11, -3580, %r11" );
  repos.add( 0x9a8b7146, "andcc %r13, -3770, %r13" );
  repos.add( 0x808b770a, "andcc %r13, -2294, %r0" );
  repos.add( 0x8688f92a, "andcc %r3, -1750, %r3" );
  repos.add( 0x8e89f317, "andcc %r7, -3305, %r7" );
  repos.add( 0x8089fbcd, "andcc %r7, -1075, %r0" );
  repos.add( 0x80897bf1, "andcc %r5, -1039, %r0" );
  repos.add( 0x8a8977ae, "andcc %r5, -2130, %r5" );
  repos.add( 0x988b3e3b, "andcc %r12, -453, %r12" );
  repos.add( 0x9a88e024, "andcc %r3, 36, %r13" );
  repos.add( 0x9489e406, "andcc %r7, 1030, %r10" );
  repos.add( 0x8e8aea80, "andcc %r11, 2688, %r7" );
  repos.add( 0x848b2494, "andcc %r12, 1172, %r2" );
  repos.add( 0x8889e511, "andcc %r7, 1297, %r4" );
  repos.add( 0x8a89e4e8, "andcc %r7, 1256, %r5" );
  repos.add( 0x9489a4d4, "andcc %r6, 1236, %r10" );
  repos.add( 0x9688aa4b, "andcc %r2, 2635, %r11" );
  repos.add( 0x8e8aa5c6, "andcc %r10, 1478, %r7" );
  repos.add( 0x8689eccd, "andcc %r7, 3277, %r3" );
  repos.add( 0x8e8b6de8, "andcc %r13, 3560, %r7" );
  repos.add( 0x9a89edbc, "andcc %r7, 3516, %r13" );
  repos.add( 0x8888ab7d, "andcc %r2, 2941, %r4" );
  repos.add( 0x8c892db7, "andcc %r4, 3511, %r6" );
  repos.add( 0x8a89aaff, "andcc %r6, 2815, %r5" );
  repos.add( 0x8c8b3840, "andcc %r12, -1984, %r6" );
  repos.add( 0x88897310, "andcc %r5, -3312, %r4" );
  repos.add( 0x9a8b3a42, "andcc %r12, -1470, %r13" );
  repos.add( 0x84897505, "andcc %r5, -2811, %r2" );
  repos.add( 0x8689b24d, "andcc %r6, -3507, %r3" );
  repos.add( 0x9689b84b, "andcc %r6, -1973, %r11" );
  repos.add( 0x8e89749d, "andcc %r5, -2915, %r7" );
  repos.add( 0x8a8b31ae, "andcc %r12, -3666, %r5" );
  repos.add( 0x8e88b976, "andcc %r2, -1674, %r7" );
  repos.add( 0x9a89bd6c, "andcc %r6, -660, %r13" );
  repos.add( 0x968b7bea, "andcc %r13, -1046, %r11" );
  repos.add( 0x968b3f4e, "andcc %r12, -178, %r11" );
  repos.add( 0x868b3bb7, "andcc %r12, -1097, %r3" );
  repos.add( 0x868b3edf, "andcc %r12, -289, %r3" );
  repos.add( 0x800b6dbb, "and %r13, 3515, %r0" );
  repos.add( 0x80092531, "and %r4, 1329, %r0" );
  repos.add( 0x98083396, "and %r0, -3178, %r12" );
  repos.add( 0x840822df, "and %r0, 735, %r2" );
  repos.add( 0x8408a401, "and %r2, 1025, %r2" );
  repos.add( 0x8e09e111, "and %r7, 273, %r7" );
  repos.add( 0x960aecae, "and %r11, 3246, %r11" );
  repos.add( 0x8c09b266, "and %r6, -3482, %r6" );
  repos.add( 0x8e09f1b8, "and %r7, -3656, %r7" );
  repos.add( 0x8c09b747, "and %r6, -2233, %r6" );
  repos.add( 0x8a092810, "and %r4, 2064, %r5" );
  repos.add( 0x8e09a210, "and %r6, 528, %r7" );
  repos.add( 0x98096091, "and %r5, 145, %r12" );
  repos.add( 0x8409a055, "and %r6, 85, %r2" );
  repos.add( 0x960b6486, "and %r13, 1158, %r11" );
  repos.add( 0x840b28e8, "and %r12, 2280, %r2" );
  repos.add( 0x8a09a2c6, "and %r6, 710, %r5" );
  repos.add( 0x8a09a5aa, "and %r6, 1450, %r5" );
  repos.add( 0x9a096875, "and %r5, 2165, %r13" );
  repos.add( 0x860b256d, "and %r12, 1389, %r3" );
  repos.add( 0x8e08eed2, "and %r3, 3794, %r7" );
  repos.add( 0x9a092afa, "and %r4, 2810, %r13" );
  repos.add( 0x8a09ae3e, "and %r6, 3646, %r5" );
  repos.add( 0x8c0b27f3, "and %r12, 2035, %r6" );
  repos.add( 0x9a09efcd, "and %r7, 4045, %r13" );
  repos.add( 0x840aefb7, "and %r11, 4023, %r2" );
  repos.add( 0x8a0b7242, "and %r13, -3518, %r5" );
  repos.add( 0x9808b411, "and %r2, -3055, %r12" );
  repos.add( 0x8808b4c8, "and %r2, -2872, %r4" );
  repos.add( 0x8e08f05c, "and %r3, -4004, %r7" );
  repos.add( 0x8608ba1a, "and %r2, -1510, %r3" );
  repos.add( 0x9a0b349c, "and %r12, -2916, %r13" );
  repos.add( 0x9a09b5c6, "and %r6, -2618, %r13" );
  repos.add( 0x880ab61d, "and %r10, -2531, %r4" );
  repos.add( 0x8c093eca, "and %r4, -310, %r6" );
  repos.add( 0x96093bf0, "and %r4, -1040, %r11" );
  repos.add( 0x9a08bf55, "and %r2, -171, %r13" );
  repos.add( 0x8e09bff3, "and %r6, -13, %r7" );
  repos.add( 0x9809bff7, "and %r6, -9, %r12" );
  repos.add( 0x80298cc0, "andn %r6, %r0, %r0" );
  repos.add( 0x8e281fc0, "andn %r0, %r0, %r7" );
  repos.add( 0x88291160, "andn %r4, %r0, %r4" );
  repos.add( 0x942a910a, "andn %r10, %r10, %r10" );
  repos.add( 0x9628c060, "andn %r3, %r0, %r11" );
  repos.add( 0x8a288402, "andn %r2, %r2, %r5" );
  repos.add( 0x8a28114d, "andn %r0, %r13, %r5" );
  repos.add( 0x942b540a, "andn %r13, %r10, %r10" );
  repos.add( 0x8629de43, "andn %r7, %r3, %r3" );
  repos.add( 0x9829d9c2, "andn %r7, %r2, %r12" );
  repos.add( 0x84294023, "andn %r5, %r3, %r2" );
  repos.add( 0x94aa8cea, "andncc %r10, %r10, %r10" );
  repos.add( 0x9aa8084d, "andncc %r0, %r13, %r13" );
  repos.add( 0x96a8c303, "andncc %r3, %r3, %r11" );
  repos.add( 0x80a98fe4, "andncc %r6, %r4, %r0" );
  repos.add( 0x84a8936a, "andncc %r2, %r10, %r2" );
  repos.add( 0x8ea9d685, "andncc %r7, %r5, %r7" );
  repos.add( 0x8ea8132b, "andncc %r0, %r11, %r7" );
  repos.add( 0x8ea81dcb, "andncc %r0, %r11, %r7" );
  repos.add( 0x8ca9190c, "andncc %r4, %r12, %r6" );
  repos.add( 0x96ab1ac4, "andncc %r12, %r4, %r11" );
  repos.add( 0x8ca83045, "andncc %r0, -4027, %r6" );
  repos.add( 0x8aa83d5e, "andncc %r0, -674, %r5" );
  repos.add( 0x80a9fed5, "andncc %r7, -299, %r0" );
  repos.add( 0x80a8b237, "andncc %r2, -3529, %r0" );
  repos.add( 0x9aab7a8a, "andncc %r13, -1398, %r13" );
  repos.add( 0x8aa97930, "andncc %r5, -1744, %r5" );
  repos.add( 0x80a93822, "andncc %r4, -2014, %r0" );
  repos.add( 0x8aa96afc, "andncc %r5, 2812, %r5" );
  repos.add( 0x80ab2b9c, "andncc %r12, 2972, %r0" );
  repos.add( 0x80a9a99d, "andncc %r6, 2461, %r0" );
  repos.add( 0x80aae2da, "andncc %r11, 730, %r0" );
  repos.add( 0x8ca9ae43, "andncc %r6, 3651, %r6" );
  repos.add( 0x80ab25c8, "andncc %r12, 1480, %r0" );
  repos.add( 0x84a8a443, "andncc %r2, 1091, %r2" );
  repos.add( 0x86a9beff, "andncc %r6, -257, %r3" );
  repos.add( 0x8ca97def, "andncc %r5, -529, %r6" );
  repos.add( 0x9aab336f, "andncc %r12, -3217, %r13" );
  repos.add( 0x9aa9ba6f, "andncc %r6, -1425, %r13" );
  repos.add( 0x88a97b3c, "andncc %r5, -1220, %r4" );
  repos.add( 0x98a8fc2d, "andncc %r3, -979, %r12" );
  repos.add( 0x86a9f574, "andncc %r7, -2700, %r3" );
  repos.add( 0x98aab23a, "andncc %r10, -3526, %r12" );
  repos.add( 0x96a8f2b1, "andncc %r3, -3407, %r11" );
  repos.add( 0x86a9b309, "andncc %r6, -3319, %r3" );
  repos.add( 0x8eaaf605, "andncc %r11, -2555, %r7" );
  repos.add( 0x8aaab812, "andncc %r10, -2030, %r5" );
  repos.add( 0x8ca9310c, "andncc %r4, -3828, %r6" );
  repos.add( 0x9aa967bd, "andncc %r5, 1981, %r13" );
  repos.add( 0x8ea8adf4, "andncc %r2, 3572, %r7" );
  repos.add( 0x86aaab3d, "andncc %r10, 2877, %r3" );
  repos.add( 0x88a8aee8, "andncc %r2, 3816, %r4" );
  repos.add( 0x8ca96b5c, "andncc %r5, 2908, %r6" );
  repos.add( 0x84a965d1, "andncc %r5, 1489, %r2" );
  repos.add( 0x8ea9a2ab, "andncc %r6, 683, %r7" );
  repos.add( 0x8ca9248b, "andncc %r4, 1163, %r6" );
  repos.add( 0x98a9a570, "andncc %r6, 1392, %r12" );
  repos.add( 0x8aab6861, "andncc %r13, 2145, %r5" );
  repos.add( 0x84a9a505, "andncc %r6, 1285, %r2" );
  repos.add( 0x96aaa250, "andncc %r10, 592, %r11" );
  repos.add( 0x98a8e014, "andncc %r3, 20, %r12" );
  repos.add( 0x80283659, "andn %r0, -2471, %r0" );
  repos.add( 0x80283ac7, "andn %r0, -1337, %r0" );
  repos.add( 0x8028e27e, "andn %r3, 638, %r0" );
  repos.add( 0x802b62ff, "andn %r13, 767, %r0" );
  repos.add( 0x8a282f5e, "andn %r0, 3934, %r5" );
  repos.add( 0x96282eee, "andn %r0, 3822, %r11" );
  repos.add( 0x882935fd, "andn %r4, -2563, %r4" );
  repos.add( 0x962afcfc, "andn %r11, -772, %r11" );
  repos.add( 0x8a297d0e, "andn %r5, -754, %r5" );
  repos.add( 0x942abe92, "andn %r10, -366, %r10" );
  repos.add( 0x8a297158, "andn %r5, -3752, %r5" );
  repos.add( 0x982b2aed, "andn %r12, 2797, %r12" );
  repos.add( 0x8c29a1c2, "andn %r6, 450, %r6" );
  repos.add( 0x9a2aff7d, "andn %r11, -131, %r13" );
  repos.add( 0x8828bfbd, "andn %r2, -67, %r4" );
  repos.add( 0x9a2b33f7, "andn %r12, -3081, %r13" );
  repos.add( 0x84293dcf, "andn %r4, -561, %r2" );
  repos.add( 0x8e2b7cde, "andn %r13, -802, %r7" );
  repos.add( 0x8e2977ae, "andn %r5, -2130, %r7" );
  repos.add( 0x9428bec5, "andn %r2, -315, %r10" );
  repos.add( 0x882abde4, "andn %r10, -540, %r4" );
  repos.add( 0x8e29b237, "andn %r6, -3529, %r7" );
  repos.add( 0x8c2934a3, "andn %r4, -2909, %r6" );
  repos.add( 0x8c297ac8, "andn %r5, -1336, %r6" );
  repos.add( 0x962ab780, "andn %r10, -2176, %r11" );
  repos.add( 0x8c2af590, "andn %r11, -2672, %r6" );
  repos.add( 0x8c2971c0, "andn %r5, -3648, %r6" );
  repos.add( 0x8e2ab212, "andn %r10, -3566, %r7" );
  repos.add( 0x842ab840, "andn %r10, -1984, %r2" );
  repos.add( 0x842b6f7e, "andn %r13, 3966, %r2" );
  repos.add( 0x862b2fb9, "andn %r12, 4025, %r3" );
  repos.add( 0x9a29297d, "andn %r4, 2429, %r13" );
  repos.add( 0x842aac9b, "andn %r10, 3227, %r2" );
  repos.add( 0x8e2b68de, "andn %r13, 2270, %r7" );
  repos.add( 0x8c2ae0b7, "andn %r11, 183, %r6" );
  repos.add( 0x9829abe0, "andn %r6, 3040, %r12" );
  repos.add( 0x8a28a1ac, "andn %r2, 428, %r5" );
  repos.add( 0x9429e2c3, "andn %r7, 707, %r10" );
  repos.add( 0x8e28ea18, "andn %r3, 2584, %r7" );
  repos.add( 0x8c28a826, "andn %r2, 2086, %r6" );
  repos.add( 0x98292450, "andn %r4, 1104, %r12" );
  repos.add( 0xca0005e5, "ld [%r0 + %r5], %r5" );
  repos.add( 0xc0019f2a, "ld [%r6 + %r10], %r0" );
  repos.add( 0xc0008d2b, "ld [%r2 + %r11], %r0" );
  repos.add( 0xca0006e4, "ld [%r0 + %r4], %r5" );
  repos.add( 0xc601c542, "ld [%r7 + %r2], %r3" );
  repos.add( 0xda031567, "ld [%r12 + %r7], %r13" );
  repos.add( 0xd41ac0ca, "ldd [%r11 + %r10], %r10" );
  repos.add( 0xda188320, "ldd [%r2 + %r0], %r12" );
  repos.add( 0xd41a9e07, "ldd [%r10 + %r7], %r10" );
  repos.add( 0xc81883c5, "ldd [%r2 + %r5], %r4" );
  repos.add( 0xd41980ad, "ldd [%r6 + %r13], %r10" );
  repos.add( 0xc41a8ccb, "ldd [%r10 + %r11], %r2" );
  repos.add( 0xce19e264, "ldd [%r7 + 0x264], %r6" );
  repos.add( 0xc618e21d, "ldd [%r3 + 0x21d], %r2" );
  repos.add( 0xce19e41e, "ldd [%r7 + 0x41e], %r6" );
  repos.add( 0xc418e359, "ldd [%r3 + 0x359], %r2" );
  repos.add( 0xc819653b, "ldd [%r5 + 0x53b], %r4" );
  repos.add( 0xd61aeefd, "ldd [%r11 + 0xefd], %r10" );
  repos.add( 0xc8196edf, "ldd [%r5 + 0xedf], %r4" );
  repos.add( 0xd61af085, "ldd [%r11 - 0xf7b], %r10" );
  repos.add( 0xda1b30a9, "ldd [%r12 - 0xf57], %r12" );
  repos.add( 0xda1b31c8, "ldd [%r12 - 0xe38], %r12" );
  repos.add( 0xd41afb88, "ldd [%r11 - 0x478], %r10" );
  repos.add( 0xd61af987, "ldd [%r11 - 0x679], %r10" );
  repos.add( 0xc418f8ae, "ldd [%r3 - 0x752], %r2" );
  repos.add( 0xda1b3f12, "ldd [%r12 - 0xee], %r12" );
  repos.add( 0xcc19f774, "ldd [%r7 - 0x88c], %r6" );
  repos.add( 0xcc19b2fc, "ldd [%r6 - 0xd04], %r6" );
  repos.add( 0xc418bcba, "ldd [%r2 - 0x346], %r2" );
  repos.add( 0xc618bdcb, "ldd [%r2 - 0x235], %r2" );
  repos.add( 0xcc1aa100, "ldd [%r10 + 0x100], %r6" );
  repos.add( 0xd419e610, "ldd [%r7 + 0x610], %r10" );
  repos.add( 0xd41b6540, "ldd [%r13 + 0x540], %r10" );
  repos.add( 0xcc1b2425, "ldd [%r12 + 0x425], %r6" );
  repos.add( 0xce1ae235, "ldd [%r11 + 0x235], %r6" );
  repos.add( 0xc419ea91, "ldd [%r7 + 0xa91], %r2" );
  repos.add( 0xda1964b3, "ldd [%r5 + 0x4b3], %r12" );
  repos.add( 0xc819e3a5, "ldd [%r7 + 0x3a5], %r4" );
  repos.add( 0xd818e8dd, "ldd [%r3 + 0x8dd], %r12" );
  repos.add( 0xcc1b6fe3, "ldd [%r13 + 0xfe3], %r6" );
  repos.add( 0xd8192fdd, "ldd [%r4 + 0xfdd], %r12" );
  repos.add( 0xd6192fde, "ldd [%r4 + 0xfde], %r10" );
  repos.add( 0xd819f8c0, "ldd [%r7 - 0x740], %r12" );
  repos.add( 0xc41af304, "ldd [%r11 - 0xcfc], %r2" );
  repos.add( 0xd819b468, "ldd [%r6 - 0xb98], %r12" );
  repos.add( 0xd819f3c0, "ldd [%r7 - 0xc40], %r12" );
  repos.add( 0xc619fc2c, "ldd [%r7 - 0x3d4], %r2" );
  repos.add( 0xce197aa1, "ldd [%r5 - 0x55f], %r6" );
  repos.add( 0xda193659, "ldd [%r4 - 0x9a7], %r12" );
  repos.add( 0xce1ab6ac, "ldd [%r10 - 0x954], %r6" );
  repos.add( 0xd8193cc7, "ldd [%r4 - 0x339], %r12" );
  repos.add( 0xcc1abff0, "ldd [%r10 - 0x10], %r6" );
  repos.add( 0xc419b3eb, "ldd [%r6 - 0xc15], %r2" );
  repos.add( 0xcc18fefb, "ldd [%r3 - 0x105], %r6" );
  repos.add( 0xc0036f6e, "ld [%r13 + 0xf6e], %r0" );
  repos.add( 0xc001e66c, "ld [%r7 + 0x66c], %r0" );
  repos.add( 0xda036480, "ld [%r13 + 0x480], %r13" );
  repos.add( 0xca01601e, "ld [%r5 + 0x1e], %r5" );
  repos.add( 0xda036ab0, "ld [%r13 + 0xab0], %r13" );
  repos.add( 0xd8032b6b, "ld [%r12 + 0xb6b], %r12" );
  repos.add( 0xda037c81, "ld [%r13 - 0x37f], %r13" );
  repos.add( 0xd402b543, "ld [%r10 - 0xabd], %r10" );
  repos.add( 0xc600f49d, "ld [%r3 - 0xb63], %r3" );
  repos.add( 0xcc01bf13, "ld [%r6 - 0xed], %r6" );
  repos.add( 0xd602fb3d, "ld [%r11 - 0x4c3], %r11" );
  repos.add( 0xd602fb9e, "ld [%r11 - 0x462], %r11" );
  repos.add( 0xda02e248, "ld [%r11 + 0x248], %r13" );
  repos.add( 0xc800e834, "ld [%r3 + 0x834], %r4" );
  repos.add( 0xd800ecc1, "ld [%r3 + 0xcc1], %r12" );
  repos.add( 0xd800e235, "ld [%r3 + 0x235], %r12" );
  repos.add( 0xc6012e38, "ld [%r4 + 0xe38], %r3" );
  repos.add( 0xc6036393, "ld [%r13 + 0x393], %r3" );
  repos.add( 0xd802aa6d, "ld [%r10 + 0xa6d], %r12" );
  repos.add( 0xc800ec7a, "ld [%r3 + 0xc7a], %r4" );
  repos.add( 0xca01a3d7, "ld [%r6 + 0x3d7], %r5" );
  repos.add( 0xce013090, "ld [%r4 - 0xf70], %r7" );
  repos.add( 0xd802f81a, "ld [%r11 - 0x7e6], %r12" );
  repos.add( 0xda01b283, "ld [%r6 - 0xd7d], %r13" );
  repos.add( 0xc601b315, "ld [%r6 - 0xceb], %r3" );
  repos.add( 0xc4033519, "ld [%r12 - 0xae7], %r2" );
  repos.add( 0xc602b176, "ld [%r10 - 0xe8a], %r3" );
  repos.add( 0xd801f674, "ld [%r7 - 0x98c], %r12" );
  repos.add( 0xce037a1f, "ld [%r13 - 0x5e1], %r7" );
  repos.add( 0xd801771f, "ld [%r5 - 0x8e1], %r12" );
  repos.add( 0xd4013af9, "ld [%r4 - 0x507], %r10" );
  repos.add( 0xd601757f, "ld [%r5 - 0xa81], %r11" );
  repos.add( 0xda00f7f6, "ld [%r3 - 0x80a], %r13" );
  repos.add( 0xc4488bc0, "ldsb [%r2 + %r0], %r2" );
  repos.add( 0xd84a81c0, "ldsb [%r10 + %r0], %r12" );
  repos.add( 0xd44a99ed, "ldsb [%r10 + %r13], %r10" );
  repos.add( 0xc4489eca, "ldsb [%r2 + %r10], %r2" );
  repos.add( 0xd4480225, "ldsb [%r0 + %r5], %r10" );
  repos.add( 0xce495163, "ldsb [%r5 + %r3], %r7" );
  repos.add( 0xd44952e7, "ldsb [%r5 + %r7], %r10" );
  repos.add( 0xc049b52a, "ldsb [%r6 - 0xad6], %r0" );
  repos.add( 0xc04b78c1, "ldsb [%r13 - 0x73f], %r0" );
  repos.add( 0xc8492692, "ldsb [%r4 + 0x692], %r4" );
  repos.add( 0xc849237e, "ldsb [%r4 + 0x37e], %r4" );
  repos.add( 0xd44ab043, "ldsb [%r10 - 0xfbd], %r10" );
  repos.add( 0xd84b36a0, "ldsb [%r12 - 0x960], %r12" );
  repos.add( 0xd64af14e, "ldsb [%r11 - 0xeb2], %r11" );
  repos.add( 0xd84b34a7, "ldsb [%r12 - 0xb59], %r12" );
  repos.add( 0xd64af37d, "ldsb [%r11 - 0xc83], %r11" );
  repos.add( 0xce49feea, "ldsb [%r7 - 0x116], %r7" );
  repos.add( 0xd449e206, "ldsb [%r7 + 0x206], %r10" );
  repos.add( 0xd6496c04, "ldsb [%r5 + 0xc04], %r11" );
  repos.add( 0xd448a360, "ldsb [%r2 + 0x360], %r10" );
  repos.add( 0xd44b6425, "ldsb [%r13 + 0x425], %r10" );
  repos.add( 0xc44b2349, "ldsb [%r12 + 0x349], %r2" );
  repos.add( 0xc448e857, "ldsb [%r3 + 0x857], %r2" );
  repos.add( 0xca48e571, "ldsb [%r3 + 0x571], %r5" );
  repos.add( 0xd649e29f, "ldsb [%r7 + 0x29f], %r11" );
  repos.add( 0xcc48adac, "ldsb [%r2 + 0xdac], %r6" );
  repos.add( 0xc849a6af, "ldsb [%r6 + 0x6af], %r4" );
  repos.add( 0xc849a9dd, "ldsb [%r6 + 0x9dd], %r4" );
  repos.add( 0xc4492b6f, "ldsb [%r4 + 0xb6f], %r2" );
  repos.add( 0xc449aeef, "ldsb [%r6 + 0xeef], %r2" );
  repos.add( 0xd44930a0, "ldsb [%r4 - 0xf60], %r10" );
  repos.add( 0xd448b048, "ldsb [%r2 - 0xfb8], %r10" );
  repos.add( 0xc648b482, "ldsb [%r2 - 0xb7e], %r3" );
  repos.add( 0xca49330c, "ldsb [%r4 - 0xcf4], %r5" );
  repos.add( 0xca4afa11, "ldsb [%r11 - 0x5ef], %r5" );
  repos.add( 0xd64b7da0, "ldsb [%r13 - 0x260], %r11" );
  repos.add( 0xc64ab44e, "ldsb [%r10 - 0xbb2], %r3" );
  repos.add( 0xce4af4a7, "ldsb [%r11 - 0xb59], %r7" );
  repos.add( 0xc64af3d1, "ldsb [%r11 - 0xc2f], %r3" );
  repos.add( 0xc848beb8, "ldsb [%r2 - 0x148], %r4" );
  repos.add( 0xcc4b3ad9, "ldsb [%r12 - 0x527], %r6" );
  repos.add( 0xd848f977, "ldsb [%r3 - 0x689], %r12" );
  repos.add( 0xce4937b9, "ldsb [%r4 - 0x847], %r7" );
  repos.add( 0xc64937db, "ldsb [%r4 - 0x825], %r3" );
  repos.add( 0xce5300c0, "ldsh [%r12 + %r0], %r7" );
  repos.add( 0xcc51d0c0, "ldsh [%r7 + %r0], %r6" );
  repos.add( 0xca500cab, "ldsh [%r0 + %r11], %r5" );
  repos.add( 0xce5004a3, "ldsh [%r0 + %r3], %r7" );
  repos.add( 0xda5285ec, "ldsh [%r10 + %r12], %r13" );
  repos.add( 0xce50d16a, "ldsh [%r3 + %r10], %r7" );
  repos.add( 0xc051e68e, "ldsh [%r7 + 0x68e], %r0" );
  repos.add( 0xc051267e, "ldsh [%r4 + 0x67e], %r0" );
  repos.add( 0xce51e02e, "ldsh [%r7 + 0x2e], %r7" );
  repos.add( 0xce51e247, "ldsh [%r7 + 0x247], %r7" );
  repos.add( 0xda536475, "ldsh [%r13 + 0x475], %r13" );
  repos.add( 0xcc51aee2, "ldsh [%r6 + 0xee2], %r6" );
  repos.add( 0xda537025, "ldsh [%r13 - 0xfdb], %r13" );
  repos.add( 0xca51750a, "ldsh [%r5 - 0xaf6], %r5" );
  repos.add( 0xca51718a, "ldsh [%r5 - 0xe76], %r5" );
  repos.add( 0xce51f3a9, "ldsh [%r7 - 0xc57], %r7" );
  repos.add( 0xda51a116, "ldsh [%r6 + 0x116], %r13" );
  repos.add( 0xce50e84e, "ldsh [%r3 + 0x84e], %r7" );
  repos.add( 0xcc51e472, "ldsh [%r7 + 0x472], %r6" );
  repos.add( 0xcc51e366, "ldsh [%r7 + 0x366], %r6" );
  repos.add( 0xda532da8, "ldsh [%r12 + 0xda8], %r13" );
  repos.add( 0xc651eb2d, "ldsh [%r7 + 0xb2d], %r3" );
  repos.add( 0xca52ebd2, "ldsh [%r11 + 0xbd2], %r5" );
  repos.add( 0xca512de9, "ldsh [%r4 + 0xde9], %r5" );
  repos.add( 0xda512b3d, "ldsh [%r4 + 0xb3d], %r13" );
  repos.add( 0xce50eedd, "ldsh [%r3 + 0xedd], %r7" );
  repos.add( 0xc4513440, "ldsh [%r4 - 0xbc0], %r2" );
  repos.add( 0xda51f4c0, "ldsh [%r7 - 0xb40], %r13" );
  repos.add( 0xc652f161, "ldsh [%r11 - 0xe9f], %r3" );
  repos.add( 0xca51f1d4, "ldsh [%r7 - 0xe2c], %r5" );
  repos.add( 0xce5174a5, "ldsh [%r5 - 0xb5b], %r7" );
  repos.add( 0xc451bc17, "ldsh [%r6 - 0x3e9], %r2" );
  repos.add( 0xc451b44f, "ldsh [%r6 - 0xbb1], %r2" );
  repos.add( 0xca52f97c, "ldsh [%r11 - 0x684], %r5" );
  repos.add( 0xca51f75c, "ldsh [%r7 - 0x8a4], %r5" );
  repos.add( 0xc451fbed, "ldsh [%r7 - 0x413], %r2" );
  repos.add( 0xce52b3bf, "ldsh [%r10 - 0xc41], %r7" );
  repos.add( 0xce513f7b, "ldsh [%r4 - 0x85], %r7" );
  repos.add( 0xc06810ec, "ldstub [%r0 + %r12], %r0" );
  repos.add( 0xc0698d43, "ldstub [%r6 + %r3], %r0" );
  repos.add( 0xda6b0767, "ldstub [%r12 + %r7], %r13" );
  repos.add( 0xc46b064d, "ldstub [%r12 + %r13], %r2" );
  repos.add( 0xc069efd9, "ldstub [%r7 + 0xfd9], %r0" );
  repos.add( 0xc069ecef, "ldstub [%r7 + 0xcef], %r0" );
  repos.add( 0xc068b310, "ldstub [%r2 - 0xcf0], %r0" );
  repos.add( 0xc069fd04, "ldstub [%r7 - 0x2fc], %r0" );
  repos.add( 0xc06b7283, "ldstub [%r13 - 0xd7d], %r0" );
  repos.add( 0xc068bd75, "ldstub [%r2 - 0x28b], %r0" );
  repos.add( 0xc069fff9, "ldstub [%r7 - 0x7], %r0" );
  repos.add( 0xda6b6b83, "ldstub [%r13 + 0xb83], %r13" );
  repos.add( 0xce69e8b3, "ldstub [%r7 + 0x8b3], %r7" );
  repos.add( 0xc468aa7f, "ldstub [%r2 + 0xa7f], %r2" );
  repos.add( 0xca6975c7, "ldstub [%r5 - 0xa39], %r5" );
  repos.add( 0xd46abcb9, "ldstub [%r10 - 0x347], %r10" );
  repos.add( 0xd468a240, "ldstub [%r2 + 0x240], %r10" );
  repos.add( 0xda69e0c0, "ldstub [%r7 + 0xc0], %r13" );
  repos.add( 0xc86b2144, "ldstub [%r12 + 0x144], %r4" );
  repos.add( 0xd668a625, "ldstub [%r2 + 0x625], %r11" );
  repos.add( 0xd46b647a, "ldstub [%r13 + 0x47a], %r10" );
  repos.add( 0xc66aeec4, "ldstub [%r11 + 0xec4], %r3" );
  repos.add( 0xda69ae4d, "ldstub [%r6 + 0xe4d], %r13" );
  repos.add( 0xc469a3ee, "ldstub [%r6 + 0x3ee], %r2" );
  repos.add( 0xca69ab7e, "ldstub [%r6 + 0xb7e], %r5" );
  repos.add( 0xd66b2f3d, "ldstub [%r12 + 0xf3d], %r11" );
  repos.add( 0xcc6aedff, "ldstub [%r11 + 0xdff], %r6" );
  repos.add( 0xc469b214, "ldstub [%r6 - 0xdec], %r2" );
  repos.add( 0xce68b181, "ldstub [%r2 - 0xe7f], %r7" );
  repos.add( 0xc6697134, "ldstub [%r5 - 0xecc], %r3" );
  repos.add( 0xce68f0a6, "ldstub [%r3 - 0xf5a], %r7" );
  repos.add( 0xc868b5c8, "ldstub [%r2 - 0xa38], %r4" );
  repos.add( 0xc468f307, "ldstub [%r3 - 0xcf9], %r2" );
  repos.add( 0xca6ab38b, "ldstub [%r10 - 0xc75], %r5" );
  repos.add( 0xc8697955, "ldstub [%r5 - 0x6ab], %r4" );
  repos.add( 0xc86b7a9d, "ldstub [%r13 - 0x563], %r4" );
  repos.add( 0xc86ab977, "ldstub [%r10 - 0x689], %r4" );
  repos.add( 0xc46abfd2, "ldstub [%r10 - 0x2e], %r2" );
  repos.add( 0xcc697fab, "ldstub [%r5 - 0x55], %r6" );
  repos.add( 0xce09de60, "ldub [%r7 + %r0], %r7" );
  repos.add( 0xca089800, "ldub [%r2 + %r0], %r5" );
  repos.add( 0xda0b416a, "ldub [%r13 + %r10], %r13" );
  repos.add( 0xda080743, "ldub [%r0 + %r3], %r13" );
  repos.add( 0xd40b52aa, "ldub [%r13 + %r10], %r10" );
  repos.add( 0xc6089c43, "ldub [%r2 + %r3], %r3" );
  repos.add( 0xcc091b43, "ldub [%r4 + %r3], %r6" );
  repos.add( 0xc609562a, "ldub [%r5 + %r10], %r3" );
  repos.add( 0xc00af960, "ldub [%r11 - 0x6a0], %r0" );
  repos.add( 0xc00afbae, "ldub [%r11 - 0x452], %r0" );
  repos.add( 0xc8092926, "ldub [%r4 + 0x926], %r4" );
  repos.add( 0xc80920f1, "ldub [%r4 + 0xf1], %r4" );
  repos.add( 0xc408acb1, "ldub [%r2 + 0xcb1], %r2" );
  repos.add( 0xca096c17, "ldub [%r5 + 0xc17], %r5" );
  repos.add( 0xd80b2b97, "ldub [%r12 + 0xb97], %r12" );
  repos.add( 0xc8092eb6, "ldub [%r4 + 0xeb6], %r4" );
  repos.add( 0xc8093602, "ldub [%r4 - 0x9fe], %r4" );
  repos.add( 0xda0b72ce, "ldub [%r13 - 0xd32], %r13" );
  repos.add( 0xd40ab563, "ldub [%r10 - 0xa9d], %r10" );
  repos.add( 0xca097753, "ldub [%r5 - 0x8ad], %r5" );
  repos.add( 0xd40ab6f6, "ldub [%r10 - 0x90a], %r10" );
  repos.add( 0xca0b620c, "ldub [%r13 + 0x20c], %r5" );
  repos.add( 0xc609e244, "ldub [%r7 + 0x244], %r3" );
  repos.add( 0xd40b2c44, "ldub [%r12 + 0xc44], %r10" );
  repos.add( 0xce0921e0, "ldub [%r4 + 0x1e0], %r7" );
  repos.add( 0xc40ae853, "ldub [%r11 + 0x853], %r2" );
  repos.add( 0xce0b21ca, "ldub [%r12 + 0x1ca], %r7" );
  repos.add( 0xd40b607b, "ldub [%r13 + 0x7b], %r10" );
  repos.add( 0xd808e57a, "ldub [%r3 + 0x57a], %r12" );
  repos.add( 0xc40ae2dd, "ldub [%r11 + 0x2dd], %r2" );
  repos.add( 0xc60ae8ef, "ldub [%r11 + 0x8ef], %r3" );
  repos.add( 0xce08efc5, "ldub [%r3 + 0xfc5], %r7" );
  repos.add( 0xcc0aeedd, "ldub [%r11 + 0xedd], %r6" );
  repos.add( 0xc608abaf, "ldub [%r2 + 0xbaf], %r3" );
  repos.add( 0xd808b402, "ldub [%r2 - 0xbfe], %r12" );
  repos.add( 0xc608b049, "ldub [%r2 - 0xfb7], %r3" );
  repos.add( 0xca08f60a, "ldub [%r3 - 0x9f6], %r5" );
  repos.add( 0xd60b7152, "ldub [%r13 - 0xeae], %r11" );
  repos.add( 0xcc0b3551, "ldub [%r12 - 0xaaf], %r6" );
  repos.add( 0xd80b7156, "ldub [%r13 - 0xeaa], %r12" );
  repos.add( 0xc809b32e, "ldub [%r6 - 0xcd2], %r4" );
  repos.add( 0xd608f539, "ldub [%r3 - 0xac7], %r11" );
  repos.add( 0xd609372e, "ldub [%r4 - 0x8d2], %r11" );
  repos.add( 0xd40935b5, "ldub [%r4 - 0xa4b], %r10" );
  repos.add( 0xd40975f9, "ldub [%r5 - 0xa07], %r10" );
  repos.add( 0xce0b75f3, "ldub [%r13 - 0xa0d], %r7" );
  repos.add( 0xca08ff7a, "ldub [%r3 - 0x86], %r5" );
  repos.add( 0xcc0ab7ed, "ldub [%r10 - 0x813], %r6" );
  repos.add( 0xc80b37bf, "ldub [%r12 - 0x841], %r4" );
  repos.add( 0xc40b3ff3, "ldub [%r12 - 0xd], %r2" );
  repos.add( 0xc0109e0a, "lduh [%r2 + %r10], %r0" );
  repos.add( 0xc010d5c6, "lduh [%r3 + %r6], %r0" );
  repos.add( 0xd81304ca, "lduh [%r12 + %r10], %r12" );
  repos.add( 0xcc109026, "lduh [%r2 + %r6], %r6" );
  repos.add( 0xce108683, "lduh [%r2 + %r3], %r7" );
  repos.add( 0xcc10c784, "lduh [%r3 + %r4], %r6" );
  repos.add( 0xc010e12a, "lduh [%r3 + 0x12a], %r0" );
  repos.add( 0xc010e57e, "lduh [%r3 + 0x57e], %r0" );
  repos.add( 0xcc11aa02, "lduh [%r6 + 0xa02], %r6" );
  repos.add( 0xc610e221, "lduh [%r3 + 0x221], %r3" );
  repos.add( 0xda1360e8, "lduh [%r13 + 0xe8], %r13" );
  repos.add( 0xd412a98c, "lduh [%r10 + 0x98c], %r10" );
  repos.add( 0xce11e983, "lduh [%r7 + 0x983], %r7" );
  repos.add( 0xcc11ae3f, "lduh [%r6 + 0xe3f], %r6" );
  repos.add( 0xda137e4a, "lduh [%r13 - 0x1b6], %r13" );
  repos.add( 0xcc11bbd8, "lduh [%r6 - 0x428], %r6" );
  repos.add( 0xcc12e440, "lduh [%r11 + 0x440], %r6" );
  repos.add( 0xc612a208, "lduh [%r10 + 0x208], %r3" );
  repos.add( 0xc412e045, "lduh [%r11 + 0x45], %r2" );
  repos.add( 0xda13228a, "lduh [%r12 + 0x28a], %r13" );
  repos.add( 0xd4136c81, "lduh [%r13 + 0xc81], %r10" );
  repos.add( 0xd410a62a, "lduh [%r2 + 0x62a], %r10" );
  repos.add( 0xc6132c31, "lduh [%r12 + 0xc31], %r3" );
  repos.add( 0xc410e05f, "lduh [%r3 + 0x5f], %r2" );
  repos.add( 0xca10aa1e, "lduh [%r2 + 0xa1e], %r5" );
  repos.add( 0xc813617d, "lduh [%r13 + 0x17d], %r4" );
  repos.add( 0xd612aeb2, "lduh [%r10 + 0xeb2], %r11" );
  repos.add( 0xca11e9b7, "lduh [%r7 + 0x9b7], %r5" );
  repos.add( 0xc612ee6b, "lduh [%r11 + 0xe6b], %r3" );
  repos.add( 0xda12ab7d, "lduh [%r10 + 0xb7d], %r13" );
  repos.add( 0xd812af7b, "lduh [%r10 + 0xf7b], %r12" );
  repos.add( 0xd4137089, "lduh [%r13 - 0xf77], %r10" );
  repos.add( 0xca11f211, "lduh [%r7 - 0xdef], %r5" );
  repos.add( 0xd8113892, "lduh [%r4 - 0x76e], %r12" );
  repos.add( 0xc412fc54, "lduh [%r11 - 0x3ac], %r2" );
  repos.add( 0xcc10b90d, "lduh [%r2 - 0x6f3], %r6" );
  repos.add( 0xcc1132da, "lduh [%r4 - 0xd26], %r6" );
  repos.add( 0xc61175e9, "lduh [%r5 - 0xa17], %r3" );
  repos.add( 0xc412b33d, "lduh [%r10 - 0xcc3], %r2" );
  repos.add( 0xc611b66f, "lduh [%r6 - 0x991], %r3" );
  repos.add( 0xd411379e, "lduh [%r4 - 0x862], %r10" );
  repos.add( 0xc412ff97, "lduh [%r11 - 0x69], %r2" );
  repos.add( 0x812010ec, "mulscc %r0, %r12, %r0" );
  repos.add( 0x89201b25, "mulscc %r0, %r5, %r4" );
  repos.add( 0x95201823, "mulscc %r0, %r3, %r10" );
  repos.add( 0x8f21c887, "mulscc %r7, %r7, %r7" );
  repos.add( 0x8b21552b, "mulscc %r5, %r11, %r5" );
  repos.add( 0x89211b66, "mulscc %r4, %r6, %r4" );
  repos.add( 0x812297a3, "mulscc %r10, %r3, %r0" );
  repos.add( 0x8122dce5, "mulscc %r11, %r5, %r0" );
  repos.add( 0x8f219c66, "mulscc %r6, %r6, %r7" );
  repos.add( 0x8523522d, "mulscc %r13, %r13, %r2" );
  repos.add( 0x9b215e6d, "mulscc %r5, %r13, %r13" );
  repos.add( 0x8d21c1e5, "mulscc %r7, %r5, %r6" );
  repos.add( 0x872096e6, "mulscc %r2, %r6, %r3" );
  repos.add( 0x8b2152c0, "mulscc %r5, %r0, %r5" );
  repos.add( 0x8720c5c0, "mulscc %r3, %r0, %r3" );
  repos.add( 0x8b2098a0, "mulscc %r2, %r0, %r5" );
  repos.add( 0x8721d9c0, "mulscc %r7, %r0, %r3" );
  repos.add( 0x9b203daf, "mulscc %r0, -593, %r13" );
  repos.add( 0x8f2039ce, "mulscc %r0, -1586, %r7" );
  repos.add( 0x9b2035dc, "mulscc %r0, -2596, %r13" );
  repos.add( 0x8d202fb7, "mulscc %r0, 4023, %r6" );
  repos.add( 0x87202f67, "mulscc %r0, 3943, %r3" );
  repos.add( 0x8f2023fe, "mulscc %r0, 1022, %r7" );
  repos.add( 0x992024ba, "mulscc %r0, 1210, %r12" );
  repos.add( 0x972022dc, "mulscc %r0, 732, %r11" );
  repos.add( 0x89202aa2, "mulscc %r0, 2722, %r4" );
  repos.add( 0x8f20205d, "mulscc %r0, 93, %r7" );
  repos.add( 0x8f202205, "mulscc %r0, 517, %r7" );
  repos.add( 0x9722fdd9, "mulscc %r11, -551, %r11" );
  repos.add( 0x9b237d84, "mulscc %r13, -636, %r13" );
  repos.add( 0x8720f2cc, "mulscc %r3, -3380, %r3" );
  repos.add( 0x9722fc41, "mulscc %r11, -959, %r11" );
  repos.add( 0x8520ac3b, "mulscc %r2, 3131, %r2" );
  repos.add( 0x8520a133, "mulscc %r2, 307, %r2" );
  repos.add( 0x8f21ea0d, "mulscc %r7, 2573, %r7" );
  repos.add( 0x81217b1e, "mulscc %r5, -1250, %r0" );
  repos.add( 0x81237319, "mulscc %r13, -3303, %r0" );
  repos.add( 0x8122e6c5, "mulscc %r11, 1733, %r0" );
  repos.add( 0x812160bc, "mulscc %r5, 188, %r0" );
  repos.add( 0x8122a3b0, "mulscc %r10, 944, %r0" );
  repos.add( 0x812320a1, "mulscc %r12, 161, %r0" );
  repos.add( 0x9b213bfd, "mulscc %r4, -1027, %r13" );
  repos.add( 0x85213bbb, "mulscc %r4, -1093, %r2" );
  repos.add( 0x8f22fbdb, "mulscc %r11, -1061, %r7" );
  repos.add( 0x85213bba, "mulscc %r4, -1094, %r2" );
  repos.add( 0x9521bf74, "mulscc %r6, -140, %r10" );
  repos.add( 0x8521bd56, "mulscc %r6, -682, %r2" );
  repos.add( 0x8b21f36b, "mulscc %r7, -3221, %r5" );
  repos.add( 0x8522f1bc, "mulscc %r11, -3652, %r2" );
  repos.add( 0x8521fda8, "mulscc %r7, -600, %r2" );
  repos.add( 0x8722bb03, "mulscc %r10, -1277, %r3" );
  repos.add( 0x9b21f643, "mulscc %r7, -2493, %r13" );
  repos.add( 0x87217154, "mulscc %r5, -3756, %r3" );
  repos.add( 0x8920f170, "mulscc %r3, -3728, %r4" );
  repos.add( 0x8521f0e0, "mulscc %r7, -3872, %r2" );
  repos.add( 0x85217508, "mulscc %r5, -2808, %r2" );
  repos.add( 0x97213030, "mulscc %r4, -4048, %r11" );
  repos.add( 0x9920afe7, "mulscc %r2, 4071, %r12" );
  repos.add( 0x87232fd3, "mulscc %r12, 4051, %r3" );
  repos.add( 0x8522e6f5, "mulscc %r11, 1781, %r2" );
  repos.add( 0x8d21233f, "mulscc %r4, 831, %r6" );
  repos.add( 0x8923693b, "mulscc %r13, 2363, %r4" );
  repos.add( 0x8f236f83, "mulscc %r13, 3971, %r7" );
  repos.add( 0x8921ea8e, "mulscc %r7, 2702, %r4" );
  repos.add( 0x892321e9, "mulscc %r12, 489, %r4" );
  repos.add( 0x8b21a607, "mulscc %r6, 1543, %r5" );
  repos.add( 0x8d21e12e, "mulscc %r7, 302, %r6" );
  repos.add( 0x8b20ea60, "mulscc %r3, 2656, %r5" );
  repos.add( 0x8f20ee08, "mulscc %r3, 3592, %r7" );
  repos.add( 0x8920a111, "mulscc %r2, 273, %r4" );
  repos.add( 0x872361a0, "mulscc %r13, 416, %r3" );
  repos.add( 0x861000c3, "or %r0, %r3, %r3" );
  repos.add( 0x8011046b, "or %r4, %r11, %r0" );
  repos.add( 0x80114feb, "or %r5, %r11, %r0" );
  repos.add( 0x9413538d, "or %r13, %r13, %r10" );
  repos.add( 0x96135c8d, "or %r13, %r13, %r11" );
  repos.add( 0x98115fc0, "or %r5, %r0, %r12" );
  repos.add( 0x8412ce60, "or %r11, %r0, %r2" );
  repos.add( 0x8e11cb42, "or %r7, %r2, %r7" );
  repos.add( 0x8e11c142, "or %r7, %r2, %r7" );
  repos.add( 0x8c10030d, "or %r0, %r13, %r6" );
  repos.add( 0x94100ecc, "or %r0, %r12, %r10" );
  repos.add( 0x8e12cb67, "or %r11, %r7, %r7" );
  repos.add( 0x94114b83, "or %r5, %r3, %r10" );
  repos.add( 0x8e10db82, "or %r3, %r2, %r7" );
  repos.add( 0x8c9289ea, "orcc %r10, %r10, %r6" );
  repos.add( 0x949340ad, "orcc %r13, %r13, %r10" );
  repos.add( 0x9891c1c0, "orcc %r7, %r0, %r12" );
  repos.add( 0x80910ba3, "tst %r4, %r3" );
  repos.add( 0x88910283, "orcc %r4, %r3, %r4" );
  repos.add( 0x8691dbe3, "orcc %r7, %r3, %r3" );
  repos.add( 0x9a9150ed, "orcc %r5, %r13, %r13" );
  repos.add( 0x8c9016c3, "orcc %r0, %r3, %r6" );
  repos.add( 0x8890118b, "orcc %r0, %r11, %r4" );
  repos.add( 0x9892c2a6, "orcc %r11, %r6, %r12" );
  repos.add( 0x9890d6cd, "orcc %r3, %r13, %r12" );
  repos.add( 0x94902608, "orcc %r0, 1544, %r10" );
  repos.add( 0x949028c1, "orcc %r0, 2241, %r10" );
  repos.add( 0x88902307, "orcc %r0, 775, %r4" );
  repos.add( 0x96902d16, "orcc %r0, 3350, %r11" );
  repos.add( 0x8c902fd4, "orcc %r0, 4052, %r6" );
  repos.add( 0x8e9022f7, "orcc %r0, 759, %r7" );
  repos.add( 0x989038c0, "orcc %r0, -1856, %r12" );
  repos.add( 0x88903908, "orcc %r0, -1784, %r4" );
  repos.add( 0x98903233, "orcc %r0, -3533, %r12" );
  repos.add( 0x8a903327, "orcc %r0, -3289, %r5" );
  repos.add( 0x9a903c8e, "orcc %r0, -882, %r13" );
  repos.add( 0x8092a230, "tst %r10, 560" );
  repos.add( 0x8690e528, "orcc %r3, 1320, %r3" );
  repos.add( 0x88912609, "orcc %r4, 1545, %r4" );
  repos.add( 0x8091e1ec, "tst %r7, 492" );
  repos.add( 0x9692e8b6, "orcc %r11, 2230, %r11" );
  repos.add( 0x98932cc7, "orcc %r12, 3271, %r12" );
  repos.add( 0x8c91acbe, "orcc %r6, 3262, %r6" );
  repos.add( 0x8091f820, "tst %r7, -2016" );
  repos.add( 0x9692f30e, "orcc %r11, -3314, %r11" );
  repos.add( 0x8092f336, "tst %r11, -3274" );
  repos.add( 0x9492b935, "orcc %r10, -1739, %r10" );
  repos.add( 0x8490baaf, "orcc %r2, -1361, %r2" );
  repos.add( 0x889136fd, "orcc %r4, -2307, %r4" );
  repos.add( 0x8c90a140, "orcc %r2, 320, %r6" );
  repos.add( 0x9892e0d0, "orcc %r11, 208, %r12" );
  repos.add( 0x8a92e922, "orcc %r11, 2338, %r5" );
  repos.add( 0x8891e252, "orcc %r7, 594, %r4" );
  repos.add( 0x9a91e38a, "orcc %r7, 906, %r13" );
  repos.add( 0x8c91e370, "orcc %r7, 880, %r6" );
  repos.add( 0x8492e9e8, "orcc %r11, 2536, %r2" );
  repos.add( 0x8491ab2c, "orcc %r6, 2860, %r2" );
  repos.add( 0x8491e697, "orcc %r7, 1687, %r2" );
  repos.add( 0x9a9323b6, "orcc %r12, 950, %r13" );
  repos.add( 0x8890a767, "orcc %r2, 1895, %r4" );
  repos.add( 0x9891acb7, "orcc %r6, 3255, %r12" );
  repos.add( 0x94932777, "orcc %r12, 1911, %r10" );
  repos.add( 0x94936efb, "orcc %r13, 3835, %r10" );
  repos.add( 0x8a92eeff, "orcc %r11, 3839, %r5" );
  repos.add( 0x8890b013, "orcc %r2, -4077, %r4" );
  repos.add( 0x8a92b688, "orcc %r10, -2424, %r5" );
  repos.add( 0x8891f251, "orcc %r7, -3503, %r4" );
  repos.add( 0x8c917c23, "orcc %r5, -989, %r6" );
  repos.add( 0x9891fca6, "orcc %r7, -858, %r12" );
  repos.add( 0x8e933a65, "orcc %r12, -1435, %r7" );
  repos.add( 0x9691fa97, "orcc %r7, -1385, %r11" );
  repos.add( 0x889331f3, "orcc %r12, -3597, %r4" );
  repos.add( 0x9892ff95, "orcc %r11, -107, %r12" );
  repos.add( 0x8692fed9, "orcc %r11, -295, %r3" );
  repos.add( 0x96937bb7, "orcc %r13, -1097, %r11" );
  repos.add( 0x84913ff1, "orcc %r4, -15, %r2" );
  repos.add( 0x9a933dfe, "orcc %r12, -514, %r13" );
  repos.add( 0x80102a6d, "or %r0, 2669, %r0" );
  repos.add( 0x8011fd9b, "or %r7, -613, %r0" );
  repos.add( 0x80117cbf, "or %r5, -833, %r0" );
  repos.add( 0x8e10280c, "or %r0, 2060, %r7" );
  repos.add( 0x881028d0, "or %r0, 2256, %r4" );
  repos.add( 0x8e102370, "or %r0, 880, %r7" );
  repos.add( 0x8a102778, "or %r0, 1912, %r5" );
  repos.add( 0x8a103117, "or %r0, -3817, %r5" );
  repos.add( 0x9410355d, "or %r0, -2723, %r10" );
  repos.add( 0x8e103e65, "or %r0, -411, %r7" );
  repos.add( 0x981322c8, "or %r12, 712, %r12" );
  repos.add( 0x8a11642d, "or %r5, 1069, %r5" );
  repos.add( 0x9612ea54, "or %r11, 2644, %r11" );
  repos.add( 0x8811270e, "or %r4, 1806, %r4" );
  repos.add( 0x8610e8e9, "or %r3, 2281, %r3" );
  repos.add( 0x88112c3b, "or %r4, 3131, %r4" );
  repos.add( 0x9a136afa, "or %r13, 2810, %r13" );
  repos.add( 0x9612ef9a, "or %r11, 3994, %r11" );
  repos.add( 0x88113887, "or %r4, -1913, %r4" );
  repos.add( 0x8410b56c, "or %r2, -2708, %r2" );
  repos.add( 0x9612ff8d, "or %r11, -115, %r11" );
  repos.add( 0x94136050, "or %r13, 80, %r10" );
  repos.add( 0x94136005, "or %r13, 5, %r10" );
  repos.add( 0x94116098, "or %r5, 152, %r10" );
  repos.add( 0x8810a530, "or %r2, 1328, %r4" );
  repos.add( 0x841362a8, "or %r13, 680, %r2" );
  repos.add( 0x8811ac89, "or %r6, 3209, %r4" );
  repos.add( 0x861321e5, "or %r12, 485, %r3" );
  repos.add( 0x98136abc, "or %r13, 2748, %r12" );
  repos.add( 0x8412e35b, "or %r11, 859, %r2" );
  repos.add( 0x8e12ae5f, "or %r10, 3679, %r7" );
  repos.add( 0x8c12affc, "or %r10, 4092, %r6" );
  repos.add( 0x9411aedf, "or %r6, 3807, %r10" );
  repos.add( 0x8c137888, "or %r13, -1912, %r6" );
  repos.add( 0x8810fa28, "or %r3, -1496, %r4" );
  repos.add( 0x9811728b, "or %r5, -3445, %r12" );
  repos.add( 0x841331c9, "or %r12, -3639, %r2" );
  repos.add( 0x8811f3a5, "or %r7, -3163, %r4" );
  repos.add( 0x8811703f, "or %r5, -4033, %r4" );
  repos.add( 0x9a12f0df, "or %r11, -3873, %r13" );
  repos.add( 0x8c133f1c, "or %r12, -228, %r6" );
  repos.add( 0x8411bd76, "or %r6, -650, %r2" );
  repos.add( 0x9610b3be, "or %r2, -3138, %r11" );
  repos.add( 0x9a12fded, "or %r11, -531, %r13" );
  repos.add( 0x861175fb, "or %r5, -2565, %r3" );
  repos.add( 0x88310324, "orn %r4, %r4, %r4" );
  repos.add( 0x863318a0, "orn %r12, %r0, %r3" );
  repos.add( 0x86328980, "orn %r10, %r0, %r3" );
  repos.add( 0x9831cb67, "orn %r7, %r7, %r12" );
  repos.add( 0x883185a6, "orn %r6, %r6, %r4" );
  repos.add( 0x8e300862, "orn %r0, %r2, %r7" );
  repos.add( 0x8e3001ed, "orn %r0, %r13, %r7" );
  repos.add( 0x8c315f46, "orn %r5, %r6, %r6" );
  repos.add( 0x9631c5eb, "orn %r7, %r11, %r11" );
  repos.add( 0x8c334363, "orn %r13, %r3, %r6" );
  repos.add( 0x9a30dd25, "orn %r3, %r5, %r13" );
  repos.add( 0x84b15040, "orncc %r5, %r0, %r2" );
  repos.add( 0x94b2cec0, "orncc %r11, %r0, %r10" );
  repos.add( 0x98b1d3c7, "orncc %r7, %r7, %r12" );
  repos.add( 0x9ab1dda7, "orncc %r7, %r7, %r13" );
  repos.add( 0x80b0cae4, "orncc %r3, %r4, %r0" );
  repos.add( 0x80b08825, "orncc %r2, %r5, %r0" );
  repos.add( 0x94b28dad, "orncc %r10, %r13, %r10" );
  repos.add( 0x88b106ad, "orncc %r4, %r13, %r4" );
  repos.add( 0x98b0938c, "orncc %r2, %r12, %r12" );
  repos.add( 0x94b357ca, "orncc %r13, %r10, %r10" );
  repos.add( 0x8cb01803, "orncc %r0, %r3, %r6" );
  repos.add( 0x8cb35f27, "orncc %r13, %r7, %r6" );
  repos.add( 0x8eb0dd0d, "orncc %r3, %r13, %r7" );
  repos.add( 0x94b03bc7, "orncc %r0, -1081, %r10" );
  repos.add( 0x96b037e1, "orncc %r0, -2079, %r11" );
  repos.add( 0x86b03b53, "orncc %r0, -1197, %r3" );
  repos.add( 0x8ab03ae8, "orncc %r0, -1304, %r5" );
  repos.add( 0x88b03443, "orncc %r0, -3005, %r4" );
  repos.add( 0x8eb02fa9, "orncc %r0, 4009, %r7" );
  repos.add( 0x94b026dc, "orncc %r0, 1756, %r10" );
  repos.add( 0x8eb023a6, "orncc %r0, 934, %r7" );
  repos.add( 0x94b02095, "orncc %r0, 149, %r10" );
  repos.add( 0x86b022c4, "orncc %r0, 708, %r3" );
  repos.add( 0x80b33e6d, "orncc %r12, -403, %r0" );
  repos.add( 0x96b2f79c, "orncc %r11, -2148, %r11" );
  repos.add( 0x80b0bd0e, "orncc %r2, -754, %r0" );
  repos.add( 0x80b0f4c9, "orncc %r3, -2871, %r0" );
  repos.add( 0x8ab17064, "orncc %r5, -3996, %r5" );
  repos.add( 0x80b2af79, "orncc %r10, 3961, %r0" );
  repos.add( 0x80b1e6dc, "orncc %r7, 1756, %r0" );
  repos.add( 0x80b1eb28, "orncc %r7, 2856, %r0" );
  repos.add( 0x94b2a0a4, "orncc %r10, 164, %r10" );
  repos.add( 0x88b0f7fd, "orncc %r3, -2051, %r4" );
  repos.add( 0x98b0fbdf, "orncc %r3, -1057, %r12" );
  repos.add( 0x94b1f8ff, "orncc %r7, -1793, %r10" );
  repos.add( 0x8ab1fedd, "orncc %r7, -291, %r5" );
  repos.add( 0x96b0fd37, "orncc %r3, -713, %r11" );
  repos.add( 0x8eb13fcc, "orncc %r4, -52, %r7" );
  repos.add( 0x88b0b5ec, "orncc %r2, -2580, %r4" );
  repos.add( 0x86b1fba5, "orncc %r7, -1115, %r3" );
  repos.add( 0x8ab2ba63, "orncc %r10, -1437, %r5" );
  repos.add( 0x94b0ba87, "orncc %r2, -1401, %r10" );
  repos.add( 0x84b37926, "orncc %r13, -1754, %r2" );
  repos.add( 0x8eb0b187, "orncc %r2, -3705, %r7" );
  repos.add( 0x96b1ba82, "orncc %r6, -1406, %r11" );
  repos.add( 0x94b379a0, "orncc %r13, -1632, %r10" );
  repos.add( 0x84b2f484, "orncc %r11, -2940, %r2" );
  repos.add( 0x8eb1b085, "orncc %r6, -3963, %r7" );
  repos.add( 0x98b13028, "orncc %r4, -4056, %r12" );
  repos.add( 0x88b2eefd, "orncc %r11, 3837, %r4" );
  repos.add( 0x86b2eb3f, "orncc %r11, 2879, %r3" );
  repos.add( 0x9ab0a977, "orncc %r2, 2423, %r13" );
  repos.add( 0x9ab0a9da, "orncc %r2, 2522, %r13" );
  repos.add( 0x86b2ab59, "orncc %r10, 2905, %r3" );
  repos.add( 0x8cb1613d, "orncc %r5, 317, %r6" );
  repos.add( 0x96b0a26d, "orncc %r2, 621, %r11" );
  repos.add( 0x84b16307, "orncc %r5, 775, %r2" );
  repos.add( 0x8cb1214b, "orncc %r4, 331, %r6" );
  repos.add( 0x84b16492, "orncc %r5, 1170, %r2" );
  repos.add( 0x8ab1a905, "orncc %r6, 2309, %r5" );
  repos.add( 0x94b1e188, "orncc %r7, 392, %r10" );
  repos.add( 0x80303151, "orn %r0, -3759, %r0" );
  repos.add( 0x80303454, "orn %r0, -2988, %r0" );
  repos.add( 0x8031a10b, "orn %r6, 267, %r0" );
  repos.add( 0x8031e05d, "orn %r7, 93, %r0" );
  repos.add( 0x9630337c, "orn %r0, -3204, %r11" );
  repos.add( 0x8c303267, "orn %r0, -3481, %r6" );
  repos.add( 0x943030eb, "orn %r0, -3861, %r10" );
  repos.add( 0x9a303825, "orn %r0, -2011, %r13" );
  repos.add( 0x84302eeb, "orn %r0, 3819, %r2" );
  repos.add( 0x8e302f71, "orn %r0, 3953, %r7" );
  repos.add( 0x9630252d, "orn %r0, 1325, %r11" );
  repos.add( 0x86302276, "orn %r0, 630, %r3" );
  repos.add( 0x9a302493, "orn %r0, 1171, %r13" );
  repos.add( 0x8630280f, "orn %r0, 2063, %r3" );
  repos.add( 0x8430bec6, "orn %r2, -314, %r2" );
  repos.add( 0x8430b7e8, "orn %r2, -2072, %r2" );
  repos.add( 0x9432b346, "orn %r10, -3258, %r10" );
  repos.add( 0x8a317a0a, "orn %r5, -1526, %r5" );
  repos.add( 0x8831297e, "orn %r4, 2430, %r4" );
  repos.add( 0x8430ad1c, "orn %r2, 3356, %r2" );
  repos.add( 0x8630ed2c, "orn %r3, 3372, %r3" );
  repos.add( 0x9632e06b, "orn %r11, 107, %r11" );
  repos.add( 0x9831ffee, "orn %r7, -18, %r12" );
  repos.add( 0x8832fed7, "orn %r11, -297, %r4" );
  repos.add( 0x8c313db3, "orn %r4, -589, %r6" );
  repos.add( 0x8e3376f3, "orn %r13, -2317, %r7" );
  repos.add( 0x8831b62f, "orn %r6, -2513, %r4" );
  repos.add( 0x8e32f7e1, "orn %r11, -2079, %r7" );
  repos.add( 0x8830f476, "orn %r3, -2954, %r4" );
  repos.add( 0x9a31ba96, "orn %r6, -1386, %r13" );
  repos.add( 0x9631b233, "orn %r6, -3533, %r11" );
  repos.add( 0x9830fc58, "orn %r3, -936, %r12" );
  repos.add( 0x863171c2, "orn %r5, -3646, %r3" );
  repos.add( 0x8c333126, "orn %r12, -3802, %r6" );
  repos.add( 0x8432f824, "orn %r11, -2012, %r2" );
  repos.add( 0x96332eed, "orn %r12, 3821, %r11" );
  repos.add( 0x8430e2ff, "orn %r3, 767, %r2" );
  repos.add( 0x8a336e9d, "orn %r13, 3741, %r5" );
  repos.add( 0x98336f3a, "orn %r13, 3898, %r12" );
  repos.add( 0x9631ec3e, "orn %r7, 3134, %r11" );
  repos.add( 0x8a31ae6c, "orn %r6, 3692, %r5" );
  repos.add( 0x8c32e60f, "orn %r11, 1551, %r6" );
  repos.add( 0x9630a7e0, "orn %r2, 2016, %r11" );
  repos.add( 0x8e3361e1, "orn %r13, 481, %r7" );
  repos.add( 0x8a31252a, "orn %r4, 1322, %r5" );
  repos.add( 0x8a31a143, "orn %r6, 323, %r5" );
  repos.add( 0x8c3368c2, "orn %r13, 2242, %r6" );
  repos.add( 0x9830e016, "orn %r3, 22, %r12" );
  repos.add( 0x814026e3, "rd %y, %r0" );
  repos.add( 0x81403573, "rd %y, %r0" );
  repos.add( 0x974001c4, "rd %y, %r11" );
  repos.add( 0x874014b1, "rd %y, %r3" );
  repos.add( 0x96faf015, "sdivcc %r11, -4075, %r11" );
  repos.add( 0x98fb331a, "sdivcc %r12, -3302, %r12" );
  repos.add( 0x96faf0b6, "sdivcc %r11, -3914, %r11" );
  repos.add( 0x88f9350f, "sdivcc %r4, -2801, %r4" );
  repos.add( 0x80f82054, "sdivcc %r0, 84, %r0" );
  repos.add( 0x96f82511, "sdivcc %r0, 1297, %r11" );
  repos.add( 0x96f82325, "sdivcc %r0, 805, %r11" );
  repos.add( 0x8cf82247, "sdivcc %r0, 583, %r6" );
  repos.add( 0x94f82c55, "sdivcc %r0, 3157, %r10" );
  repos.add( 0x88f829a7, "sdivcc %r0, 2471, %r4" );
  repos.add( 0x94f82d5e, "sdivcc %r0, 3422, %r10" );
  repos.add( 0x9af830e2, "sdivcc %r0, -3870, %r13" );
  repos.add( 0x9af83e08, "sdivcc %r0, -504, %r13" );
  repos.add( 0x9af834b2, "sdivcc %r0, -2894, %r13" );
  repos.add( 0x8af830c7, "sdivcc %r0, -3897, %r5" );
  repos.add( 0x86f837fd, "sdivcc %r0, -2051, %r3" );
  repos.add( 0x86f8a628, "sdivcc %r2, 1576, %r3" );
  repos.add( 0x80fae46a, "sdivcc %r11, 1130, %r0" );
  repos.add( 0x86f9a135, "sdivcc %r6, 309, %r3" );
  repos.add( 0x80f8a7a4, "sdivcc %r2, 1956, %r0" );
  repos.add( 0x80fae0d7, "sdivcc %r11, 215, %r0" );
  repos.add( 0x98f923c5, "sdivcc %r4, 965, %r12" );
  repos.add( 0x8af9a8cb, "sdivcc %r6, 2251, %r5" );
  repos.add( 0x94f92aed, "sdivcc %r4, 2797, %r10" );
  repos.add( 0x8efb6fb1, "sdivcc %r13, 4017, %r7" );
  repos.add( 0x80f9ebcf, "sdivcc %r7, 3023, %r0" );
  repos.add( 0x9af9adf9, "sdivcc %r6, 3577, %r13" );
  repos.add( 0x88f8ed6f, "sdivcc %r3, 3439, %r4" );
  repos.add( 0x88faaf7b, "sdivcc %r10, 3963, %r4" );
  repos.add( 0x86f927f7, "sdivcc %r4, 2039, %r3" );
  repos.add( 0x80f8b101, "sdivcc %r2, -3839, %r0" );
  repos.add( 0x8af9bc00, "sdivcc %r6, -1024, %r5" );
  repos.add( 0x80faf88a, "sdivcc %r11, -1910, %r0" );
  repos.add( 0x8efaf213, "sdivcc %r11, -3565, %r7" );
  repos.add( 0x84fb3650, "sdivcc %r12, -2480, %r2" );
  repos.add( 0x80f8f703, "sdivcc %r3, -2301, %r0" );
  repos.add( 0x8cfb354c, "sdivcc %r12, -2740, %r6" );
  repos.add( 0x94fb3558, "sdivcc %r12, -2728, %r10" );
  repos.add( 0x80faf84f, "sdivcc %r11, -1969, %r0" );
  repos.add( 0x80f8b58e, "sdivcc %r2, -2674, %r0" );
  repos.add( 0x8afaf366, "sdivcc %r11, -3226, %r5" );
  repos.add( 0x8ef938bc, "sdivcc %r4, -1860, %r7" );
  repos.add( 0x80f9b99b, "sdivcc %r6, -1637, %r0" );
  repos.add( 0x94f8b6d6, "sdivcc %r2, -2346, %r10" );
  repos.add( 0x88fab6cd, "sdivcc %r10, -2355, %r4" );
  repos.add( 0x8cfab773, "sdivcc %r10, -2189, %r6" );
  repos.add( 0x8efaff63, "sdivcc %r11, -157, %r7" );
  repos.add( 0x84f8fefc, "sdivcc %r3, -260, %r2" );
  repos.add( 0x8ef9bf77, "sdivcc %r6, -137, %r7" );
  repos.add( 0x80782e96, "sdiv %r0, 3734, %r0" );
  repos.add( 0x8c79ae66, "sdiv %r6, 3686, %r6" );
  repos.add( 0x8678eb8d, "sdiv %r3, 2957, %r3" );
  repos.add( 0x8678edbc, "sdiv %r3, 3516, %r3" );
  repos.add( 0x8678ef27, "sdiv %r3, 3879, %r3" );
  repos.add( 0x8e79fc92, "sdiv %r7, -878, %r7" );
  repos.add( 0x987b3959, "sdiv %r12, -1703, %r12" );
  repos.add( 0x9a7b7a6c, "sdiv %r13, -1428, %r13" );
  repos.add( 0x987b38dd, "sdiv %r12, -1827, %r12" );
  repos.add( 0x88793e7a, "sdiv %r4, -390, %r4" );
  repos.add( 0x8478b7f5, "sdiv %r2, -2059, %r2" );
  repos.add( 0x8a782da2, "sdiv %r0, 3490, %r5" );
  repos.add( 0x8c78295f, "sdiv %r0, 2399, %r6" );
  repos.add( 0x8c7832a6, "sdiv %r0, -3418, %r6" );
  repos.add( 0x8e783cc6, "sdiv %r0, -826, %r7" );
  repos.add( 0x88783393, "sdiv %r0, -3181, %r4" );
  repos.add( 0x807b6b30, "sdiv %r13, 2864, %r0" );
  repos.add( 0x8079a368, "sdiv %r6, 872, %r0" );
  repos.add( 0x967aa848, "sdiv %r10, 2120, %r11" );
  repos.add( 0x8a7ae065, "sdiv %r11, 101, %r5" );
  repos.add( 0x9478e463, "sdiv %r3, 1123, %r10" );
  repos.add( 0x8a79ed88, "sdiv %r7, 3464, %r5" );
  repos.add( 0x8c79e9e8, "sdiv %r7, 2536, %r6" );
  repos.add( 0x8a79ef05, "sdiv %r7, 3845, %r5" );
  repos.add( 0x98792d59, "sdiv %r4, 3417, %r12" );
  repos.add( 0x9a7aea57, "sdiv %r11, 2647, %r13" );
  repos.add( 0x987ae9f3, "sdiv %r11, 2547, %r12" );
  repos.add( 0x9a78e75f, "sdiv %r3, 1887, %r13" );
  repos.add( 0x9879b424, "sdiv %r6, -3036, %r12" );
  repos.add( 0x867b7909, "sdiv %r13, -1783, %r3" );
  repos.add( 0x887ab8a1, "sdiv %r10, -1887, %r4" );
  repos.add( 0x8c7b7ba0, "sdiv %r13, -1120, %r6" );
  repos.add( 0x9678b278, "sdiv %r2, -3464, %r11" );
  repos.add( 0x847938f4, "sdiv %r4, -1804, %r2" );
  repos.add( 0x96797574, "sdiv %r5, -2700, %r11" );
  repos.add( 0x8878bd1e, "sdiv %r2, -738, %r4" );
  repos.add( 0x867b33f4, "sdiv %r12, -3084, %r3" );
  repos.add( 0x8a79bb75, "sdiv %r6, -1163, %r5" );
  repos.add( 0x8a7b7a7d, "sdiv %r13, -1411, %r5" );
  repos.add( 0x8c7b3b6f, "sdiv %r12, -1169, %r6" );
  repos.add( 0x9678fbdb, "sdiv %r3, -1061, %r11" );
  repos.add( 0x86797bfe, "sdiv %r5, -1026, %r3" );
  repos.add( 0x12e8708, "sethi %hi(-0xba1c2000), %r0" );
  repos.add( 0x106de59, "sethi %hi(-0x1b796400), %r0" );
  repos.add( 0x1918020c, "sethi %hi(-0x60083000), %r12" );
  repos.add( 0x7151082, "sethi %hi(-0x54420800), %r3" );
  repos.add( 0x1904e840, "sethi %hi(-0x13a10000), %r12" );
  repos.add( 0xf18a01c, "sethi %hi(-0x62807000), %r7" );
  repos.add( 0xb092289, "sethi %hi(-0x248a2400), %r5" );
  repos.add( 0x17151330, "sethi %hi(-0x544cc000), %r11" );
  repos.add( 0x90cb051, "sethi %hi(-0x32c14400), %r4" );
  repos.add( 0x19276414, "sethi %hi(-0x9d905000), %r12" );
  repos.add( 0x19249863, "sethi %hi(-0x92618c00), %r12" );
  repos.add( 0x191570a5, "sethi %hi(-0x55c29400), %r12" );
  repos.add( 0x152c8a2e, "sethi %hi(-0xb228b800), %r10" );
  repos.add( 0x1914ee4c, "sethi %hi(-0x53b93000), %r12" );
  repos.add( 0xd07bb06, "sethi %hi(-0x1eec1800), %r6" );
  repos.add( 0x1722aadb, "sethi %hi(-0x8aab6c00), %r11" );
  repos.add( 0x51d455b, "sethi %hi(-0x75156c00), %r2" );
  repos.add( 0x1b3ad2e9, "sethi %hi(-0xeb4ba400), %r13" );
  repos.add( 0x1727e1d9, "sethi %hi(-0x9f876400), %r11" );
  repos.add( 0x71abfd1, "sethi %hi(-0x6aff4400), %r3" );
  repos.add( 0xf35feb0, "sethi %hi(-0xd7fac000), %r7" );
  repos.add( 0x533ed2f, "sethi %hi(-0xcfb4bc00), %r2" );
  repos.add( 0xf1fe17e, "sethi %hi(-0x7f85f800), %r7" );
  repos.add( 0x7354ffb, "sethi %hi(-0xd53fec00), %r3" );
  repos.add( 0x53bcdf9, "sethi %hi(-0xef37e400), %r2" );
  repos.add( 0x171eaffe, "sethi %hi(-0x7abff800), %r11" );
  repos.add( 0x81281f86, "sll %r0, %r6, %r0" );
  repos.add( 0x812b56ed, "sll %r13, %r13, %r0" );
  repos.add( 0x95280940, "sll %r0, %r0, %r10" );
  repos.add( 0x99281a4c, "sll %r0, %r12, %r12" );
  repos.add( 0x81295602, "sll %r5, %r2, %r0" );
  repos.add( 0x812acb85, "sll %r11, %r5, %r0" );
  repos.add( 0x8f2b17a0, "sll %r12, %r0, %r7" );
  repos.add( 0x8b289722, "sll %r2, %r2, %r5" );
  repos.add( 0x87299a23, "sll %r6, %r3, %r3" );
  repos.add( 0x8b280503, "sll %r0, %r3, %r5" );
  repos.add( 0x8528190c, "sll %r0, %r12, %r2" );
  repos.add( 0x992b0c67, "sll %r12, %r7, %r12" );
  repos.add( 0x89291f83, "sll %r4, %r3, %r4" );
  repos.add( 0x872b0c0a, "sll %r12, %r10, %r3" );
  repos.add( 0x972983c3, "sll %r6, %r3, %r11" );
  repos.add( 0x81282a11, "sll %r0, 17, %r0" );
  repos.add( 0x812822fc, "sll %r0, 28, %r0" );
  repos.add( 0x812aecce, "sll %r11, 14, %r0" );
  repos.add( 0x8129b058, "sll %r6, 24, %r0" );
  repos.add( 0x9b282561, "sll %r0, 1, %r13" );
  repos.add( 0x9928339a, "sll %r0, 26, %r12" );
  repos.add( 0x89293348, "sll %r4, 8, %r4" );
  repos.add( 0x952ab961, "sll %r10, 1, %r10" );
  repos.add( 0x8d29a852, "sll %r6, 18, %r6" );
  repos.add( 0x992b2a05, "sll %r12, 5, %r12" );
  repos.add( 0x992b28ae, "sll %r12, 14, %r12" );
  repos.add( 0x8728e3bf, "sll %r3, 31, %r3" );
  repos.add( 0x8b2938a0, "sll %r4, 0, %r5" );
  repos.add( 0x8b2aac40, "sll %r10, 0, %r5" );
  repos.add( 0x8b2933a8, "sll %r4, 8, %r5" );
  repos.add( 0x9729b8a1, "sll %r6, 1, %r11" );
  repos.add( 0x892b6e66, "sll %r13, 6, %r4" );
  repos.add( 0x852ab04c, "sll %r10, 12, %r2" );
  repos.add( 0x9528fd1c, "sll %r3, 28, %r10" );
  repos.add( 0x9b2979b3, "sll %r5, 19, %r13" );
  repos.add( 0x992b791d, "sll %r13, 29, %r12" );
  repos.add( 0x8f297d3e, "sll %r5, 30, %r7" );
  repos.add( 0x9b2b303f, "sll %r12, 31, %r13" );
  repos.add( 0x972b2e7f, "sll %r12, 31, %r11" );
  repos.add( 0x88591a60, "smul %r4, %r0, %r4" );
  repos.add( 0x865b0ac0, "smul %r12, %r0, %r3" );
  repos.add( 0x94589f80, "smul %r2, %r0, %r10" );
  repos.add( 0x8e58ce83, "smul %r3, %r3, %r7" );
  repos.add( 0x8a589185, "smul %r2, %r5, %r5" );
  repos.add( 0x8c5a92c3, "smul %r10, %r3, %r6" );
  repos.add( 0x865b5f87, "smul %r13, %r7, %r3" );
  repos.add( 0x80d808e4, "smulcc %r0, %r4, %r0" );
  repos.add( 0x94da8ac0, "smulcc %r10, %r0, %r10" );
  repos.add( 0x80dacb0b, "smulcc %r11, %r11, %r0" );
  repos.add( 0x8cd99846, "smulcc %r6, %r6, %r6" );
  repos.add( 0x9ad801a7, "smulcc %r0, %r7, %r13" );
  repos.add( 0x94d81fe7, "smulcc %r0, %r7, %r10" );
  repos.add( 0x96d8dae0, "smulcc %r3, %r0, %r11" );
  repos.add( 0x88d8da80, "smulcc %r3, %r0, %r4" );
  repos.add( 0x8edb55ed, "smulcc %r13, %r13, %r7" );
  repos.add( 0x80da9125, "smulcc %r10, %r5, %r0" );
  repos.add( 0x80db1d4a, "smulcc %r12, %r10, %r0" );
  repos.add( 0x84db5a42, "smulcc %r13, %r2, %r2" );
  repos.add( 0x94da9e45, "smulcc %r10, %r5, %r10" );
  repos.add( 0x94d99e44, "smulcc %r6, %r4, %r10" );
  repos.add( 0x94db1c25, "smulcc %r12, %r5, %r10" );
  repos.add( 0x80d833d7, "smulcc %r0, -3113, %r0" );
  repos.add( 0x80d8211b, "smulcc %r0, 283, %r0" );
  repos.add( 0x96d820d6, "smulcc %r0, 214, %r11" );
  repos.add( 0x86d833a6, "smulcc %r0, -3162, %r3" );
  repos.add( 0x96daec21, "smulcc %r11, 3105, %r11" );
  repos.add( 0x80daea68, "smulcc %r11, 2664, %r0" );
  repos.add( 0x9adb6cc4, "smulcc %r13, 3268, %r13" );
  repos.add( 0x8ad968e6, "smulcc %r5, 2278, %r5" );
  repos.add( 0x94daaf31, "smulcc %r10, 3889, %r10" );
  repos.add( 0x80d97814, "smulcc %r5, -2028, %r0" );
  repos.add( 0x8cd9b158, "smulcc %r6, -3752, %r6" );
  repos.add( 0x96daf426, "smulcc %r11, -3034, %r11" );
  repos.add( 0x80d979c8, "smulcc %r5, -1592, %r0" );
  repos.add( 0x98db3a70, "smulcc %r12, -1424, %r12" );
  repos.add( 0x96daf14d, "smulcc %r11, -3763, %r11" );
  repos.add( 0x96dafb63, "smulcc %r11, -1181, %r11" );
  repos.add( 0x84db2012, "smulcc %r12, 18, %r2" );
  repos.add( 0x8cd8a5a2, "smulcc %r2, 1442, %r6" );
  repos.add( 0x8edb66d0, "smulcc %r13, 1744, %r7" );
  repos.add( 0x8ed9af84, "smulcc %r6, 3972, %r7" );
  repos.add( 0x84d8ee52, "smulcc %r3, 3666, %r2" );
  repos.add( 0x8ad9ed4b, "smulcc %r7, 3403, %r5" );
  repos.add( 0x98d9a95d, "smulcc %r6, 2397, %r12" );
  repos.add( 0x94db6dab, "smulcc %r13, 3499, %r10" );
  repos.add( 0x86db6edc, "smulcc %r13, 3804, %r3" );
  repos.add( 0x84db6bb7, "smulcc %r13, 2999, %r2" );
  repos.add( 0x8ad8ebe7, "smulcc %r3, 3047, %r5" );
  repos.add( 0x8cd966ff, "smulcc %r5, 1791, %r6" );
  repos.add( 0x8edaf100, "smulcc %r11, -3840, %r7" );
  repos.add( 0x96db7708, "smulcc %r13, -2296, %r11" );
  repos.add( 0x8adab930, "smulcc %r10, -1744, %r5" );
  repos.add( 0x94d93a07, "smulcc %r4, -1529, %r10" );
  repos.add( 0x8cd93b24, "smulcc %r4, -1244, %r6" );
  repos.add( 0x8adb72ec, "smulcc %r13, -3348, %r5" );
  repos.add( 0x86d97a0f, "smulcc %r5, -1521, %r3" );
  repos.add( 0x86d9fc3e, "smulcc %r7, -962, %r3" );
  repos.add( 0x8ad8f7cc, "smulcc %r3, -2100, %r5" );
  repos.add( 0x98dabb7a, "smulcc %r10, -1158, %r12" );
  repos.add( 0x8cdab5fd, "smulcc %r10, -2563, %r6" );
  repos.add( 0x8adabfd6, "smulcc %r10, -42, %r5" );
  repos.add( 0x8cd97ff7, "smulcc %r5, -9, %r6" );
  repos.add( 0x805832a1, "smul %r0, -3423, %r0" );
  repos.add( 0x8058f0a4, "smul %r3, -3932, %r0" );
  repos.add( 0x8059a932, "smul %r6, 2354, %r0" );
  repos.add( 0x8c58250c, "smul %r0, 1292, %r6" );
  repos.add( 0x8c583180, "smul %r0, -3712, %r6" );
  repos.add( 0x965ae9a8, "smul %r11, 2472, %r11" );
  repos.add( 0x8a596b72, "smul %r5, 2930, %r5" );
  repos.add( 0x965ae6d6, "smul %r11, 1750, %r11" );
  repos.add( 0x8c59b41a, "smul %r6, -3046, %r6" );
  repos.add( 0x965af491, "smul %r11, -2927, %r11" );
  repos.add( 0x8a5b6520, "smul %r13, 1312, %r5" );
  repos.add( 0x9a59ad40, "smul %r6, 3392, %r13" );
  repos.add( 0x9a592688, "smul %r4, 1672, %r13" );
  repos.add( 0x885aa878, "smul %r10, 2168, %r4" );
  repos.add( 0x8e58ed68, "smul %r3, 3432, %r7" );
  repos.add( 0x8e5b69d1, "smul %r13, 2513, %r7" );
  repos.add( 0x8858aee4, "smul %r2, 3812, %r4" );
  repos.add( 0x885b6b4e, "smul %r13, 2894, %r4" );
  repos.add( 0x985aad7a, "smul %r10, 3450, %r12" );
  repos.add( 0x845ae4f7, "smul %r11, 1271, %r2" );
  repos.add( 0x86592f9b, "smul %r4, 3995, %r3" );
  repos.add( 0x885aabe7, "smul %r10, 3047, %r4" );
  repos.add( 0x8e58ef6f, "smul %r3, 3951, %r7" );
  repos.add( 0x8e593428, "smul %r4, -3032, %r7" );
  repos.add( 0x885af40a, "smul %r11, -3062, %r4" );
  repos.add( 0x8a5b71a1, "smul %r13, -3679, %r5" );
  repos.add( 0x885af11c, "smul %r11, -3812, %r4" );
  repos.add( 0x8a59f994, "smul %r7, -1644, %r5" );
  repos.add( 0x8458fd09, "smul %r3, -759, %r2" );
  repos.add( 0x8458f9cc, "smul %r3, -1588, %r2" );
  repos.add( 0x985ab656, "smul %r10, -2474, %r12" );
  repos.add( 0x9459f27e, "smul %r7, -3458, %r10" );
  repos.add( 0x9858f5dc, "smul %r3, -2596, %r12" );
  repos.add( 0x8859727f, "smul %r5, -3457, %r4" );
  repos.add( 0x8a5b34ef, "smul %r12, -2833, %r5" );
  repos.add( 0x9459ffbc, "smul %r7, -68, %r10" );
  repos.add( 0x85380340, "sra %r0, %r0, %r2" );
  repos.add( 0x8f39dbe7, "sra %r7, %r7, %r7" );
  repos.add( 0x81391f8a, "sra %r4, %r10, %r0" );
  repos.add( 0x813b4146, "sra %r13, %r6, %r0" );
  repos.add( 0x9b380b42, "sra %r0, %r2, %r13" );
  repos.add( 0x8d380ba7, "sra %r0, %r7, %r6" );
  repos.add( 0x8b38d2c0, "sra %r3, %r0, %r5" );
  repos.add( 0x8d39cd20, "sra %r7, %r0, %r6" );
  repos.add( 0x8f399086, "sra %r6, %r6, %r7" );
  repos.add( 0x8b38de25, "sra %r3, %r5, %r5" );
  repos.add( 0x8939cfc4, "sra %r7, %r4, %r4" );
  repos.add( 0x89391eea, "sra %r4, %r10, %r4" );
  repos.add( 0x993b0906, "sra %r12, %r6, %r12" );
  repos.add( 0x85394883, "sra %r5, %r3, %r2" );
  repos.add( 0x8938d84c, "sra %r3, %r12, %r4" );
  repos.add( 0x81382e08, "sra %r0, 8, %r0" );
  repos.add( 0x8138a83b, "sra %r2, 27, %r0" );
  repos.add( 0x8138e772, "sra %r3, 18, %r0" );
  repos.add( 0x85382d51, "sra %r0, 17, %r2" );
  repos.add( 0x8b38230a, "sra %r0, 10, %r5" );
  repos.add( 0x8538bbe1, "sra %r2, 1, %r2" );
  repos.add( 0x993b3c8c, "sra %r12, 12, %r12" );
  repos.add( 0x9b3b6789, "sra %r13, 9, %r13" );
  repos.add( 0x8b396e15, "sra %r5, 21, %r5" );
  repos.add( 0x8538a955, "sra %r2, 21, %r2" );
  repos.add( 0x953aac1b, "sra %r10, 27, %r10" );
  repos.add( 0x993aa4c0, "sra %r10, 0, %r12" );
  repos.add( 0x853b38c0, "sra %r12, 0, %r2" );
  repos.add( 0x8f3af502, "sra %r11, 2, %r7" );
  repos.add( 0x8b3b3924, "sra %r12, 4, %r5" );
  repos.add( 0x8d38f746, "sra %r3, 6, %r6" );
  repos.add( 0x99396494, "sra %r5, 20, %r12" );
  repos.add( 0x8f38bc73, "sra %r2, 19, %r7" );
  repos.add( 0x8538eee7, "sra %r3, 7, %r2" );
  repos.add( 0x893aba97, "sra %r10, 23, %r4" );
  repos.add( 0x853b2f57, "sra %r12, 23, %r2" );
  repos.add( 0x8739229f, "sra %r4, 31, %r3" );
  repos.add( 0x8132dccb, "srl %r11, %r11, %r0" );
  repos.add( 0x813003eb, "srl %r0, %r11, %r0" );
  repos.add( 0x81335385, "srl %r13, %r5, %r0" );
  repos.add( 0x8132dd42, "srl %r11, %r2, %r0" );
  repos.add( 0x8931d620, "srl %r7, %r0, %r4" );
  repos.add( 0x8b3342c0, "srl %r13, %r0, %r5" );
  repos.add( 0x99311ea4, "srl %r4, %r4, %r12" );
  repos.add( 0x8933450d, "srl %r13, %r13, %r4" );
  repos.add( 0x973002ad, "srl %r0, %r13, %r11" );
  repos.add( 0x99331766, "srl %r12, %r6, %r12" );
  repos.add( 0x9930cd64, "srl %r3, %r4, %r12" );
  repos.add( 0x8d30daa7, "srl %r3, %r7, %r6" );
  repos.add( 0x813165ff, "srl %r5, 31, %r0" );
  repos.add( 0x8131677c, "srl %r5, 28, %r0" );
  repos.add( 0x85302118, "srl %r0, 24, %r2" );
  repos.add( 0x95302375, "srl %r0, 21, %r10" );
  repos.add( 0x9532b144, "srl %r10, 4, %r10" );
  repos.add( 0x8f31f42a, "srl %r7, 10, %r7" );
  repos.add( 0x9732eaee, "srl %r11, 14, %r11" );
  repos.add( 0x993336ba, "srl %r12, 26, %r12" );
  repos.add( 0x9b316910, "srl %r5, 16, %r13" );
  repos.add( 0x8730b741, "srl %r2, 1, %r3" );
  repos.add( 0x99316e69, "srl %r5, 9, %r12" );
  repos.add( 0x8b31b814, "srl %r6, 20, %r5" );
  repos.add( 0x9531fd96, "srl %r7, 22, %r10" );
  repos.add( 0x85333ddc, "srl %r12, 28, %r2" );
  repos.add( 0x8733397b, "srl %r12, 27, %r3" );
  repos.add( 0x9731ee97, "srl %r7, 23, %r11" );
  repos.add( 0x873136bf, "srl %r4, 31, %r3" );
  repos.add( 0xcc2191cd, "st %r6, [%r6 + %r13]" );
  repos.add( 0xce211987, "st %r7, [%r4 + %r7]" );
  repos.add( 0xc8200c26, "st %r4, [%r0 + %r6]" );
  repos.add( 0xc62158a4, "st %r3, [%r5 + %r4]" );
  repos.add( 0xc621c68d, "st %r3, [%r7 + %r13]" );
  repos.add( 0xc0280926, "stb %r0, [%r0 + %r6]" );
  repos.add( 0xcc290ac0, "stb %r6, [%r4 + %r0]" );
  repos.add( 0xd828c22d, "stb %r12, [%r3 + %r13]" );
  repos.add( 0xce28924c, "stb %r7, [%r2 + %r12]" );
  repos.add( 0xc0296084, "stb %r0, [%r5 + 0x84]" );
  repos.add( 0xce29ee02, "stb %r7, [%r7 + 0xe02]" );
  repos.add( 0xc028e8f0, "stb %r0, [%r3 + 0x8f0]" );
  repos.add( 0xc8292391, "stb %r4, [%r4 + 0x391]" );
  repos.add( 0xc02b2e54, "stb %r0, [%r12 + 0xe54]" );
  repos.add( 0xc028a2f8, "stb %r0, [%r2 + 0x2f8]" );
  repos.add( 0xc8292dfb, "stb %r4, [%r4 + 0xdfb]" );
  repos.add( 0xca296f5f, "stb %r5, [%r5 + 0xf5f]" );
  repos.add( 0xc028fc08, "stb %r0, [%r3 - 0x3f8]" );
  repos.add( 0xc0293532, "stb %r0, [%r4 - 0xace]" );
  repos.add( 0xc029bc58, "stb %r0, [%r6 - 0x3a8]" );
  repos.add( 0xca297945, "stb %r5, [%r5 - 0x6bb]" );
  repos.add( 0xd82b3163, "stb %r12, [%r12 - 0xe9d]" );
  repos.add( 0xc028f51d, "stb %r0, [%r3 - 0xae3]" );
  repos.add( 0xda2b7b61, "stb %r13, [%r13 - 0x49f]" );
  repos.add( 0xc02b3b6a, "stb %r0, [%r12 - 0x496]" );
  repos.add( 0xcc29bf79, "stb %r6, [%r6 - 0x87]" );
  repos.add( 0xd6292021, "stb %r11, [%r4 + 0x21]" );
  repos.add( 0xda28e10a, "stb %r13, [%r3 + 0x10a]" );
  repos.add( 0xca2b2017, "stb %r5, [%r12 + 0x17]" );
  repos.add( 0xd429a0f0, "stb %r10, [%r6 + 0xf0]" );
  repos.add( 0xd82aa9a2, "stb %r12, [%r10 + 0x9a2]" );
  repos.add( 0xda2aeb84, "stb %r13, [%r11 + 0xb84]" );
  repos.add( 0xda28e563, "stb %r13, [%r3 + 0x563]" );
  repos.add( 0xc629693c, "stb %r3, [%r5 + 0x93c]" );
  repos.add( 0xc629a3c7, "stb %r3, [%r6 + 0x3c7]" );
  repos.add( 0xc62924de, "stb %r3, [%r4 + 0x4de]" );
  repos.add( 0xc828e66f, "stb %r4, [%r3 + 0x66f]" );
  repos.add( 0xc62aaf56, "stb %r3, [%r10 + 0xf56]" );
  repos.add( 0xc828b440, "stb %r4, [%r2 - 0xbc0]" );
  repos.add( 0xcc28b504, "stb %r6, [%r2 - 0xafc]" );
  repos.add( 0xd4293c82, "stb %r10, [%r4 - 0x37e]" );
  repos.add( 0xc62b74a4, "stb %r3, [%r13 - 0xb5c]" );
  repos.add( 0xcc2b7a0d, "stb %r6, [%r13 - 0x5f3]" );
  repos.add( 0xcc29f9c2, "stb %r6, [%r7 - 0x63e]" );
  repos.add( 0xcc2977c4, "stb %r6, [%r5 - 0x83c]" );
  repos.add( 0xca29bf88, "stb %r5, [%r6 - 0x78]" );
  repos.add( 0xc828b3e3, "stb %r4, [%r2 - 0xc1d]" );
  repos.add( 0xca29fd87, "stb %r5, [%r7 - 0x279]" );
  repos.add( 0xda297bdc, "stb %r13, [%r5 - 0x424]" );
  repos.add( 0xd829f37e, "stb %r12, [%r7 - 0xc82]" );
  repos.add( 0xd42b76bf, "stb %r10, [%r13 - 0x941]" );
  repos.add( 0xda28fa7f, "stb %r13, [%r3 - 0x581]" );
  repos.add( 0xc62b7bfb, "stb %r3, [%r13 - 0x405]" );
  repos.add( 0xd438c5ab, "std %r10, [%r3 + %r11]" );
  repos.add( 0xce3907e7, "std %r6, [%r4 + %r7]" );
  repos.add( 0xc83b1b84, "std %r4, [%r12 + %r4]" );
  repos.add( 0xda38c02c, "std %r12, [%r3 + %r12]" );
  repos.add( 0xda3acc6a, "std %r12, [%r11 + %r10]" );
  repos.add( 0xce38c7a4, "std %r6, [%r3 + %r4]" );
  repos.add( 0xd43ae891, "std %r10, [%r11 + 0x891]" );
  repos.add( 0xda3b680d, "std %r12, [%r13 + 0x80d]" );
  repos.add( 0xce39edc6, "std %r6, [%r7 + 0xdc6]" );
  repos.add( 0xda3b66af, "std %r12, [%r13 + 0x6af]" );
  repos.add( 0xc638ed1f, "std %r2, [%r3 + 0xd1f]" );
  repos.add( 0xc438ebbb, "std %r2, [%r3 + 0xbbb]" );
  repos.add( 0xc839739c, "std %r4, [%r5 - 0xc64]" );
  repos.add( 0xd83b7373, "std %r12, [%r13 - 0xc8d]" );
  repos.add( 0xc638ffe7, "std %r2, [%r3 - 0x19]" );
  repos.add( 0xcc39a04d, "std %r6, [%r6 + 0x4d]" );
  repos.add( 0xc638a5a8, "std %r2, [%r2 + 0x5a8]" );
  repos.add( 0xc438a5c2, "std %r2, [%r2 + 0x5c2]" );
  repos.add( 0xc638aca9, "std %r2, [%r2 + 0xca9]" );
  repos.add( 0xc438a5f7, "std %r2, [%r2 + 0x5f7]" );
  repos.add( 0xce39b223, "std %r6, [%r6 - 0xddd]" );
  repos.add( 0xcc39b8ca, "std %r6, [%r6 - 0x736]" );
  repos.add( 0xc839352d, "std %r4, [%r4 - 0xad3]" );
  repos.add( 0xd43ab4ab, "std %r10, [%r10 - 0xb55]" );
  repos.add( 0xc83937a9, "std %r4, [%r4 - 0x857]" );
  repos.add( 0xca3934be, "std %r4, [%r4 - 0xb42]" );
  repos.add( 0xca38a600, "std %r4, [%r2 + 0x600]" );
  repos.add( 0xd639e840, "std %r10, [%r7 + 0x840]" );
  repos.add( 0xce392205, "std %r6, [%r4 + 0x205]" );
  repos.add( 0xd439a614, "std %r10, [%r6 + 0x614]" );
  repos.add( 0xc43aa0f0, "std %r2, [%r10 + 0xf0]" );
  repos.add( 0xcc3ae931, "std %r6, [%r11 + 0x931]" );
  repos.add( 0xd8392193, "std %r12, [%r4 + 0x193]" );
  repos.add( 0xc639649e, "std %r2, [%r5 + 0x49e]" );
  repos.add( 0xc838a31b, "std %r4, [%r2 + 0x31b]" );
  repos.add( 0xce3aab9e, "std %r6, [%r10 + 0xb9e]" );
  repos.add( 0xd43b6fe2, "std %r10, [%r13 + 0xfe2]" );
  repos.add( 0xc83aabf9, "std %r4, [%r10 + 0xbf9]" );
  repos.add( 0xd4392bdd, "std %r10, [%r4 + 0xbdd]" );
  repos.add( 0xc6393800, "std %r2, [%r4 - 0x800]" );
  repos.add( 0xc639b610, "std %r2, [%r6 - 0x9f0]" );
  repos.add( 0xca3ab2a0, "std %r4, [%r10 - 0xd60]" );
  repos.add( 0xd43b3183, "std %r10, [%r12 - 0xe7d]" );
  repos.add( 0xda3930ca, "std %r12, [%r4 - 0xf36]" );
  repos.add( 0xda3af5a2, "std %r12, [%r11 - 0xa5e]" );
  repos.add( 0xc839b2d2, "std %r4, [%r6 - 0xd2e]" );
  repos.add( 0xc439b2ab, "std %r2, [%r6 - 0xd55]" );
  repos.add( 0xca3b76e8, "std %r4, [%r13 - 0x918]" );
  repos.add( 0xcc3974bd, "std %r6, [%r5 - 0xb43]" );
  repos.add( 0xda393aa7, "std %r12, [%r4 - 0x559]" );
  repos.add( 0xce39766f, "std %r6, [%r5 - 0x991]" );
  repos.add( 0xda38b79d, "std %r12, [%r2 - 0x863]" );
  repos.add( 0xc630caa0, "sth %r3, [%r3 + %r0]" );
  repos.add( 0xca3119a5, "sth %r5, [%r4 + %r5]" );
  repos.add( 0xc0314dc4, "sth %r0, [%r5 + %r4]" );
  repos.add( 0xc030c4e2, "sth %r0, [%r3 + %r2]" );
  repos.add( 0xda310440, "sth %r13, [%r4 + %r0]" );
  repos.add( 0xca301987, "sth %r5, [%r0 + %r7]" );
  repos.add( 0xc431106c, "sth %r2, [%r4 + %r12]" );
  repos.add( 0xce32cac2, "sth %r7, [%r11 + %r2]" );
  repos.add( 0xd632e60c, "sth %r11, [%r11 + 0x60c]" );
  repos.add( 0xce31e4c8, "sth %r7, [%r7 + 0x4c8]" );
  repos.add( 0xc032e251, "sth %r0, [%r11 + 0x251]" );
  repos.add( 0xc83120f1, "sth %r4, [%r4 + 0xf1]" );
  repos.add( 0xc0332c70, "sth %r0, [%r12 + 0xc70]" );
  repos.add( 0xc032a0e3, "sth %r0, [%r10 + 0xe3]" );
  repos.add( 0xc032ea8e, "sth %r0, [%r11 + 0xa8e]" );
  repos.add( 0xd8332aa7, "sth %r12, [%r12 + 0xaa7]" );
  repos.add( 0xcc31ae8f, "sth %r6, [%r6 + 0xe8f]" );
  repos.add( 0xc430affe, "sth %r2, [%r2 + 0xffe]" );
  repos.add( 0xd432b10d, "sth %r10, [%r10 - 0xef3]" );
  repos.add( 0xc0317066, "sth %r0, [%r5 - 0xf9a]" );
  repos.add( 0xd632f34c, "sth %r11, [%r11 - 0xcb4]" );
  repos.add( 0xc03138d1, "sth %r0, [%r4 - 0x72f]" );
  repos.add( 0xc630fe25, "sth %r3, [%r3 - 0x1db]" );
  repos.add( 0xc630f1d5, "sth %r3, [%r3 - 0xe2b]" );
  repos.add( 0xd833365b, "sth %r12, [%r12 - 0x9a5]" );
  repos.add( 0xca31793d, "sth %r5, [%r5 - 0x6c3]" );
  repos.add( 0xc031ffe0, "sth %r0, [%r7 - 0x20]" );
  repos.add( 0xc030bb4e, "sth %r0, [%r2 - 0x4b2]" );
  repos.add( 0xda337c7e, "sth %r13, [%r13 - 0x382]" );
  repos.add( 0xca317fb2, "sth %r5, [%r5 - 0x4e]" );
  repos.add( 0xc0337e6d, "sth %r0, [%r13 - 0x193]" );
  repos.add( 0xc430b77e, "sth %r2, [%r2 - 0x882]" );
  repos.add( 0xce32a190, "sth %r7, [%r10 + 0x190]" );
  repos.add( 0xc432a424, "sth %r2, [%r10 + 0x424]" );
  repos.add( 0xc6332522, "sth %r3, [%r12 + 0x522]" );
  repos.add( 0xcc30e2c6, "sth %r6, [%r3 + 0x2c6]" );
  repos.add( 0xc830e878, "sth %r4, [%r3 + 0x878]" );
  repos.add( 0xd4332393, "sth %r10, [%r12 + 0x393]" );
  repos.add( 0xd8336a4e, "sth %r12, [%r13 + 0xa4e]" );
  repos.add( 0xce312676, "sth %r7, [%r4 + 0x676]" );
  repos.add( 0xce30ee4f, "sth %r7, [%r3 + 0xe4f]" );
  repos.add( 0xca32afab, "sth %r5, [%r10 + 0xfab]" );
  repos.add( 0xd8312eeb, "sth %r12, [%r4 + 0xeeb]" );
  repos.add( 0xca31e5ff, "sth %r5, [%r7 + 0x5ff]" );
  repos.add( 0xc831b300, "sth %r4, [%r6 - 0xd00]" );
  repos.add( 0xce31b842, "sth %r7, [%r6 - 0x7be]" );
  repos.add( 0xca31f10d, "sth %r5, [%r7 - 0xef3]" );
  repos.add( 0xc631f819, "sth %r3, [%r7 - 0x7e7]" );
  repos.add( 0xca31f499, "sth %r5, [%r7 - 0xb67]" );
  repos.add( 0xd830f598, "sth %r12, [%r3 - 0xa68]" );
  repos.add( 0xd631f9b4, "sth %r11, [%r7 - 0x64c]" );
  repos.add( 0xc831bb15, "sth %r4, [%r6 - 0x4eb]" );
  repos.add( 0xc6317772, "sth %r3, [%r5 - 0x88e]" );
  repos.add( 0xda317e9c, "sth %r13, [%r5 - 0x164]" );
  repos.add( 0xc8337cbb, "sth %r4, [%r13 - 0x345]" );
  repos.add( 0xd832ff5c, "sth %r12, [%r11 - 0xa4]" );
  repos.add( 0xce32f7cf, "sth %r7, [%r11 - 0x831]" );
  repos.add( 0xcc333fe6, "sth %r6, [%r12 - 0x1a]" );
  repos.add( 0xc022a240, "st %r0, [%r10 + 0x240]" );
  repos.add( 0xce21e4b0, "st %r7, [%r7 + 0x4b0]" );
  repos.add( 0xc620e285, "st %r3, [%r3 + 0x285]" );
  repos.add( 0xc0232912, "st %r0, [%r12 + 0x912]" );
  repos.add( 0xce21ee82, "st %r7, [%r7 + 0xe82]" );
  repos.add( 0xc02361c3, "st %r0, [%r13 + 0x1c3]" );
  repos.add( 0xc020e863, "st %r0, [%r3 + 0x863]" );
  repos.add( 0xc620e876, "st %r3, [%r3 + 0x876]" );
  repos.add( 0xc022e6e4, "st %r0, [%r11 + 0x6e4]" );
  repos.add( 0xc020ec87, "st %r0, [%r3 + 0xc87]" );
  repos.add( 0xca2167b4, "st %r5, [%r5 + 0x7b4]" );
  repos.add( 0xc8212f79, "st %r4, [%r4 + 0xf79]" );
  repos.add( 0xca217805, "st %r5, [%r5 - 0x7fb]" );
  repos.add( 0xc0213152, "st %r0, [%r4 - 0xeae]" );
  repos.add( 0xd622f435, "st %r11, [%r11 - 0xbcb]" );
  repos.add( 0xce21fec0, "st %r7, [%r7 - 0x140]" );
  repos.add( 0xc020ba51, "st %r0, [%r2 - 0x5af]" );
  repos.add( 0xc620f0de, "st %r3, [%r3 - 0xf22]" );
  repos.add( 0xc82137b0, "st %r4, [%r4 - 0x850]" );
  repos.add( 0xce21f99b, "st %r7, [%r7 - 0x665]" );
  repos.add( 0xd823392f, "st %r12, [%r12 - 0x6d1]" );
  repos.add( 0xd422bbdc, "st %r10, [%r10 - 0x424]" );
  repos.add( 0xc022f67e, "st %r0, [%r11 - 0x982]" );
  repos.add( 0xd422bebb, "st %r10, [%r10 - 0x145]" );
  repos.add( 0xce236102, "st %r7, [%r13 + 0x102]" );
  repos.add( 0xce232880, "st %r7, [%r12 + 0x880]" );
  repos.add( 0xd421e601, "st %r10, [%r7 + 0x601]" );
  repos.add( 0xce22a141, "st %r7, [%r10 + 0x141]" );
  repos.add( 0xc6212116, "st %r3, [%r4 + 0x116]" );
  repos.add( 0xc620a2a9, "st %r3, [%r2 + 0x2a9]" );
  repos.add( 0xc422af01, "st %r2, [%r10 + 0xf01]" );
  repos.add( 0xda20a273, "st %r13, [%r2 + 0x273]" );
  repos.add( 0xc822a0de, "st %r4, [%r10 + 0xde]" );
  repos.add( 0xca212d63, "st %r5, [%r4 + 0xd63]" );
  repos.add( 0xc42320df, "st %r2, [%r12 + 0xdf]" );
  repos.add( 0xca20af8d, "st %r5, [%r2 + 0xf8d]" );
  repos.add( 0xda21ef4e, "st %r13, [%r7 + 0xf4e]" );
  repos.add( 0xc621aef6, "st %r3, [%r6 + 0xef6]" );
  repos.add( 0xc421f424, "st %r2, [%r7 - 0xbdc]" );
  repos.add( 0xc6237710, "st %r3, [%r13 - 0x8f0]" );
  repos.add( 0xc820fa14, "st %r4, [%r3 - 0x5ec]" );
  repos.add( 0xd6233954, "st %r11, [%r12 - 0x6ac]" );
  repos.add( 0xc62370ec, "st %r3, [%r13 - 0xf14]" );
  repos.add( 0xce20b61f, "st %r7, [%r2 - 0x9e1]" );
  repos.add( 0xd4237d0f, "st %r10, [%r13 - 0x2f1]" );
  repos.add( 0xda20f5b7, "st %r13, [%r3 - 0xa49]" );
  repos.add( 0xcc21ffdc, "st %r6, [%r7 - 0x24]" );
  repos.add( 0x80214907, "sub %r5, %r7, %r0" );
  repos.add( 0x8020880d, "sub %r2, %r13, %r0" );
  repos.add( 0x8e23160c, "sub %r12, %r12, %r7" );
  repos.add( 0x982103a0, "sub %r4, %r0, %r12" );
  repos.add( 0x94218800, "sub %r6, %r0, %r10" );
  repos.add( 0x8c201b23, "sub %r0, %r3, %r6" );
  repos.add( 0x98214fac, "sub %r5, %r12, %r12" );
  repos.add( 0x88231da5, "sub %r12, %r5, %r4" );
  repos.add( 0x842110c6, "sub %r4, %r6, %r2" );
  repos.add( 0x84a31a0c, "subcc %r12, %r12, %r2" );
  repos.add( 0x80a11066, "cmp %r4, %r6" );
  repos.add( 0x80a29d42, "cmp %r10, %r2" );
  repos.add( 0x8ca28e66, "subcc %r10, %r6, %r6" );
  repos.add( 0x88a34380, "subcc %r13, %r0, %r4" );
  repos.add( 0x9aa2d2a0, "subcc %r11, %r0, %r13" );
  repos.add( 0x88a2cea2, "subcc %r11, %r2, %r4" );
  repos.add( 0x8aa299a6, "subcc %r10, %r6, %r5" );
  repos.add( 0x80a02240, "cmp %r0, 576" );
  repos.add( 0x8aa03df6, "subcc %r0, -522, %r5" );
  repos.add( 0x88a03f67, "subcc %r0, -153, %r4" );
  repos.add( 0x94a03c6f, "subcc %r0, -913, %r10" );
  repos.add( 0x88a03b2e, "subcc %r0, -1234, %r4" );
  repos.add( 0x8ea035b3, "subcc %r0, -2637, %r7" );
  repos.add( 0x86a0315e, "subcc %r0, -3746, %r3" );
  repos.add( 0x94a03e07, "subcc %r0, -505, %r10" );
  repos.add( 0x88a0297c, "subcc %r0, 2428, %r4" );
  repos.add( 0x86a023d2, "subcc %r0, 978, %r3" );
  repos.add( 0x98a02e15, "subcc %r0, 3605, %r12" );
  repos.add( 0x94a020da, "subcc %r0, 218, %r10" );
  repos.add( 0x98a020ca, "subcc %r0, 202, %r12" );
  repos.add( 0x80a1e281, "cmp %r7, 641" );
  repos.add( 0x8ca1a308, "subcc %r6, 776, %r6" );
  repos.add( 0x80a2a232, "cmp %r10, 562" );
  repos.add( 0x86a0e44a, "subcc %r3, 1098, %r3" );
  repos.add( 0x80a2ec0d, "cmp %r11, 3085" );
  repos.add( 0x84a0af12, "subcc %r2, 3858, %r2" );
  repos.add( 0x8aa165e4, "subcc %r5, 1508, %r5" );
  repos.add( 0x80a1eac7, "cmp %r7, 2759" );
  repos.add( 0x80a0e759, "cmp %r3, 1881" );
  repos.add( 0x80a2fc22, "cmp %r11, -990" );
  repos.add( 0x8aa176a4, "subcc %r5, -2396, %r5" );
  repos.add( 0x80a1f372, "cmp %r7, -3214" );
  repos.add( 0x8ea1ff84, "subcc %r7, -124, %r7" );
  repos.add( 0x8aa17ccc, "subcc %r5, -820, %r5" );
  repos.add( 0x80a2f4d7, "cmp %r11, -2857" );
  repos.add( 0x80a33b1b, "cmp %r12, -1253" );
  repos.add( 0x80a0ff63, "cmp %r3, -157" );
  repos.add( 0x8aa1778f, "subcc %r5, -2161, %r5" );
  repos.add( 0x80a37df6, "cmp %r13, -522" );
  repos.add( 0x8ea128a0, "subcc %r4, 2208, %r7" );
  repos.add( 0x86a1e884, "subcc %r7, 2180, %r3" );
  repos.add( 0x94a12921, "subcc %r4, 2337, %r10" );
  repos.add( 0x98a0a624, "subcc %r2, 1572, %r12" );
  repos.add( 0x84a1ab06, "subcc %r6, 2822, %r2" );
  repos.add( 0x8ca12d82, "subcc %r4, 3458, %r6" );
  repos.add( 0x88a1ed0d, "subcc %r7, 3341, %r4" );
  repos.add( 0x96a2ad64, "subcc %r10, 3428, %r11" );
  repos.add( 0x86a2ee55, "subcc %r11, 3669, %r3" );
  repos.add( 0x94a1aeb8, "subcc %r6, 3768, %r10" );
  repos.add( 0x86a0adea, "subcc %r2, 3562, %r3" );
  repos.add( 0x8aa125ed, "subcc %r4, 1517, %r5" );
  repos.add( 0x8ea169bf, "subcc %r5, 2495, %r7" );
  repos.add( 0x9aa0ad3f, "subcc %r2, 3391, %r13" );
  repos.add( 0x94a0efdb, "subcc %r3, 4059, %r10" );
  repos.add( 0x88a2ed7f, "subcc %r11, 3455, %r4" );
  repos.add( 0x84a36eff, "subcc %r13, 3839, %r2" );
  repos.add( 0x94a1b209, "subcc %r6, -3575, %r10" );
  repos.add( 0x8ea0b803, "subcc %r2, -2045, %r7" );
  repos.add( 0x8ca33392, "subcc %r12, -3182, %r6" );
  repos.add( 0x84a2f84e, "subcc %r11, -1970, %r2" );
  repos.add( 0x86a1bca9, "subcc %r6, -855, %r3" );
  repos.add( 0x88a0f29d, "subcc %r3, -3427, %r4" );
  repos.add( 0x86a0bf64, "subcc %r2, -156, %r3" );
  repos.add( 0x84a33ba5, "subcc %r12, -1115, %r2" );
  repos.add( 0x84a177cb, "subcc %r5, -2101, %r2" );
  repos.add( 0x8ca0f8df, "subcc %r3, -1825, %r6" );
  repos.add( 0x94a1fee7, "subcc %r7, -281, %r10" );
  repos.add( 0x8021bcee, "sub %r6, -786, %r0" );
  repos.add( 0x8020a856, "sub %r2, 2134, %r0" );
  repos.add( 0x8a203c53, "sub %r0, -941, %r5" );
  repos.add( 0x84203267, "sub %r0, -3481, %r2" );
  repos.add( 0x8e2039a1, "sub %r0, -1631, %r7" );
  repos.add( 0x88203b41, "sub %r0, -1215, %r4" );
  repos.add( 0x96202e49, "sub %r0, 3657, %r11" );
  repos.add( 0x98232440, "sub %r12, 1088, %r12" );
  repos.add( 0x8a2162d1, "sub %r5, 721, %r5" );
  repos.add( 0x9a23623a, "sub %r13, 570, %r13" );
  repos.add( 0x8e21ecc6, "sub %r7, 3270, %r7" );
  repos.add( 0x8420b964, "sub %r2, -1692, %r2" );
  repos.add( 0x8c21ba4c, "sub %r6, -1460, %r6" );
  repos.add( 0x8420b755, "sub %r2, -2219, %r2" );
  repos.add( 0x8e21fed4, "sub %r7, -300, %r7" );
  repos.add( 0x8a232a02, "sub %r12, 2562, %r5" );
  repos.add( 0x9822a079, "sub %r10, 121, %r12" );
  repos.add( 0x8c20ab0a, "sub %r2, 2826, %r6" );
  repos.add( 0x8c22ab4a, "sub %r10, 2890, %r6" );
  repos.add( 0x8e23646e, "sub %r13, 1134, %r7" );
  repos.add( 0x8e20ed8d, "sub %r3, 3469, %r7" );
  repos.add( 0x8a22e2fa, "sub %r11, 762, %r5" );
  repos.add( 0x8a236dd3, "sub %r13, 3539, %r5" );
  repos.add( 0x9a21a7ec, "sub %r6, 2028, %r13" );
  repos.add( 0x88236ffe, "sub %r13, 4094, %r4" );
  repos.add( 0x9420bd00, "sub %r2, -768, %r10" );
  repos.add( 0x88233a01, "sub %r12, -1535, %r4" );
  repos.add( 0x8622b0d1, "sub %r10, -3887, %r3" );
  repos.add( 0x8c21314a, "sub %r4, -3766, %r6" );
  repos.add( 0x84237523, "sub %r13, -2781, %r2" );
  repos.add( 0x8822f5e1, "sub %r11, -2591, %r4" );
  repos.add( 0x8822fcdc, "sub %r11, -804, %r4" );
  repos.add( 0x8c20feb8, "sub %r3, -328, %r6" );
  repos.add( 0x9a233b67, "sub %r12, -1177, %r13" );
  repos.add( 0x84237ff0, "sub %r13, -16, %r2" );
  repos.add( 0x8621fb3f, "sub %r7, -1217, %r3" );
  repos.add( 0x8a20f7fc, "sub %r3, -2052, %r5" );
  repos.add( 0x86233fe7, "sub %r12, -25, %r3" );
  repos.add( 0x8061428d, "subx %r5, %r13, %r0" );
  repos.add( 0x9860c003, "subx %r3, %r3, %r12" );
  repos.add( 0x8462950a, "subx %r10, %r10, %r2" );
  repos.add( 0x96611300, "subx %r4, %r0, %r11" );
  repos.add( 0x8c61808c, "subx %r6, %r12, %r6" );
  repos.add( 0x986018a3, "subx %r0, %r3, %r12" );
  repos.add( 0x8a61d625, "subx %r7, %r5, %r5" );
  repos.add( 0x8c6314a6, "subx %r12, %r6, %r6" );
  repos.add( 0x9861180a, "subx %r4, %r10, %r12" );
  repos.add( 0x986193cd, "subx %r6, %r13, %r12" );
  repos.add( 0x88e187c6, "subxcc %r6, %r6, %r4" );
  repos.add( 0x96e1da47, "subxcc %r7, %r7, %r11" );
  repos.add( 0x80e2dec3, "subxcc %r11, %r3, %r0" );
  repos.add( 0x80e14e87, "subxcc %r5, %r7, %r0" );
  repos.add( 0x9ae30dad, "subxcc %r12, %r13, %r13" );
  repos.add( 0x8ae148c7, "subxcc %r5, %r7, %r5" );
  repos.add( 0x9ae00c27, "subxcc %r0, %r7, %r13" );
  repos.add( 0x84e00de4, "subxcc %r0, %r4, %r2" );
  repos.add( 0x88e1496c, "subxcc %r5, %r12, %r4" );
  repos.add( 0x84e1096d, "subxcc %r4, %r13, %r2" );
  repos.add( 0x96e2e41c, "subxcc %r11, 1052, %r11" );
  repos.add( 0x9ae36035, "subxcc %r13, 53, %r13" );
  repos.add( 0x80e1e9b0, "subxcc %r7, 2480, %r0" );
  repos.add( 0x80e0a89e, "subxcc %r2, 2206, %r0" );
  repos.add( 0x80e0adc7, "subxcc %r2, 3527, %r0" );
  repos.add( 0x80e163fd, "subxcc %r5, 1021, %r0" );
  repos.add( 0x80e2f450, "subxcc %r11, -2992, %r0" );
  repos.add( 0x80e0f2d9, "subxcc %r3, -3367, %r0" );
  repos.add( 0x80e17b23, "subxcc %r5, -1245, %r0" );
  repos.add( 0x8ee1fa4e, "subxcc %r7, -1458, %r7" );
  repos.add( 0x9ae377a6, "subxcc %r13, -2138, %r13" );
  repos.add( 0x80e0fcfd, "subxcc %r3, -771, %r0" );
  repos.add( 0x80e0208e, "subxcc %r0, 142, %r0" );
  repos.add( 0x8ce0e006, "subxcc %r3, 6, %r6" );
  repos.add( 0x98e12b00, "subxcc %r4, 2816, %r12" );
  repos.add( 0x8ee324b0, "subxcc %r12, 1200, %r7" );
  repos.add( 0x8ee0a194, "subxcc %r2, 404, %r7" );
  repos.add( 0x8ce3692a, "subxcc %r13, 2346, %r6" );
  repos.add( 0x8ce16b38, "subxcc %r5, 2872, %r6" );
  repos.add( 0x84e32c87, "subxcc %r12, 3207, %r2" );
  repos.add( 0x88e3673c, "subxcc %r13, 1852, %r4" );
  repos.add( 0x84e1ea97, "subxcc %r7, 2711, %r2" );
  repos.add( 0x98e1637e, "subxcc %r5, 894, %r12" );
  repos.add( 0x8ae1edd3, "subxcc %r7, 3539, %r5" );
  repos.add( 0x88e2ecfb, "subxcc %r11, 3323, %r4" );
  repos.add( 0x86e0af3b, "subxcc %r2, 3899, %r3" );
  repos.add( 0x8ae32bef, "subxcc %r12, 3055, %r5" );
  repos.add( 0x8ee0f400, "subxcc %r3, -3072, %r7" );
  repos.add( 0x8ee1b013, "subxcc %r6, -4077, %r7" );
  repos.add( 0x88e370d4, "subxcc %r13, -3884, %r4" );
  repos.add( 0x94e1b485, "subxcc %r6, -2939, %r10" );
  repos.add( 0x8ce374d1, "subxcc %r13, -2863, %r6" );
  repos.add( 0x94e37169, "subxcc %r13, -3735, %r10" );
  repos.add( 0x8ae2f12f, "subxcc %r11, -3793, %r5" );
  repos.add( 0x84e37a36, "subxcc %r13, -1482, %r2" );
  repos.add( 0x98e2b9f1, "subxcc %r10, -1551, %r12" );
  repos.add( 0x8ce2f1ed, "subxcc %r11, -3603, %r6" );
  repos.add( 0x88e17b3b, "subxcc %r5, -1221, %r4" );
  repos.add( 0x86e2bcee, "subxcc %r10, -786, %r3" );
  repos.add( 0x96e17cef, "subxcc %r5, -785, %r11" );
  repos.add( 0x8ee2bedb, "subxcc %r10, -293, %r7" );
  repos.add( 0x98e0379f, "subxcc %r0, -2145, %r12" );
  repos.add( 0x94e03ab0, "subxcc %r0, -1360, %r10" );
  repos.add( 0x9ae035a8, "subxcc %r0, -2648, %r13" );
  repos.add( 0x98e038f3, "subxcc %r0, -1805, %r12" );
  repos.add( 0x8ce03aad, "subxcc %r0, -1363, %r6" );
  repos.add( 0x84e036a5, "subxcc %r0, -2395, %r2" );
  repos.add( 0x8ee03745, "subxcc %r0, -2235, %r7" );
  repos.add( 0x8ae0381d, "subxcc %r0, -2019, %r5" );
  repos.add( 0x8ae03414, "subxcc %r0, -3052, %r5" );
  repos.add( 0x9ae03084, "subxcc %r0, -3964, %r13" );
  repos.add( 0x8ae026f8, "subxcc %r0, 1784, %r5" );
  repos.add( 0x8ae029f9, "subxcc %r0, 2553, %r5" );
  repos.add( 0x98e024e9, "subxcc %r0, 1257, %r12" );
  repos.add( 0x8ce02c0c, "subxcc %r0, 3084, %r6" );
  repos.add( 0x8060232d, "subx %r0, 813, %r0" );
  repos.add( 0x80636133, "subx %r13, 307, %r0" );
  repos.add( 0x8061ea4e, "subx %r7, 2638, %r0" );
  repos.add( 0x886033da, "subx %r0, -3110, %r4" );
  repos.add( 0x8a6032ee, "subx %r0, -3346, %r5" );
  repos.add( 0x9a603a79, "subx %r0, -1415, %r13" );
  repos.add( 0x8e603b15, "subx %r0, -1259, %r7" );
  repos.add( 0x8e60318b, "subx %r0, -3701, %r7" );
  repos.add( 0x96602b76, "subx %r0, 2934, %r11" );
  repos.add( 0x84602b6d, "subx %r0, 2925, %r2" );
  repos.add( 0x9a6026f3, "subx %r0, 1779, %r13" );
  repos.add( 0x96602031, "subx %r0, 49, %r11" );
  repos.add( 0x8e61e8e2, "subx %r7, 2274, %r7" );
  repos.add( 0x9a63616d, "subx %r13, 365, %r13" );
  repos.add( 0x8e61f286, "subx %r7, -3450, %r7" );
  repos.add( 0x88613874, "subx %r4, -1932, %r4" );
  repos.add( 0x88613378, "subx %r4, -3208, %r4" );
  repos.add( 0x9662f4b7, "subx %r11, -2889, %r11" );
  repos.add( 0x9662ffa9, "subx %r11, -87, %r11" );
  repos.add( 0x8e62a300, "subx %r10, 768, %r7" );
  repos.add( 0x94616a00, "subx %r5, 2560, %r10" );
  repos.add( 0x8e60a940, "subx %r2, 2368, %r7" );
  repos.add( 0x8c60e170, "subx %r3, 368, %r6" );
  repos.add( 0x9660e70c, "subx %r3, 1804, %r11" );
  repos.add( 0x8e60ac8c, "subx %r2, 3212, %r7" );
  repos.add( 0x9862ad26, "subx %r10, 3366, %r12" );
  repos.add( 0x8a62e674, "subx %r11, 1652, %r5" );
  repos.add( 0x9660a8be, "subx %r2, 2238, %r11" );
  repos.add( 0x88632b9c, "subx %r12, 2972, %r4" );
  repos.add( 0x86612bd3, "subx %r4, 3027, %r3" );
  repos.add( 0x9862a7ab, "subx %r10, 1963, %r12" );
  repos.add( 0x8a632fc7, "subx %r12, 4039, %r5" );
  repos.add( 0x86616daf, "subx %r5, 3503, %r3" );
  repos.add( 0x8c636fbb, "subx %r13, 4027, %r6" );
  repos.add( 0x9a617482, "subx %r5, -2942, %r13" );
  repos.add( 0x8e61b448, "subx %r6, -3000, %r7" );
  repos.add( 0x9862f42c, "subx %r11, -3028, %r12" );
  repos.add( 0x96617213, "subx %r5, -3565, %r11" );
  repos.add( 0x9a613ea0, "subx %r4, -352, %r13" );
  repos.add( 0x9861f0f2, "subx %r7, -3854, %r12" );
  repos.add( 0x94613734, "subx %r4, -2252, %r10" );
  repos.add( 0x9661fdf8, "subx %r7, -520, %r11" );
  repos.add( 0x9860f7e6, "subx %r3, -2074, %r12" );
  repos.add( 0x8c62ff57, "subx %r11, -169, %r6" );
  repos.add( 0x86633fec, "subx %r12, -20, %r3" );
  repos.add( 0xc07a9a85, "swap [%r10 + %r5], %r0" );
  repos.add( 0xcc7b5260, "swap [%r13 + %r0], %r6" );
  repos.add( 0xd87a8e00, "swap [%r10 + %r0], %r12" );
  repos.add( 0xca794982, "swap [%r5 + %r2], %r5" );
  repos.add( 0xd4780bed, "swap [%r0 + %r13], %r10" );
  repos.add( 0xcc78166d, "swap [%r0 + %r13], %r6" );
  repos.add( 0xd479c164, "swap [%r7 + %r4], %r10" );
  repos.add( 0xce7a8b05, "swap [%r10 + %r5], %r7" );
  repos.add( 0xc07aa264, "swap [%r10 + 0x264], %r0" );
  repos.add( 0xc079af41, "swap [%r6 + 0xf41], %r0" );
  repos.add( 0xc079f4c8, "swap [%r7 - 0xb38], %r0" );
  repos.add( 0xc07b7262, "swap [%r13 - 0xd9e], %r0" );
  repos.add( 0xc07b7c2c, "swap [%r13 - 0x3d4], %r0" );
  repos.add( 0xc07ab6ab, "swap [%r10 - 0x955], %r0" );
  repos.add( 0xc079f3c7, "swap [%r7 - 0xc39], %r0" );
  repos.add( 0xc078fbdb, "swap [%r3 - 0x425], %r0" );
  repos.add( 0xc678e0a4, "swap [%r3 + 0xa4], %r3" );
  repos.add( 0xce79e962, "swap [%r7 + 0x962], %r7" );
  repos.add( 0xd87b2d43, "swap [%r12 + 0xd43], %r12" );
  repos.add( 0xcc79aea5, "swap [%r6 + 0xea5], %r6" );
  repos.add( 0xc478ac1f, "swap [%r2 + 0xc1f], %r2" );
  repos.add( 0xc879330c, "swap [%r4 - 0xcf4], %r4" );
  repos.add( 0xc8793491, "swap [%r4 - 0xb6f], %r4" );
  repos.add( 0xcc79b097, "swap [%r6 - 0xf69], %r6" );
  repos.add( 0xcc79b8d4, "swap [%r6 - 0x72c], %r6" );
  repos.add( 0xc678f8b3, "swap [%r3 - 0x74d], %r3" );
  repos.add( 0xc678fd74, "swap [%r3 - 0x28c], %r3" );
  repos.add( 0xda7b7b6d, "swap [%r13 - 0x493], %r13" );
  repos.add( 0xc878aa40, "swap [%r2 + 0xa40], %r4" );
  repos.add( 0xda7aa424, "swap [%r10 + 0x424], %r13" );
  repos.add( 0xd8796780, "swap [%r5 + 0x780], %r12" );
  repos.add( 0xd678a18c, "swap [%r2 + 0x18c], %r11" );
  repos.add( 0xce78ea51, "swap [%r3 + 0xa51], %r7" );
  repos.add( 0xd87aa165, "swap [%r10 + 0x165], %r12" );
  repos.add( 0xce7aacb4, "swap [%r10 + 0xcb4], %r7" );
  repos.add( 0xda79207e, "swap [%r4 + 0x7e], %r13" );
  repos.add( 0xd87ae673, "swap [%r11 + 0x673], %r12" );
  repos.add( 0xda79ea3e, "swap [%r7 + 0xa3e], %r13" );
  repos.add( 0xc4796f5a, "swap [%r5 + 0xf5a], %r2" );
  repos.add( 0xce7b6fd6, "swap [%r13 + 0xfd6], %r7" );
  repos.add( 0xca79af7f, "swap [%r6 + 0xf7f], %r5" );
  repos.add( 0xc679f092, "swap [%r7 - 0xf6e], %r3" );
  repos.add( 0xc878f548, "swap [%r3 - 0xab8], %r4" );
  repos.add( 0xc6793231, "swap [%r4 - 0xdcf], %r3" );
  repos.add( 0xca7b3a8c, "swap [%r12 - 0x574], %r5" );
  repos.add( 0xca79bb05, "swap [%r6 - 0x4fb], %r5" );
  repos.add( 0xc678b7b0, "swap [%r2 - 0x850], %r3" );
  repos.add( 0xca78f63d, "swap [%r3 - 0x9c3], %r5" );
  repos.add( 0xda793979, "swap [%r4 - 0x687], %r13" );
  repos.add( 0xc67abcfa, "swap [%r10 - 0x306], %r3" );
  repos.add( 0xd879fd75, "swap [%r7 - 0x28b], %r12" );
  repos.add( 0xc478ff3b, "swap [%r3 - 0xc5], %r2" );
  repos.add( 0xca7afedb, "swap [%r11 - 0x125], %r5" );
  repos.add( 0x81000ceb, "taddcc %r0, %r11, %r0" );
  repos.add( 0x99018680, "taddcc %r6, %r0, %r12" );
  repos.add( 0x99008ec0, "taddcc %r2, %r0, %r12" );
  repos.add( 0x89028d0a, "taddcc %r10, %r10, %r4" );
  repos.add( 0x8102d307, "taddcc %r11, %r7, %r0" );
  repos.add( 0x8b02d8c5, "taddcc %r11, %r5, %r5" );
  repos.add( 0x990289cc, "taddcc %r10, %r12, %r12" );
  repos.add( 0x8d018327, "taddcc %r6, %r7, %r6" );
  repos.add( 0x9b000547, "taddcc %r0, %r7, %r13" );
  repos.add( 0x8d000f24, "taddcc %r0, %r4, %r6" );
  repos.add( 0x8d00c027, "taddcc %r3, %r7, %r6" );
  repos.add( 0x87019be5, "taddcc %r6, %r5, %r3" );
  repos.add( 0x81002392, "taddcc %r0, 914, %r0" );
  repos.add( 0x810034b6, "taddcc %r0, -2890, %r0" );
  repos.add( 0x8900291c, "taddcc %r0, 2332, %r4" );
  repos.add( 0x8b0032ec, "taddcc %r0, -3348, %r5" );
  repos.add( 0x87002b0e, "taddcc %r0, 2830, %r3" );
  repos.add( 0x870024e9, "taddcc %r0, 1257, %r3" );
  repos.add( 0x97002e95, "taddcc %r0, 3733, %r11" );
  repos.add( 0x8f002d59, "taddcc %r0, 3417, %r7" );
  repos.add( 0x8f01f7db, "taddcc %r7, -2085, %r7" );
  repos.add( 0x99033ced, "taddcc %r12, -787, %r12" );
  repos.add( 0x9b0375d5, "taddcc %r13, -2603, %r13" );
  repos.add( 0x8b017cae, "taddcc %r5, -850, %r5" );
  repos.add( 0x8f01f447, "taddcc %r7, -3001, %r7" );
  repos.add( 0x8700e5f7, "taddcc %r3, 1527, %r3" );
  repos.add( 0x8103258f, "taddcc %r12, 1423, %r0" );
  repos.add( 0x9702e96d, "taddcc %r11, 2413, %r11" );
  repos.add( 0x8100e396, "taddcc %r3, 918, %r0" );
  repos.add( 0x8101ea2e, "taddcc %r7, 2606, %r0" );
  repos.add( 0x8d01a9c0, "taddcc %r6, 2496, %r6" );
  repos.add( 0x8f01e150, "taddcc %r7, 336, %r7" );
  repos.add( 0x99013eef, "taddcc %r4, -273, %r12" );
  repos.add( 0x9b0136fe, "taddcc %r4, -2306, %r13" );
  repos.add( 0x8701bbe6, "taddcc %r6, -1050, %r3" );
  repos.add( 0x8b00fc77, "taddcc %r3, -905, %r5" );
  repos.add( 0x9502f2f1, "taddcc %r11, -3343, %r10" );
  repos.add( 0x8701328a, "taddcc %r4, -3446, %r3" );
  repos.add( 0x9701fa02, "taddcc %r7, -1534, %r11" );
  repos.add( 0x8501ef57, "taddcc %r7, 3927, %r2" );
  repos.add( 0x8900eafb, "taddcc %r3, 2811, %r4" );
  repos.add( 0x85036f66, "taddcc %r13, 3942, %r2" );
  repos.add( 0x8f00ae35, "taddcc %r2, 3637, %r7" );
  repos.add( 0x9701accb, "taddcc %r6, 3275, %r11" );
  repos.add( 0x8702ae32, "taddcc %r10, 3634, %r3" );
  repos.add( 0x8901e959, "taddcc %r7, 2393, %r4" );
  repos.add( 0x8501e1e4, "taddcc %r7, 484, %r2" );
  repos.add( 0x8901e98a, "taddcc %r7, 2442, %r4" );
  repos.add( 0x85012c48, "taddcc %r4, 3144, %r2" );
  repos.add( 0x8900e807, "taddcc %r3, 2055, %r4" );
  repos.add( 0x99012188, "taddcc %r4, 392, %r12" );
  repos.add( 0x9501a04c, "taddcc %r6, 76, %r10" );
  repos.add( 0x85102520, "taddcctv %r0, 1312, %r2" );
  repos.add( 0x8b1032f0, "taddcctv %r0, -3344, %r5" );
  repos.add( 0x8f103d70, "taddcctv %r0, -656, %r7" );
  repos.add( 0x81d4c464, "tn %r19 + %r4" );
  repos.add( 0x81d2c571, "tn %r11 + %r17" );
  repos.add( 0x81d138bd, "tn %r4 + -0x3d" );
  repos.add( 0xa1d6a630, "tn %r26 + -0x30" );
  repos.add( 0x890813e0, "tsubcc %r0, %r0, %r4" );
  repos.add( 0x990b1f40, "tsubcc %r12, %r0, %r12" );
  repos.add( 0x81089526, "tsubcc %r2, %r6, %r0" );
  repos.add( 0x810b5d05, "tsubcc %r13, %r5, %r0" );
  repos.add( 0x8b0b1f65, "tsubcc %r12, %r5, %r5" );
  repos.add( 0x8f09d5e6, "tsubcc %r7, %r6, %r7" );
  repos.add( 0x8909d8e0, "tsubcc %r7, %r0, %r4" );
  repos.add( 0x9b088820, "tsubcc %r2, %r0, %r13" );
  repos.add( 0x97081446, "tsubcc %r0, %r6, %r11" );
  repos.add( 0x89080cac, "tsubcc %r0, %r12, %r4" );
  repos.add( 0x9509d98c, "tsubcc %r7, %r12, %r10" );
  repos.add( 0x8b099603, "tsubcc %r6, %r3, %r5" );
  repos.add( 0x95082c9c, "tsubcc %r0, 3228, %r10" );
  repos.add( 0x8f08292c, "tsubcc %r0, 2348, %r7" );
  repos.add( 0x8708335a, "tsubcc %r0, -3238, %r3" );
  repos.add( 0x8d083c3b, "tsubcc %r0, -965, %r6" );
  repos.add( 0x9b083065, "tsubcc %r0, -3995, %r13" );
  repos.add( 0x8708279a, "tsubcc %r0, 1946, %r3" );
  repos.add( 0x97082eab, "tsubcc %r0, 3755, %r11" );
  repos.add( 0x9708251b, "tsubcc %r0, 1307, %r11" );
  repos.add( 0x8708e081, "tsubcc %r3, 129, %r3" );
  repos.add( 0x810ae07c, "tsubcc %r11, 124, %r0" );
  repos.add( 0x810b252c, "tsubcc %r12, 1324, %r0" );
  repos.add( 0x990b28ca, "tsubcc %r12, 2250, %r12" );
  repos.add( 0x8108acc3, "tsubcc %r2, 3267, %r0" );
  repos.add( 0x8109e69c, "tsubcc %r7, 1692, %r0" );
  repos.add( 0x970ae24f, "tsubcc %r11, 591, %r11" );
  repos.add( 0x81092bc6, "tsubcc %r4, 3014, %r0" );
  repos.add( 0x970ae39b, "tsubcc %r11, 923, %r11" );
  repos.add( 0x8d09b290, "tsubcc %r6, -3440, %r6" );
  repos.add( 0x8109fa44, "tsubcc %r7, -1468, %r0" );
  repos.add( 0x990b3491, "tsubcc %r12, -2927, %r12" );
  repos.add( 0x81097a96, "tsubcc %r5, -1386, %r0" );
  repos.add( 0x8108fa2b, "tsubcc %r3, -1493, %r0" );
  repos.add( 0x8108b65b, "tsubcc %r2, -2469, %r0" );
  repos.add( 0x8109fe73, "tsubcc %r7, -397, %r0" );
  repos.add( 0x990b3b73, "tsubcc %r12, -1165, %r12" );
  repos.add( 0x95092400, "tsubcc %r4, 1024, %r10" );
  repos.add( 0x9909a103, "tsubcc %r6, 259, %r12" );
  repos.add( 0x85092490, "tsubcc %r4, 1168, %r2" );
  repos.add( 0x8b0ae225, "tsubcc %r11, 549, %r5" );
  repos.add( 0x8b09aa21, "tsubcc %r6, 2593, %r5" );
  repos.add( 0x9509e709, "tsubcc %r7, 1801, %r10" );
  repos.add( 0x8d09e546, "tsubcc %r7, 1350, %r6" );
  repos.add( 0x9708e2d3, "tsubcc %r3, 723, %r11" );
  repos.add( 0x990aeb68, "tsubcc %r11, 2920, %r12" );
  repos.add( 0x9b0923d6, "tsubcc %r4, 982, %r13" );
  repos.add( 0x87092679, "tsubcc %r4, 1657, %r3" );
  repos.add( 0x8d09e57d, "tsubcc %r7, 1405, %r6" );
  repos.add( 0x8b09aae7, "tsubcc %r6, 2791, %r5" );
  repos.add( 0x9909afab, "tsubcc %r6, 4011, %r12" );
  repos.add( 0x8f09a1ff, "tsubcc %r6, 511, %r7" );
  repos.add( 0x8d097e02, "tsubcc %r5, -510, %r6" );
  repos.add( 0x850af668, "tsubcc %r11, -2456, %r2" );
  repos.add( 0x8908f0d5, "tsubcc %r3, -3883, %r4" );
  repos.add( 0x8f08f0f9, "tsubcc %r3, -3847, %r7" );
  repos.add( 0x8b0afe2e, "tsubcc %r11, -466, %r5" );
  repos.add( 0x9508b93e, "tsubcc %r2, -1730, %r10" );
  repos.add( 0x8b08fb5e, "tsubcc %r3, -1186, %r5" );
  repos.add( 0x8908b5dd, "tsubcc %r2, -2595, %r4" );
  repos.add( 0x8f0b777b, "tsubcc %r13, -2181, %r7" );
  repos.add( 0x8d0b3fe6, "tsubcc %r12, -26, %r6" );
  repos.add( 0x9b0b3dff, "tsubcc %r12, -513, %r13" );
  repos.add( 0x99183480, "tsubcctv %r0, -2944, %r12" );
  repos.add( 0x8ef1e164, "udivcc %r7, 356, %r7" );
  repos.add( 0x8af16446, "udivcc %r5, 1094, %r5" );
  repos.add( 0x84f0a0b9, "udivcc %r2, 185, %r2" );
  repos.add( 0x8ef1e6c2, "udivcc %r7, 1730, %r7" );
  repos.add( 0x94f2a596, "udivcc %r10, 1430, %r10" );
  repos.add( 0x8ef1eec8, "udivcc %r7, 3784, %r7" );
  repos.add( 0x98f33a0a, "udivcc %r12, -1526, %r12" );
  repos.add( 0x88f13ca0, "udivcc %r4, -864, %r4" );
  repos.add( 0x8cf1ba85, "udivcc %r6, -1403, %r6" );
  repos.add( 0x9af37e8a, "udivcc %r13, -374, %r13" );
  repos.add( 0x84f0b65a, "udivcc %r2, -2470, %r2" );
  repos.add( 0x8ef1fa97, "udivcc %r7, -1385, %r7" );
  repos.add( 0x88f133dc, "udivcc %r4, -3108, %r4" );
  repos.add( 0x80f02c14, "udivcc %r0, 3092, %r0" );
  repos.add( 0x96f0225b, "udivcc %r0, 603, %r11" );
  repos.add( 0x94f029f3, "udivcc %r0, 2547, %r10" );
  repos.add( 0x8af03896, "udivcc %r0, -1898, %r5" );
  repos.add( 0x96f0347c, "udivcc %r0, -2948, %r11" );
  repos.add( 0x84f03da2, "udivcc %r0, -606, %r2" );
  repos.add( 0x8af36a00, "udivcc %r13, 2560, %r5" );
  repos.add( 0x9af1e0e0, "udivcc %r7, 224, %r13" );
  repos.add( 0x94f12391, "udivcc %r4, 913, %r10" );
  repos.add( 0x84f1229a, "udivcc %r4, 666, %r2" );
  repos.add( 0x8af32378, "udivcc %r12, 888, %r5" );
  repos.add( 0x8ef0a09f, "udivcc %r2, 159, %r7" );
  repos.add( 0x84f0e6c7, "udivcc %r3, 1735, %r2" );
  repos.add( 0x8ef0a94f, "udivcc %r2, 2383, %r7" );
  repos.add( 0x94f0e9ee, "udivcc %r3, 2542, %r10" );
  repos.add( 0x86f327b5, "udivcc %r12, 1973, %r3" );
  repos.add( 0x80f2ed77, "udivcc %r11, 3447, %r0" );
  repos.add( 0x80f12fc7, "udivcc %r4, 4039, %r0" );
  repos.add( 0x8ef32ff9, "udivcc %r12, 4089, %r7" );
  repos.add( 0x8cf36ff3, "udivcc %r13, 4083, %r6" );
  repos.add( 0x8ef370c0, "udivcc %r13, -3904, %r7" );
  repos.add( 0x84f1f442, "udivcc %r7, -3006, %r2" );
  repos.add( 0x96f37442, "udivcc %r13, -3006, %r11" );
  repos.add( 0x96f2b0aa, "udivcc %r10, -3926, %r11" );
  repos.add( 0x8af2f449, "udivcc %r11, -2999, %r5" );
  repos.add( 0x8af13c94, "udivcc %r4, -876, %r5" );
  repos.add( 0x98f2b526, "udivcc %r10, -2778, %r12" );
  repos.add( 0x98f0f55a, "udivcc %r3, -2726, %r12" );
  repos.add( 0x98f1b2ba, "udivcc %r6, -3398, %r12" );
  repos.add( 0x80f0b5cd, "udivcc %r2, -2611, %r0" );
  repos.add( 0x94f138de, "udivcc %r4, -1826, %r10" );
  repos.add( 0x86f377ca, "udivcc %r13, -2102, %r3" );
  repos.add( 0x80f17fca, "udivcc %r5, -54, %r0" );
  repos.add( 0x96f13fcc, "udivcc %r4, -52, %r11" );
  repos.add( 0x86f1733f, "udivcc %r5, -3265, %r3" );
  repos.add( 0x86f0b5fd, "udivcc %r2, -2563, %r3" );
  repos.add( 0x8af2b5f7, "udivcc %r10, -2569, %r5" );
  repos.add( 0x88f1ffee, "udivcc %r7, -18, %r4" );
  repos.add( 0x86f2b3ff, "udivcc %r10, -3073, %r3" );
  repos.add( 0x80702873, "udiv %r0, 2163, %r0" );
  repos.add( 0x9873281a, "udiv %r12, 2074, %r12" );
  repos.add( 0x9472a1a3, "udiv %r10, 419, %r10" );
  repos.add( 0x8a716b26, "udiv %r5, 2854, %r5" );
  repos.add( 0x9a736d47, "udiv %r13, 3399, %r13" );
  repos.add( 0x9472a6d5, "udiv %r10, 1749, %r10" );
  repos.add( 0x9a7025a9, "udiv %r0, 1449, %r13" );
  repos.add( 0x84703d20, "udiv %r0, -736, %r2" );
  repos.add( 0x94703f90, "udiv %r0, -112, %r10" );
  repos.add( 0x8a703f24, "udiv %r0, -220, %r5" );
  repos.add( 0x8c703d6d, "udiv %r0, -659, %r6" );
  repos.add( 0x98703f1d, "udiv %r0, -227, %r12" );
  repos.add( 0x8071272b, "udiv %r4, 1835, %r0" );
  repos.add( 0x807362ea, "udiv %r13, 746, %r0" );
  repos.add( 0x9a73240d, "udiv %r12, 1037, %r13" );
  repos.add( 0x8a70e584, "udiv %r3, 1412, %r5" );
  repos.add( 0x8670a893, "udiv %r2, 2195, %r3" );
  repos.add( 0x9471e4d9, "udiv %r7, 1241, %r10" );
  repos.add( 0x8870af60, "udiv %r2, 3936, %r4" );
  repos.add( 0x887363cb, "udiv %r13, 971, %r4" );
  repos.add( 0x947127a3, "udiv %r4, 1955, %r10" );
  repos.add( 0x9672a5de, "udiv %r10, 1502, %r11" );
  repos.add( 0x9872aad7, "udiv %r10, 2775, %r12" );
  repos.add( 0x96712b9f, "udiv %r4, 2975, %r11" );
  repos.add( 0x8e71abee, "udiv %r6, 3054, %r7" );
  repos.add( 0x8c72efdd, "udiv %r11, 4061, %r6" );
  repos.add( 0x9470aebf, "udiv %r2, 3775, %r10" );
  repos.add( 0x8a70f980, "udiv %r3, -1664, %r5" );
  repos.add( 0x8e72b093, "udiv %r10, -3949, %r7" );
  repos.add( 0x9a71f2b0, "udiv %r7, -3408, %r13" );
  repos.add( 0x8470f32c, "udiv %r3, -3284, %r2" );
  repos.add( 0x94717ec0, "udiv %r5, -320, %r10" );
  repos.add( 0x8a73723e, "udiv %r13, -3522, %r5" );
  repos.add( 0x8c70b70d, "udiv %r2, -2291, %r6" );
  repos.add( 0x8472f85f, "udiv %r11, -1953, %r2" );
  repos.add( 0x8c71776a, "udiv %r5, -2198, %r6" );
  repos.add( 0x9671b97d, "udiv %r6, -1667, %r11" );
  repos.add( 0x9671fc9f, "udiv %r7, -865, %r11" );
  repos.add( 0x8471bdee, "udiv %r6, -530, %r2" );
  repos.add( 0x847133ef, "udiv %r4, -3089, %r2" );
  repos.add( 0x8871befb, "udiv %r6, -261, %r4" );
  repos.add( 0x96737f7f, "udiv %r13, -129, %r11" );
  repos.add( 0x805102e0, "umul %r4, %r0, %r0" );
  repos.add( 0x80518400, "umul %r6, %r0, %r0" );
  repos.add( 0x945293c0, "umul %r10, %r0, %r10" );
  repos.add( 0x9a501c2d, "umul %r0, %r13, %r13" );
  repos.add( 0x805143c3, "umul %r5, %r3, %r0" );
  repos.add( 0x805152e3, "umul %r5, %r3, %r0" );
  repos.add( 0x8852d92b, "umul %r11, %r11, %r4" );
  repos.add( 0x8c535966, "umul %r13, %r6, %r6" );
  repos.add( 0x88528ac0, "umul %r10, %r0, %r4" );
  repos.add( 0x86500c2d, "umul %r0, %r13, %r3" );
  repos.add( 0x8650132d, "umul %r0, %r13, %r3" );
  repos.add( 0x98531862, "umul %r12, %r2, %r12" );
  repos.add( 0x8c529563, "umul %r10, %r3, %r6" );
  repos.add( 0x94534da5, "umul %r13, %r5, %r10" );
  repos.add( 0x80d01fc7, "umulcc %r0, %r7, %r0" );
  repos.add( 0x98d01a2c, "umulcc %r0, %r12, %r12" );
  repos.add( 0x8ed14445, "umulcc %r5, %r5, %r7" );
  repos.add( 0x8ad09ce2, "umulcc %r2, %r2, %r5" );
  repos.add( 0x80d0c74c, "umulcc %r3, %r12, %r0" );
  repos.add( 0x94d1814a, "umulcc %r6, %r10, %r10" );
  repos.add( 0x8ad2d3c5, "umulcc %r11, %r5, %r5" );
  repos.add( 0x94d29582, "umulcc %r10, %r2, %r10" );
  repos.add( 0x84d119e0, "umulcc %r4, %r0, %r2" );
  repos.add( 0x88d28900, "umulcc %r10, %r0, %r4" );
  repos.add( 0x96d01f45, "umulcc %r0, %r5, %r11" );
  repos.add( 0x9ad0032c, "umulcc %r0, %r12, %r13" );
  repos.add( 0x8cd11fc3, "umulcc %r4, %r3, %r6" );
  repos.add( 0x84d1cb44, "umulcc %r7, %r4, %r2" );
  repos.add( 0x80d02024, "umulcc %r0, 36, %r0" );
  repos.add( 0x9ad03cd0, "umulcc %r0, -816, %r13" );
  repos.add( 0x86d023c2, "umulcc %r0, 962, %r3" );
  repos.add( 0x80d3600c, "umulcc %r13, 12, %r0" );
  repos.add( 0x80d0e1e0, "umulcc %r3, 480, %r0" );
  repos.add( 0x80d0e9c0, "umulcc %r3, 2496, %r0" );
  repos.add( 0x8cd1a624, "umulcc %r6, 1572, %r6" );
  repos.add( 0x80d0e31c, "umulcc %r3, 796, %r0" );
  repos.add( 0x80d0e6b1, "umulcc %r3, 1713, %r0" );
  repos.add( 0x94d2a4e5, "umulcc %r10, 1253, %r10" );
  repos.add( 0x96d2e3b4, "umulcc %r11, 948, %r11" );
  repos.add( 0x94d2a64f, "umulcc %r10, 1615, %r10" );
  repos.add( 0x80d0e6f5, "umulcc %r3, 1781, %r0" );
  repos.add( 0x86d0e3ed, "umulcc %r3, 1005, %r3" );
  repos.add( 0x94d2a66f, "umulcc %r10, 1647, %r10" );
  repos.add( 0x80d36bfd, "umulcc %r13, 3069, %r0" );
  repos.add( 0x80d2b105, "umulcc %r10, -3835, %r0" );
  repos.add( 0x80d0b217, "umulcc %r2, -3561, %r0" );
  repos.add( 0x96d2f932, "umulcc %r11, -1742, %r11" );
  repos.add( 0x94d2b5c4, "umulcc %r10, -2620, %r10" );
  repos.add( 0x80d2ff60, "umulcc %r11, -160, %r0" );
  repos.add( 0x88d1367b, "umulcc %r4, -2437, %r4" );
  repos.add( 0x8ed12238, "umulcc %r4, 568, %r7" );
  repos.add( 0x8ad32223, "umulcc %r12, 547, %r5" );
  repos.add( 0x88d1ea49, "umulcc %r7, 2633, %r4" );
  repos.add( 0x8ed2e92a, "umulcc %r11, 2346, %r7" );
  repos.add( 0x8ad1242f, "umulcc %r4, 1071, %r5" );
  repos.add( 0x98d0e44f, "umulcc %r3, 1103, %r12" );
  repos.add( 0x9ad0ad87, "umulcc %r2, 3463, %r13" );
  repos.add( 0x8cd125bc, "umulcc %r4, 1468, %r6" );
  repos.add( 0x88d2efa3, "umulcc %r11, 4003, %r4" );
  repos.add( 0x88d32b9d, "umulcc %r12, 2973, %r4" );
  repos.add( 0x9ad32de7, "umulcc %r12, 3559, %r13" );
  repos.add( 0x9ad16fcd, "umulcc %r5, 4045, %r13" );
  repos.add( 0x9ad2ecff, "umulcc %r11, 3327, %r13" );
  repos.add( 0x8cd0b044, "umulcc %r2, -4028, %r6" );
  repos.add( 0x98d1f809, "umulcc %r7, -2039, %r12" );
  repos.add( 0x94d33882, "umulcc %r12, -1918, %r10" );
  repos.add( 0x84d2b0a3, "umulcc %r10, -3933, %r2" );
  repos.add( 0x8ed336a0, "umulcc %r12, -2400, %r7" );
  repos.add( 0x96d1fd42, "umulcc %r7, -702, %r11" );
  repos.add( 0x9ad171d9, "umulcc %r5, -3623, %r13" );
  repos.add( 0x96d370db, "umulcc %r13, -3877, %r11" );
  repos.add( 0x9ad13f68, "umulcc %r4, -152, %r13" );
  repos.add( 0x8cd37763, "umulcc %r13, -2205, %r6" );
  repos.add( 0x86d0b6ee, "umulcc %r2, -2322, %r3" );
  repos.add( 0x98d1f5f9, "umulcc %r7, -2567, %r12" );
  repos.add( 0x84d2bedd, "umulcc %r10, -291, %r2" );
  repos.add( 0x8ed37f76, "umulcc %r13, -138, %r7" );
  repos.add( 0x805328b1, "umul %r12, 2225, %r0" );
  repos.add( 0x8051ff7d, "umul %r7, -131, %r0" );
  repos.add( 0x86503d53, "umul %r0, -685, %r3" );
  repos.add( 0x8e502a23, "umul %r0, 2595, %r7" );
  repos.add( 0x8e51e687, "umul %r7, 1671, %r7" );
  repos.add( 0x9452a8d3, "umul %r10, 2259, %r10" );
  repos.add( 0x9a53665f, "umul %r13, 1631, %r13" );
  repos.add( 0x8c51b150, "umul %r6, -3760, %r6" );
  repos.add( 0x9a53780d, "umul %r13, -2035, %r13" );
  repos.add( 0x8650f618, "umul %r3, -2536, %r3" );
  repos.add( 0x9a537d45, "umul %r13, -699, %r13" );
  repos.add( 0x98533cd2, "umul %r12, -814, %r12" );
  repos.add( 0x8650fd76, "umul %r3, -650, %r3" );
  repos.add( 0x9850a028, "umul %r2, 40, %r12" );
  repos.add( 0x9852aa08, "umul %r10, 2568, %r12" );
  repos.add( 0x8e50e910, "umul %r3, 2320, %r7" );
  repos.add( 0x8c536a44, "umul %r13, 2628, %r6" );
  repos.add( 0x965364e2, "umul %r13, 1250, %r11" );
  repos.add( 0x8a52e41d, "umul %r11, 1053, %r5" );
  repos.add( 0x9a5168e9, "umul %r5, 2281, %r13" );
  repos.add( 0x9451eb70, "umul %r7, 2928, %r10" );
  repos.add( 0x88532bd1, "umul %r12, 3025, %r4" );
  repos.add( 0x9a516753, "umul %r5, 1875, %r13" );
  repos.add( 0x86516dad, "umul %r5, 3501, %r3" );
  repos.add( 0x8a50ad2f, "umul %r2, 3375, %r5" );
  repos.add( 0x8451ef9f, "umul %r7, 3999, %r2" );
  repos.add( 0x9651b882, "umul %r6, -1918, %r11" );
  repos.add( 0x8850b203, "umul %r2, -3581, %r4" );
  repos.add( 0x8a51b4a8, "umul %r6, -2904, %r5" );
  repos.add( 0x8651f503, "umul %r7, -2813, %r3" );
  repos.add( 0x8e52b4a6, "umul %r10, -2906, %r7" );
  repos.add( 0x8c52b0e6, "umul %r10, -3866, %r6" );
  repos.add( 0x96517dd0, "umul %r5, -560, %r11" );
  repos.add( 0x9452fa95, "umul %r11, -1387, %r10" );
  repos.add( 0x9851bb36, "umul %r6, -1226, %r12" );
  repos.add( 0x9852ff3a, "umul %r11, -198, %r12" );
  repos.add( 0x8a50fbc7, "umul %r3, -1081, %r5" );
  repos.add( 0x8a50fb7d, "umul %r3, -1155, %r5" );
  repos.add( 0x9651faef, "umul %r7, -1297, %r11" );
  repos.add( 0x8c50fefd, "umul %r3, -259, %r6" );
  repos.add( 0x94513ffe, "umul %r4, -2, %r10" );
  repos.add( 0x81831760, "wr %r12, %r0, %y" );
  repos.add( 0x8180c663, "wr %r3, %r3, %y" );
  repos.add( 0x81835382, "wr %r13, %r2, %y" );
  repos.add( 0x8181486b, "wr %r5, %r11, %y" );
  repos.add( 0x81802195, "wr %r0, 405, %y" );
  repos.add( 0x8180300d, "wr %r0, -4083, %y" );
  repos.add( 0x81837160, "wr %r13, -3744, %y" );
  repos.add( 0x81833a6b, "wr %r12, -1429, %y" );
  repos.add( 0x8038cae3, "xnor %r3, %r3, %r0" );
  repos.add( 0x80389c2b, "xnor %r2, %r11, %r0" );
  repos.add( 0x9639d5c7, "xnor %r7, %r7, %r11" );
  repos.add( 0x8e3b070c, "xnor %r12, %r12, %r7" );
  repos.add( 0x8638dda7, "xnor %r3, %r7, %r3" );
  repos.add( 0x8e39c16a, "xnor %r7, %r10, %r7" );
  repos.add( 0x8c381bad, "xnor %r0, %r13, %r6" );
  repos.add( 0x8a398985, "xnor %r6, %r5, %r5" );
  repos.add( 0x96394c2b, "xnor %r5, %r11, %r11" );
  repos.add( 0x9a3ac8a5, "xnor %r11, %r5, %r13" );
  repos.add( 0x8c3890c4, "xnor %r2, %r4, %r6" );
  repos.add( 0x86b8c463, "xnorcc %r3, %r3, %r3" );
  repos.add( 0x96b8082b, "xnorcc %r0, %r11, %r11" );
  repos.add( 0x86bb0f80, "xnorcc %r12, %r0, %r3" );
  repos.add( 0x9ab8c220, "xnorcc %r3, %r0, %r13" );
  repos.add( 0x88ba844a, "xnorcc %r10, %r10, %r4" );
  repos.add( 0x80bb0586, "xnorcc %r12, %r6, %r0" );
  repos.add( 0x88b903a2, "xnorcc %r4, %r2, %r4" );
  repos.add( 0x86bac323, "xnorcc %r11, %r3, %r3" );
  repos.add( 0x96b8140c, "xnorcc %r0, %r12, %r11" );
  repos.add( 0x84b81f23, "xnorcc %r0, %r3, %r2" );
  repos.add( 0x8ab9d98c, "xnorcc %r7, %r12, %r5" );
  repos.add( 0x8eb91a02, "xnorcc %r4, %r2, %r7" );
  repos.add( 0x88b83d93, "xnorcc %r0, -621, %r4" );
  repos.add( 0x9ab839e4, "xnorcc %r0, -1564, %r13" );
  repos.add( 0x94b83705, "xnorcc %r0, -2299, %r10" );
  repos.add( 0x8cb82f89, "xnorcc %r0, 3977, %r6" );
  repos.add( 0x98b82c8b, "xnorcc %r0, 3211, %r12" );
  repos.add( 0x88b93c73, "xnorcc %r4, -909, %r4" );
  repos.add( 0x86b8f61d, "xnorcc %r3, -2531, %r3" );
  repos.add( 0x86b8f818, "xnorcc %r3, -2024, %r3" );
  repos.add( 0x80bb213f, "xnorcc %r12, 319, %r0" );
  repos.add( 0x80b8adc5, "xnorcc %r2, 3525, %r0" );
  repos.add( 0x8eb9e34c, "xnorcc %r7, 844, %r7" );
  repos.add( 0x80b8e350, "xnorcc %r3, 848, %r0" );
  repos.add( 0x88b9244a, "xnorcc %r4, 1098, %r4" );
  repos.add( 0x98bb20ac, "xnorcc %r12, 172, %r12" );
  repos.add( 0x8cbaf7fd, "xnorcc %r11, -2051, %r6" );
  repos.add( 0x88b8fc7f, "xnorcc %r3, -897, %r4" );
  repos.add( 0x84bab3f7, "xnorcc %r10, -3081, %r2" );
  repos.add( 0x9ab9bd5e, "xnorcc %r6, -674, %r13" );
  repos.add( 0x8ab9f6e7, "xnorcc %r7, -2329, %r5" );
  repos.add( 0x98baf8db, "xnorcc %r11, -1829, %r12" );
  repos.add( 0x9ababda6, "xnorcc %r10, -602, %r13" );
  repos.add( 0x9ab932b6, "xnorcc %r4, -3402, %r13" );
  repos.add( 0x9abb35b1, "xnorcc %r12, -2639, %r13" );
  repos.add( 0x96bab549, "xnorcc %r10, -2743, %r11" );
  repos.add( 0x8ab9fda0, "xnorcc %r7, -608, %r5" );
  repos.add( 0x96bb701e, "xnorcc %r13, -4066, %r11" );
  repos.add( 0x86bab81a, "xnorcc %r10, -2022, %r3" );
  repos.add( 0x94b8f214, "xnorcc %r3, -3564, %r10" );
  repos.add( 0x88baf030, "xnorcc %r11, -4048, %r4" );
  repos.add( 0x9ab97402, "xnorcc %r5, -3070, %r13" );
  repos.add( 0x94b96fb3, "xnorcc %r5, 4019, %r10" );
  repos.add( 0x8eb8e1ef, "xnorcc %r3, 495, %r7" );
  repos.add( 0x9ab965b7, "xnorcc %r5, 1463, %r13" );
  repos.add( 0x8abae8bd, "xnorcc %r11, 2237, %r5" );
  repos.add( 0x8cb8ef68, "xnorcc %r3, 3944, %r6" );
  repos.add( 0x94bb6a53, "xnorcc %r13, 2643, %r10" );
  repos.add( 0x98bb632b, "xnorcc %r13, 811, %r12" );
  repos.add( 0x8abb6c83, "xnorcc %r13, 3203, %r5" );
  repos.add( 0x94bb690b, "xnorcc %r13, 2315, %r10" );
  repos.add( 0x86b9ac10, "xnorcc %r6, 3088, %r3" );
  repos.add( 0x803831b7, "xnor %r0, -3657, %r0" );
  repos.add( 0x8038f85b, "xnor %r3, -1957, %r0" );
  repos.add( 0x80393c4c, "xnor %r4, -948, %r0" );
  repos.add( 0x8a3823b7, "xnor %r0, 951, %r5" );
  repos.add( 0x8c38277c, "xnor %r0, 1916, %r6" );
  repos.add( 0x88382916, "xnor %r0, 2326, %r4" );
  repos.add( 0x94382c50, "xnor %r0, 3152, %r10" );
  repos.add( 0x8638f113, "xnor %r3, -3821, %r3" );
  repos.add( 0x88392f97, "xnor %r4, 3991, %r4" );
  repos.add( 0x8438afc3, "xnor %r2, 4035, %r2" );
  repos.add( 0x943aaf68, "xnor %r10, 3944, %r10" );
  repos.add( 0x8638eb62, "xnor %r3, 2914, %r3" );
  repos.add( 0x8e39e423, "xnor %r7, 1059, %r7" );
  repos.add( 0x8e39e886, "xnor %r7, 2182, %r7" );
  repos.add( 0x8a39bbbf, "xnor %r6, -1089, %r5" );
  repos.add( 0x84397fd6, "xnor %r5, -42, %r2" );
  repos.add( 0x8e38fbf8, "xnor %r3, -1032, %r7" );
  repos.add( 0x863b7dad, "xnor %r13, -595, %r3" );
  repos.add( 0x8c3b7d2d, "xnor %r13, -723, %r6" );
  repos.add( 0x9638f9cb, "xnor %r3, -1589, %r11" );
  repos.add( 0x9a3933e2, "xnor %r4, -3102, %r13" );
  repos.add( 0x8a3af175, "xnor %r11, -3723, %r5" );
  repos.add( 0x9638f3c0, "xnor %r3, -3136, %r11" );
  repos.add( 0x843ab425, "xnor %r10, -3035, %r2" );
  repos.add( 0x8c3b7c80, "xnor %r13, -896, %r6" );
  repos.add( 0x9638f301, "xnor %r3, -3327, %r11" );
  repos.add( 0x8c3aadbe, "xnor %r10, 3518, %r6" );
  repos.add( 0x8c39ebdd, "xnor %r7, 3037, %r6" );
  repos.add( 0x94396ebc, "xnor %r5, 3772, %r10" );
  repos.add( 0x8a3b6a5f, "xnor %r13, 2655, %r5" );
  repos.add( 0x9639e7e1, "xnor %r7, 2017, %r11" );
  repos.add( 0x883b619f, "xnor %r13, 415, %r4" );
  repos.add( 0x86396a59, "xnor %r5, 2649, %r3" );
  repos.add( 0x8c3b2d15, "xnor %r12, 3349, %r6" );
  repos.add( 0x9a39a4e4, "xnor %r6, 1252, %r13" );
  repos.add( 0x8c392325, "xnor %r4, 805, %r6" );
  repos.add( 0x8a392c82, "xnor %r4, 3202, %r5" );
  repos.add( 0x9439a481, "xnor %r6, 1153, %r10" );
  repos.add( 0x883ae608, "xnor %r11, 1544, %r4" );
  repos.add( 0x9638a202, "xnor %r2, 514, %r11" );
  repos.add( 0x8018106d, "xor %r0, %r13, %r0" );
  repos.add( 0x80195c40, "xor %r5, %r0, %r0" );
  repos.add( 0x941a9320, "xor %r10, %r0, %r10" );
  repos.add( 0x80199aca, "xor %r6, %r10, %r0" );
  repos.add( 0x801b1e02, "xor %r12, %r2, %r0" );
  repos.add( 0x8e1b110c, "xor %r12, %r12, %r7" );
  repos.add( 0x881a91ca, "xor %r10, %r10, %r4" );
  repos.add( 0x941a82ad, "xor %r10, %r13, %r10" );
  repos.add( 0x8c199067, "xor %r6, %r7, %r6" );
  repos.add( 0x88181eca, "xor %r0, %r10, %r4" );
  repos.add( 0x96181fac, "xor %r0, %r12, %r11" );
  repos.add( 0x8a1984a5, "xor %r6, %r5, %r5" );
  repos.add( 0x8c19d786, "xor %r7, %r6, %r6" );
  repos.add( 0x8e1b0785, "xor %r12, %r5, %r7" );
  repos.add( 0x981a9045, "xor %r10, %r5, %r12" );
  repos.add( 0x889b488d, "xorcc %r13, %r13, %r4" );
  repos.add( 0x8a99da27, "xorcc %r7, %r7, %r5" );
  repos.add( 0x9899d420, "xorcc %r7, %r0, %r12" );
  repos.add( 0x809b1c26, "xorcc %r12, %r6, %r0" );
  repos.add( 0x80990243, "xorcc %r4, %r3, %r0" );
  repos.add( 0x969ac945, "xorcc %r11, %r5, %r11" );
  repos.add( 0x9a9b5f65, "xorcc %r13, %r5, %r13" );
  repos.add( 0x9899864c, "xorcc %r6, %r12, %r12" );
  repos.add( 0x869b0823, "xorcc %r12, %r3, %r3" );
  repos.add( 0x94981ba4, "xorcc %r0, %r4, %r10" );
  repos.add( 0x8e981aaa, "xorcc %r0, %r10, %r7" );
  repos.add( 0x989952c3, "xorcc %r5, %r3, %r12" );
  repos.add( 0x869b0e66, "xorcc %r12, %r6, %r3" );
  repos.add( 0x809826b8, "xorcc %r0, 1720, %r0" );
  repos.add( 0x98982843, "xorcc %r0, 2115, %r12" );
  repos.add( 0x88982d12, "xorcc %r0, 3346, %r4" );
  repos.add( 0x94982333, "xorcc %r0, 819, %r10" );
  repos.add( 0x849825aa, "xorcc %r0, 1450, %r2" );
  repos.add( 0x889838af, "xorcc %r0, -1873, %r4" );
  repos.add( 0x8a9839b5, "xorcc %r0, -1611, %r5" );
  repos.add( 0x949aa098, "xorcc %r10, 152, %r10" );
  repos.add( 0x809924ca, "xorcc %r4, 1226, %r0" );
  repos.add( 0x8098e645, "xorcc %r3, 1605, %r0" );
  repos.add( 0x989b207c, "xorcc %r12, 124, %r12" );
  repos.add( 0x969ae03e, "xorcc %r11, 62, %r11" );
  repos.add( 0x809926a9, "xorcc %r4, 1705, %r0" );
  repos.add( 0x8098af48, "xorcc %r2, 3912, %r0" );
  repos.add( 0x8099a4fd, "xorcc %r6, 1277, %r0" );
  repos.add( 0x8a9967fd, "xorcc %r5, 2045, %r5" );
  repos.add( 0x80997658, "xorcc %r5, -2472, %r0" );
  repos.add( 0x889931a3, "xorcc %r4, -3677, %r4" );
  repos.add( 0x809afe32, "xorcc %r11, -462, %r0" );
  repos.add( 0x809b71e9, "xorcc %r13, -3607, %r0" );
  repos.add( 0x809b3a57, "xorcc %r12, -1449, %r0" );
  repos.add( 0x809937e4, "xorcc %r4, -2076, %r0" );
  repos.add( 0x8099bbba, "xorcc %r6, -1094, %r0" );
  repos.add( 0x9a98a004, "xorcc %r2, 4, %r13" );
  repos.add( 0x8698a840, "xorcc %r2, 2112, %r3" );
  repos.add( 0x8499ea01, "xorcc %r7, 2561, %r2" );
  repos.add( 0x9898a01a, "xorcc %r2, 26, %r12" );
  repos.add( 0x8c98a02e, "xorcc %r2, 46, %r6" );
  repos.add( 0x969960a9, "xorcc %r5, 169, %r11" );
  repos.add( 0x8a9aea58, "xorcc %r11, 2648, %r5" );
  repos.add( 0x8499a2d8, "xorcc %r6, 728, %r2" );
  repos.add( 0x869b6752, "xorcc %r13, 1874, %r3" );
  repos.add( 0x989aa99c, "xorcc %r10, 2460, %r12" );
  repos.add( 0x86996d65, "xorcc %r5, 3429, %r3" );
  repos.add( 0x8499ab99, "xorcc %r6, 2969, %r2" );
  repos.add( 0x949b69ed, "xorcc %r13, 2541, %r10" );
  repos.add( 0x9899aceb, "xorcc %r6, 3307, %r12" );
  repos.add( 0x8e98ef5d, "xorcc %r3, 3933, %r7" );
  repos.add( 0x8e9aa5fb, "xorcc %r10, 1531, %r7" );
  repos.add( 0x9498efbe, "xorcc %r3, 4030, %r10" );
  repos.add( 0x949aeffe, "xorcc %r11, 4094, %r10" );
  repos.add( 0x8a9b7881, "xorcc %r13, -1919, %r5" );
  repos.add( 0x8a993314, "xorcc %r4, -3308, %r5" );
  repos.add( 0x8699f606, "xorcc %r7, -2554, %r3" );
  repos.add( 0x8e9b3554, "xorcc %r12, -2732, %r7" );
  repos.add( 0x9a993847, "xorcc %r4, -1977, %r13" );
  repos.add( 0x9699b7c2, "xorcc %r6, -2110, %r11" );
  repos.add( 0x949b3476, "xorcc %r12, -2954, %r10" );
  repos.add( 0x8e9b75ae, "xorcc %r13, -2642, %r7" );
  repos.add( 0x9a99bd2e, "xorcc %r6, -722, %r13" );
  repos.add( 0x9a997e57, "xorcc %r5, -425, %r13" );
  repos.add( 0x949935b7, "xorcc %r4, -2633, %r10" );
  repos.add( 0x9698fbdb, "xorcc %r3, -1061, %r11" );
  repos.add( 0x969abfb6, "xorcc %r10, -74, %r11" );
  repos.add( 0x8698b5ff, "xorcc %r2, -2561, %r3" );
  repos.add( 0x801824eb, "xor %r0, 1259, %r0" );
  repos.add( 0x801ae611, "xor %r11, 1553, %r0" );
  repos.add( 0x8019aaca, "xor %r6, 2762, %r0" );
  repos.add( 0x8c1820a9, "xor %r0, 169, %r6" );
  repos.add( 0x98182815, "xor %r0, 2069, %r12" );
  repos.add( 0x88182247, "xor %r0, 583, %r4" );
  repos.add( 0x88182267, "xor %r0, 615, %r4" );
  repos.add( 0x8a183725, "xor %r0, -2267, %r5" );
  repos.add( 0x9a183e6e, "xor %r0, -402, %r13" );
  repos.add( 0x9a1b69ca, "xor %r13, 2506, %r13" );
  repos.add( 0x981b27e3, "xor %r12, 2019, %r12" );
  repos.add( 0x8c19b4a0, "xor %r6, -2912, %r6" );
  repos.add( 0x941ab981, "xor %r10, -1663, %r10" );
  repos.add( 0x8418b455, "xor %r2, -2987, %r2" );
  repos.add( 0x981b3709, "xor %r12, -2295, %r12" );
  repos.add( 0x981b3775, "xor %r12, -2187, %r12" );
  repos.add( 0x8c1b6482, "xor %r13, 1154, %r6" );
  repos.add( 0x9618e128, "xor %r3, 296, %r11" );
  repos.add( 0x861b214c, "xor %r12, 332, %r3" );
  repos.add( 0x8c196283, "xor %r5, 643, %r6" );
  repos.add( 0x9619a29a, "xor %r6, 666, %r11" );
  repos.add( 0x84196651, "xor %r5, 1617, %r2" );
  repos.add( 0x8e19ae46, "xor %r6, 3654, %r7" );
  repos.add( 0x96196c6a, "xor %r5, 3178, %r11" );
  repos.add( 0x94192bd1, "xor %r4, 3025, %r10" );
  repos.add( 0x8a1ae36e, "xor %r11, 878, %r5" );
  repos.add( 0x8819ab1f, "xor %r6, 2847, %r4" );
  repos.add( 0x8e19ab7a, "xor %r6, 2938, %r7" );
  repos.add( 0x861b6fae, "xor %r13, 4014, %r3" );
  repos.add( 0x8c1aabfc, "xor %r10, 3068, %r6" );
  repos.add( 0x8c19e6ff, "xor %r7, 1791, %r6" );
  repos.add( 0x8e19adef, "xor %r6, 3567, %r7" );
  repos.add( 0x9418f290, "xor %r3, -3440, %r10" );
  repos.add( 0x941b7a20, "xor %r13, -1504, %r10" );
  repos.add( 0x981abe10, "xor %r10, -496, %r12" );
  repos.add( 0x8419b468, "xor %r6, -2968, %r2" );
  repos.add( 0x8e18f0b5, "xor %r3, -3915, %r7" );
  repos.add( 0x8e19303e, "xor %r4, -4034, %r7" );
  repos.add( 0x861af1d5, "xor %r11, -3627, %r3" );
  repos.add( 0x98197b26, "xor %r5, -1242, %r12" );
  repos.add( 0x861977c9, "xor %r5, -2103, %r3" );
  repos.add( 0x9619365d, "xor %r4, -2467, %r11" );
  repos.add( 0x8c18bcd7, "xor %r2, -809, %r6" );
  repos.add( 0x841af3f3, "xor %r11, -3085, %r2" );
  repos.add( 0x8819f77e, "xor %r7, -2178, %r4" );
  repos.add( 0x8818f7bb, "xor %r3, -2117, %r4" );
  repos.add( 0x9819b3ff, "xor %r6, -3073, %r12" );
  repos.add( 0x9a1b33ff, "xor %r12, -3073, %r13" );
}
