package unisim-arm64sav
version 1.0.0
full_name 'UNISIM ARMv8 simulator validation tests generator'
author 'Yves Lhuillier <yves.lhuillier@cea.fr>'

use genisslib genisslib
import genisslib

use unisim_lib

import unisim/component/cxx/processor/arm/vmsav8
import unisim/component/cxx/processor/arm/regs64
import unisim/util/symbolic/vector
import unisim/util/symbolic
import unisim/util/sav
import unisim/util/endian
import unisim/util/random
import unisim/util/arithmetic
import unisim/util/inlining

import libc/inttypes
import sys/mman
import std/fstream
import std/iostream
import std/vector
import std/bitset
import std/set
import std/memory
import std/ostream
import std/cmath
import std/iosfwd
import std/cstdlib
import std/cassert

import m4/ax_cflags_warn_all

copy source isa header template data m4 prog

UNISIM_LIB_SIMULATOR_SOURCE_FILES="$(files source)"

UNISIM_LIB_SIMULATOR_ISA_FILES="$(files isa)"

UNISIM_LIB_SIMULATOR_HEADER_FILES="\
${UNISIM_LIB_SIMULATOR_ISA_FILES} \
$(files header) \
$(files template) \
"

UNISIM_LIB_SIMULATOR_M4_FILES="$(files m4)"

UNISIM_LIB_SIMULATOR_DATA_FILES="$(files data)"

UNISIM_SIMULATOR_TOP_ISA="arm64sav.isa"

UNISIM_SIMULATOR_SOURCE_FILES="\
main.cc \
test.cc \
scanner.cc \
scanner.ops.cc \
runner.cc \
runner.ops.cc \
"

UNISIM_SIMULATOR_HEADER_FILES="\
${UNISIM_SIMULATOR_TOP_ISA} \
test.hh \
scanner.hh \
runner.hh \
"

UNISIM_SIMULATOR_EXTRA_FILES="\
all.tests \
"

UNISIM_SIMULATOR_DATA_FILES="\
COPYING \
README \
INSTALL \
AUTHORS \
NEWS \
ChangeLog \
"

UNISIM_SIMULATOR_FILES="\
${UNISIM_SIMULATOR_SOURCE_FILES} \
${UNISIM_SIMULATOR_HEADER_FILES} \
${UNISIM_SIMULATOR_EXTRA_FILES} \
${UNISIM_SIMULATOR_DATA_FILES} \
"

dist_copy ${UNISIM_SIMULATOR_FILES}

# Simulator

output_configure_ac <(cat <<EOF
$(lines ac_common_header)
$(lines ac)
$(lines ac_common_footer)
EOF
)

output_makefile_am <(cat << EOF
$(lines am_common_header)

# Program
bin_PROGRAMS = $(package)-$(version)
$(am_package)_$(am_version)_SOURCES = ${UNISIM_SIMULATOR_SOURCE_FILES}
$(am_package)_$(am_version)_LDFLAGS = -static-libtool-libs
$(am_package)_$(am_version)_LDADD = lib$(package)-$(version).la

# Static Library
noinst_LTLIBRARIES = lib$(package)-$(version).la
lib$(am_package)_$(am_version)_la_SOURCES = ${UNISIM_LIB_SIMULATOR_SOURCE_FILES}
lib$(am_package)_$(am_version)_la_LDFLAGS = -static

noinst_HEADERS = ${UNISIM_LIB_SIMULATOR_HEADER_FILES} ${UNISIM_SIMULATOR_HEADER_FILES}
EXTRA_DIST = ${UNISIM_LIB_SIMULATOR_M4_FILES}
sharedir = \$(prefix)/share/$(package)-$(version)
dist_share_DATA = ${UNISIM_SIMULATOR_DATA_FILES}
nobase_dist_share_DATA = ${UNISIM_LIB_SIMULATOR_DATA_FILES}

BUILT_SOURCES=\
	\$(top_builddir)/arm64sav.hh\
	\$(top_builddir)/arm64sav.tcc

CLEANFILES=\
	\$(top_builddir)/arm64sav.hh\
	\$(top_builddir)/arm64sav.tcc

\$(top_builddir)/arm64sav.tcc: \$(top_builddir)/arm64sav.hh
\$(top_builddir)/arm64sav.hh: ${UNISIM_LIB_SIMULATOR_ISA_FILES} ${UNISIM_SIMULATOR_TOP_ISA}
	\$(PYTHON_BIN) \$(top_srcdir)/genisslib/genisslib.py -o \$(top_builddir)/arm64sav -w 8 -I \$(top_srcdir) \$(top_srcdir)/${UNISIM_SIMULATOR_TOP_ISA}

$(lines am)
EOF
)

build_configure
