package unisim-amd64emu
version 0.1.0
full_name 'UNISIM AMD64EMU C++ simulator'
author 'Yves Lhuillier <yves.lhuillier@cea.fr>'

import unisim/service/debug/inline_debugger
import unisim/service/debug/debugger
import unisim/service/debug/gdb_server
import unisim/service/interfaces/linux_os
import unisim/service/interfaces/memory_injection
import unisim/service/interfaces/memory
import unisim/service/interfaces/registers
import unisim/kernel/config/json
import unisim/kernel/logger/console
import unisim/component/cxx/processor/intel
import unisim/component/cxx/processor/intel/isa
import unisim/component/cxx/memory/sparse
import unisim/component/cxx/vector
import unisim/util/os/linux_os
import unisim/util/identifier
import unisim/util/debug
import unisim/util/trace

import libc/inttypes
import sys/utsname
import std/algorithm
import std/cctype
import std/cmath
import std/fstream
import std/iomanip
import std/iostream
import std/string

import m4/ax_cflags_warn_all

copy source header template data m4

UNISIM_LIB_SIMULATOR_SOURCE_FILES="$(files source)"

UNISIM_LIB_SIMULATOR_HEADER_FILES="$(files header) $(files template)"

UNISIM_LIB_SIMULATOR_M4_FILES="$(files m4)"

UNISIM_LIB_SIMULATOR_DATA_FILES="$(files data)"

UNISIM_SIMULATOR_SOURCE_FILES="\
arch.cc \
isa.cc \
linuxsystem.cc \
main.cc \
debugger.cc \
"

UNISIM_SIMULATOR_HEADER_FILES="\
arch.hh \
linuxsystem.hh \
debugger.hh \
"

UNISIM_SIMULATOR_DATA_FILES="\
COPYING \
NEWS \
ChangeLog \
"

UNISIM_SIMULATOR_FILES="\
${UNISIM_SIMULATOR_SOURCE_FILES} \
${UNISIM_SIMULATOR_HEADER_FILES} \
${UNISIM_SIMULATOR_DATA_FILES} \
"

dist_copy ${UNISIM_SIMULATOR_FILES}

# Top level

cat << EOF > "${DEST_DIR}/AUTHORS"
Yves Lhuillier <yves.lhuillier@cea.fr>
EOF

cat << EOF > "${DEST_DIR}/README"
This package contains:
  - amd64emu: an amd64/intel64 application level simulator (with LinuxOS emulation)

See INSTALL for installation instructions.
EOF

cat << EOF > "${DEST_DIR}/INSTALL"
INSTALLATION
------------

Requirements:
  - GNU C++ compiler
  - GNU C++ standard library
  - GNU bash
  - GNU make
  - GNU autoconf
  - GNU automake
  - GNU flex
  - GNU bison
  - boost (http://www.boost.org) development package (libboost-devel for Redhat/Mandriva, libboost-graph-dev for Debian/Ubuntu)
  - libxml2 (http://xmlsoft.org/libxml2) development package (libxml2-devel for Redhat/Mandriva, libxml2-dev for Debian/Ubuntu)
  - zlib (http://www.zlib.net) development package (zlib1g-devel for Redhat/Mandriva, zlib1g-devel for Debian/Ubuntu)
  - libedit (http://www.thrysoee.dk/editline) development package (libedit-devel for Redhat/Mandriva, libedit-dev for Debian/Ubuntu)

Building instructions:
  $ ./configure
  $ make

Installing (optional):
  $ make install
EOF

# Simulator

output_configure_ac <(cat <<EOF
$(lines ac_common_header)
$(lines ac)
$(lines ac_common_footer)
EOF
)

output_makefile_am <(cat << EOF
$(lines am_common_header)

# Program
bin_PROGRAMS = $(package)-$(version)
$(am_package)_$(am_version)_SOURCES = ${UNISIM_SIMULATOR_SOURCE_FILES}
$(am_package)_$(am_version)_LDFLAGS = -static-libtool-libs
$(am_package)_$(am_version)_LDADD = lib$(package)-$(version).la

# Static Library
noinst_LTLIBRARIES = lib$(package)-$(version).la
lib$(am_package)_$(am_version)_la_SOURCES = ${UNISIM_LIB_SIMULATOR_SOURCE_FILES}
lib$(am_package)_$(am_version)_la_LDFLAGS = -static

noinst_HEADERS = ${UNISIM_LIB_SIMULATOR_HEADER_FILES} ${UNISIM_SIMULATOR_HEADER_FILES}
EXTRA_DIST = ${UNISIM_LIB_SIMULATOR_M4_FILES}
sharedir = \$(prefix)/share/$(package)-$(version)
dist_share_DATA = ${UNISIM_SIMULATOR_DATA_FILES}
nobase_dist_share_DATA = ${UNISIM_LIB_SIMULATOR_DATA_FILES}

$(lines am)
EOF
)

build_configure

