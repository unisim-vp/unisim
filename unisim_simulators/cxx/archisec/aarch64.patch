42a43,44
> namespace aarch64 {
> 
484,513c486
< template <typename T>
< bool getu( T& res, char const* arg )
< {
<   char *end;
<   uint64_t tmp = strtoull( arg, &end, 0 );
<   if ((*arg == '\0') or (*end != '\0'))
<     return false;
<   res = tmp;
<   return true;
< }
< 
< char const* usage()
< {
<   return
<     "usage: <program> [<flags>] <address> <encoding>\n";
< }
< 
< int
< main( int argc, char** argv )
< {
<   if (argc < 3)
<     {
<       std::cerr << "Wrong number of CLI arguments.\n" << usage();
<       return 1;
<     }
<   
<   uint64_t addr;
<   uint32_t code;
< 
<   if (not getu(addr, argv[argc-2]) or not getu(code, argv[argc-1]))
---
> int decode ( uint64_t addr, uint32_t code, std::ostream& sink )
515,518d487
<       std::cerr << "<addr> and <code> should be, respectively, 64bits and 32bits numeric values.\n" << usage();
<       return 1;
<     }
< 
521,522c490
<   translator.translate( std::cout );
< 
---
>   translator.translate( sink );
523a492,493
> }
> 
