<?xml version="1.0" encoding="UTF-8"?>
<variables>
	<object name="capture-trigger-stub0">
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>cycle time</description>
		</variable>
		<variable name="nice-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>1 ms</value>
			<description>nice time</description>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Enable/Disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="capture-trigger-stub1">
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>cycle time</description>
		</variable>
		<variable name="nice-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>1 ms</value>
			<description>nice time</description>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Enable/Disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="cpu">
		<variable name="cpu-cycle-time">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>2500</value>
			<description>CPU cycle time in picoseconds</description>
		</variable>
		<variable name="voltage">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>1300</value>
			<description>CPU voltage in mV</description>
		</variable>
		<variable name="max-inst">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>18446744073709551615</value>
			<description>maximum number of instructions to simulate</description>
		</variable>
		<variable name="verbose-all">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>globally enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-setup">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity while setup</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-step">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when simulating an instruction</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-itlb">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing shadow instruction translation lookahead buffer</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-dtlb">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing shadow data translation lookahead buffer</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-utlb">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing unified translation lookahead buffer</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-dl1">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing L1 data cache</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-il1">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing L1 instruction cache</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-load">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when simulating a load</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-store">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when simulating a store</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-read-memory">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when reading memory for a debug purpose</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-write-memory">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when writing memory for a debug purpose</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-exception">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when handling exceptions</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-set-msr">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when setting MSR</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-tlbwe">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when executing a tlbwe instruction</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="enable-linux-printk-snooping">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable linux printk buffer snooping</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="trap-on-instruction-counter">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>18446744073709551615</value>
			<description>number of simulated instruction before traping</description>
		</variable>
		<variable name="enable-trap-on-exception">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable trap reporting on exception</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>bus cycle time</description>
		</variable>
		<variable name="ext-timer-cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>external timer cycle time</description>
		</variable>
		<variable name="nice-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>200 ns</value>
			<description>maximum time between synchonizations</description>
		</variable>
		<variable name="ipc">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>1</value>
			<description>targeted average instructions per second</description>
		</variable>
	</object>
	<object name="elf32-loader">
		<variable name="filename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>the ELF filename to load into memory</description>
		</variable>
		<variable name="base-addr">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x0</value>
			<description>if force-base-addr is true force base address for a unique program segment, otherwise ignored</description>
		</variable>
		<variable name="force-base-addr">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>if true force base address for a unique program segment</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="force-use-virtual-address">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>force use of virtual addresses instead of physical addresses</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dump-headers">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>dump headers while loading ELF file</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dwarf-to-html-output-directory">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>DWARF v2/v3 to HTML output directory</description>
		</variable>
		<variable name="parse-dwarf">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>true</value>
			<description>Enable/Disable parsing of DWARF debugging informations</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="intc">
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Enable/Disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>Cycle time</description>
		</variable>
	</object>
	<object name="memory">
		<variable name="org">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>0x0</value>
			<description>memory origin/base address</description>
		</variable>
		<variable name="bytesize">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>18446744073709551615</value>
			<description>memory size in bytes</description>
		</variable>
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>memory cycle time</description>
		</variable>
		<variable name="read-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>memory read latency</description>
		</variable>
		<variable name="write-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>0 s</value>
			<description>memory write latency</description>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="rom-loader">
		<variable name="filename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>boot.elf</value>
			<description>the ELF filename to load into memory</description>
		</variable>
		<variable name="base-addr">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x0</value>
			<description>if force-base-addr is true force base address for a unique program segment, otherwise ignored</description>
		</variable>
		<variable name="force-base-addr">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>if true force base address for a unique program segment</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="force-use-virtual-address">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>force use of virtual addresses instead of physical addresses</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dump-headers">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>dump headers while loading ELF file</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dwarf-to-html-output-directory">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>DWARF v2/v3 to HTML output directory</description>
		</variable>
		<variable name="parse-dwarf">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>true</value>
			<description>Enable/Disable parsing of DWARF debugging informations</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="router">
		<variable name="cycle_time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>Time to process a request/response by the router</description>
		</variable>
		<variable name="port_buffer_size">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x0</value>
			<description>Defines the size of the buffer for incomming requests in each of the input ports (0 = infinite)</description>
		</variable>
		<variable name="verbose_all">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Activate all the verbose options</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose_setup">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Display Object setup information</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose_tlm">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Display TLM blocking/non-blocking transactions information</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose_tlm_debug">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Display TLM debug transactions information</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose_memory_interface">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Display memory interface operations information</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="mapping_0">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x0&quot; range_end=&quot;0x3fffffff&quot; output_port=&quot;0&quot; translation=&quot;0x0&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_1">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x41200000&quot; range_end=&quot;0x4120ffff&quot; output_port=&quot;1&quot; translation=&quot;0x41200000&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_2">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x41210000&quot; range_end=&quot;0x83bfffff&quot; output_port=&quot;0&quot; translation=&quot;0x41210000&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_3">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x83c00000&quot; range_end=&quot;0x83c0ffff&quot; output_port=&quot;2&quot; translation=&quot;0x83c00000&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_4">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x83c10000&quot; range_end=&quot;0xffffffff&quot; output_port=&quot;0&quot; translation=&quot;0x83c10000&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
	</object>
	<object name="timer">
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Enable/Disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>5 ns</value>
			<description>Cycle time</description>
		</variable>
	</object>
	<variable name="authors">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>Gilles Mouchard &lt;gilles.mouchard@cea.fr&gt;, Daniel Gracia Pérez &lt;daniel.gracia-perez@cea.fr&gt;</value>
		<description>Authors</description>
	</variable>
	<variable name="copyright">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>Copyright (C) 2007-2011, Commissariat a l'Energie Atomique (CEA)</value>
		<description>Copyright</description>
	</variable>
	<variable name="description">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>UNISIM Virtex 5 FXT, full system PPC440 simulator with support of ELF32 binaries</value>
		<description>Description</description>
	</variable>
	<variable name="enable-gdb-server">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable GDB server instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-inline-debugger">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable inline debugger instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-press-enter-at-exit">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable pressing key enter at exit</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="estimate-power">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable power estimators instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="license">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>BSD (see file COPYING)</value>
		<description>License</description>
	</variable>
	<variable name="program-name">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>UNISIM Virtex 5 FXT</value>
		<description>Program name</description>
	</variable>
	<variable name="version">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>1.0beta2</value>
		<description>Version</description>
	</variable>
</variables>
