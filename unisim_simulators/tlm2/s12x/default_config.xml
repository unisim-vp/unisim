<?xml version="1.0" encoding="UTF-8"?>
<variables>
	<object name="ATD0">
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="base-address">
			<type>parameter</type>
			<data_type>unsigned 16-bit integer</data_type>
			<value>0x2c0</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xd2</value>
			<description></description>
		</variable>
		<variable name="vrl">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>0</value>
			<description></description>
		</variable>
		<variable name="vrh">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>5.12</value>
			<description></description>
		</variable>
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="use-atd-stub">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="vih">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>3.25</value>
			<description></description>
		</variable>
		<variable name="vil">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>1.75</value>
			<description></description>
		</variable>
		<variable name="Has-External-Trigger">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="ATD1">
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="base-address">
			<type>parameter</type>
			<data_type>unsigned 16-bit integer</data_type>
			<value>0x80</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xd0</value>
			<description></description>
		</variable>
		<variable name="vrl">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>0</value>
			<description></description>
		</variable>
		<variable name="vrh">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>5.12</value>
			<description></description>
		</variable>
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="use-atd-stub">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="vih">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>3.25</value>
			<description></description>
		</variable>
		<variable name="vil">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>1.75</value>
			<description></description>
		</variable>
		<variable name="Has-External-Trigger">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="CPU">
		<variable name="verbose-all">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-setup">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-step">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-dump-regs-start">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-dump-regs-end">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-exception">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="trace-enable">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="requires-memory-access-reporting">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="requires-finished-instruction-reporting">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="max-inst">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>18446744073709551615</value>
			<description></description>
		</variable>
		<variable name="nice-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>1 ms</value>
			<description></description>
		</variable>
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>0x3d090</value>
			<description></description>
		</variable>
		<variable name="enable-fine-timing">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-tlm-bus-synchronize">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-tlm-run-thread">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-tlm-commands">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="CRG">
		<variable name="oscillator-clock">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x1e848</value>
			<description></description>
		</variable>
		<variable name="pll-stabilization-delay">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>0.24</value>
			<description>Total PLL stabilization delay (acquisition + tracking). e.g. for Fosc = 4MHz and REFDV = #$00, SYNR = #$09 the acquisition_delay = 0.09 ms and tracking_delay = 0.16 ms</description>
		</variable>
		<variable name="param-self-clock-mode-clock">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x186a0</value>
			<description>Self Clock Mode frequency between 1MHz and 5.5 MHz (unit PS)</description>
		</variable>
		<variable name="base-address">
			<type>parameter</type>
			<data_type>unsigned 16-bit integer</data_type>
			<value>0x34</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset-rti">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xf0</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset-pll-lock">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xc6</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset-self-clock-mode">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xc4</value>
			<description></description>
		</variable>
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="ECT">
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="base-address">
			<type>parameter</type>
			<data_type>unsigned 16-bit integer</data_type>
			<value>0x40</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset-channel0">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xee</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset-overflow">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0xde</value>
			<description></description>
		</variable>
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="MMC">
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="mode">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x80</value>
			<description></description>
		</variable>
		<variable name="mmcctl1">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x5</value>
			<description></description>
		</variable>
		<variable name="address-encoding">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
	</object>
	<object name="PWM">
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="base-address">
			<type>parameter</type>
			<data_type>unsigned 16-bit integer</data_type>
			<value>0x300</value>
			<description></description>
		</variable>
		<variable name="interrupt-offset">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x8c</value>
			<description></description>
		</variable>
	</object>
	<object name="XINT">
		<variable name="debug-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="atd-pwm-stub">
		<variable name="trace-enable">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="stub-enabled">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="anx-stimulus-period">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>8e+07</value>
			<description></description>
		</variable>
		<variable name="pwm-fetch-period">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>1e+09</value>
			<description></description>
		</variable>
		<variable name="atd0-anx-stimulus-file">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>ATD.xml</value>
			<description></description>
		</variable>
		<variable name="atd0-anx-start-channel">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
		<variable name="atd0-anx-wrap-around-channel">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
		<variable name="atd1-anx-stimulus-file">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>ATD.xml</value>
			<description></description>
		</variable>
		<variable name="atd1-anx-start-channel">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
		<variable name="atd1-anx-wrap-around-channel">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
	</object>
	<object name="elf32-loader">
		<variable name="filename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>the ELF filename to load into memory</description>
		</variable>
		<variable name="base-addr">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>0x0</value>
			<description>if force-base-addr is true force base address for a unique program segment, otherwise ignored</description>
		</variable>
		<variable name="force-base-addr">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>if true force base address for a unique program segment</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="force-use-virtual-address">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>true</value>
			<description>force use of virtual addresses instead of physical addresses</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dump-headers">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>dump headers while loading ELF file</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dwarf-to-html-output-directory">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>DWARF v2/v3 to HTML output directory</description>
		</variable>
		<variable name="parse-dwarf">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>true</value>
			<description>Enable/Disable parsing of DWARF debugging informations</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="external-memory">
		<variable name="org">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>0x0</value>
			<description>memory origin/base address</description>
		</variable>
		<variable name="bytesize">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>8388608</value>
			<description>memory size in bytes</description>
		</variable>
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>250000 s</value>
			<description>memory cycle time</description>
		</variable>
		<variable name="read-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>0 s</value>
			<description>memory read latency</description>
		</variable>
		<variable name="write-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>0 s</value>
			<description>memory write latency</description>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="external_router">
		<variable name="cycle_time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>250000 s</value>
			<description>Time to process a request/response by the router</description>
		</variable>
		<variable name="port_buffer_size">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x0</value>
			<description>Defines the size of the buffer for incomming requests in each of the input ports (0 = infinite)</description>
		</variable>
		<variable name="mapping_0">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x800&quot; range_end=&quot;0x7fffff&quot; output_port=&quot;0&quot; translation=&quot;0x800&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
	</object>
	<object name="internal-memory">
		<variable name="org">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>0x0</value>
			<description>memory origin/base address</description>
		</variable>
		<variable name="bytesize">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>65536</value>
			<description>memory size in bytes</description>
		</variable>
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>250000 s</value>
			<description>memory cycle time</description>
		</variable>
		<variable name="read-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>0 s</value>
			<description>memory read latency</description>
		</variable>
		<variable name="write-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>0 s</value>
			<description>memory write latency</description>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="internal_router">
		<variable name="cycle_time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>250000 s</value>
			<description>Time to process a request/response by the router</description>
		</variable>
		<variable name="port_buffer_size">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x0</value>
			<description>Defines the size of the buffer for incomming requests in each of the input ports (0 = infinite)</description>
		</variable>
		<variable name="mapping_0">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x34&quot; range_end=&quot;0x40&quot; output_port=&quot;0&quot; translation=&quot;0x34&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_1">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x40&quot; range_end=&quot;0x7f&quot; output_port=&quot;1&quot; translation=&quot;0x40&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_2">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x80&quot; range_end=&quot;0xb0&quot; output_port=&quot;2&quot; translation=&quot;0x80&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_3">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x120&quot; range_end=&quot;0x130&quot; output_port=&quot;3&quot; translation=&quot;0x120&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_4">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x2c0&quot; range_end=&quot;0x2e0&quot; output_port=&quot;4&quot; translation=&quot;0x2c0&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_5">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x300&quot; range_end=&quot;0x328&quot; output_port=&quot;5&quot; translation=&quot;0x300&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="mapping_6">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x800&quot; range_end=&quot;0xffff&quot; output_port=&quot;6&quot; translation=&quot;0x800&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
	</object>
	<variable name="authors">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>Reda Nouacer &lt;reda.nouacer@cea.fr&gt;</value>
		<description>Authors</description>
	</variable>
	<variable name="copyright">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>Copyright (C) 2008-2010, Commissariat a l'Energie Atomique (CEA)</value>
		<description>Copyright</description>
	</variable>
	<variable name="description">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>UNISIM star12x, a Star12X System-on-Chip simulator with support of ELF32 binaries and s19 hex files, and targeted for automotive applications</value>
		<description>Description</description>
	</variable>
	<variable name="dump-formulas">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description></description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="dump-parameters">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description></description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="dump-statistics">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>true</value>
		<description></description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-gdb-server">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable GDB server instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-inline-debugger">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable inline debugger instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-pim-server">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable PIM server instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-press-enter-at-exit">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable pressing key enter at exit</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.file">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Keep logger output in a file</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.filename">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>logger_output.txt</value>
		<description>Filename to keep logger output (the option file must be activated)</description>
	</variable>
	<variable name="kernel_logger.std_err">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>true</value>
		<description>Show logger output through the standard error output</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.std_err_color">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Colorize logger output through the standard error output (only works if std_err is active)</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.std_out">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Show logger output through the standard output</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.std_out_color">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Colorize logger output through the standard output (only works if std_out is active)</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.xml_file">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>true</value>
		<description>Keep logger output in a file xml formatted</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.xml_file_gzipped">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>If the xml_file option is active, the output file will be compressed (a .gz extension will be automatically added to the xml_filename option</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.xml_filename">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>logger_output.xml</value>
		<description>Filename to keep logger xml output (the option xml_file must be activated)</description>
	</variable>
	<variable name="license">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>BSD (see file COPYING)</value>
		<description>License</description>
	</variable>
	<variable name="program-name">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>UNISIM star12x</value>
		<description>Program name</description>
	</variable>
	<variable name="schematic">
		<type>parameter</type>
		<data_type>string</data_type>
		<value></value>
		<description>path to simulator schematic</description>
	</variable>
	<variable name="version">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>1.0</value>
		<description>Version</description>
	</variable>
</variables>
