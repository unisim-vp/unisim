<?xml version="1.0" encoding="UTF-8"?>
<variables>
	<object name="RTBStub">
		<variable name="RTBStub.anx-stimulus-period-file">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>ATD.xml</value>
			<description></description>
		</variable>
		<variable name="RTBStub.anx-stimulus-period">
			<type>parameter</type>
			<data_type>clock_t</data_type>
			<value>80000000</value>
			<description></description>
		</variable>
	</object>
	<object name="ATD0">
		<variable name="ATD0.bus-cycle-time">
			<type>parameter</type>
			<data_type>long</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="ATD0.base-address">
			<type>parameter</type>
			<data_type>unsigned short</data_type>
			<value>0x2c0</value>
			<description></description>
		</variable>
		<variable name="ATD0.interrupt-offset">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xd2</value>
			<description></description>
		</variable>
		<variable name="ATD0.vrl">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>0.000000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD0.vrh">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>5.120000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD0.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description></description>
		</variable>
		<variable name="ATD0.vih">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>3.250000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD0.vil">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>1.750000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD0.Has-External-Trigger">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="ATD1">
		<variable name="ATD1.bus-cycle-time">
			<type>parameter</type>
			<data_type>long</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="ATD1.base-address">
			<type>parameter</type>
			<data_type>unsigned short</data_type>
			<value>0x80</value>
			<description></description>
		</variable>
		<variable name="ATD1.interrupt-offset">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xd0</value>
			<description></description>
		</variable>
		<variable name="ATD1.vrl">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>0.000000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD1.vrh">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>5.120000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD1.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description></description>
		</variable>
		<variable name="ATD1.vih">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>3.250000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD1.vil">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>1.750000e+00</value>
			<description></description>
		</variable>
		<variable name="ATD1.Has-External-Trigger">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="CPU">
		<variable name="CPU.trace-enable">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-all">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-setup">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-step">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-dump-regs-start">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-dump-regs-end">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-exception">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.requires-memory-access-reporting">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description></description>
		</variable>
		<variable name="CPU.requires-finished-instruction-reporting">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description></description>
		</variable>
		<variable name="CPU.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description></description>
		</variable>
		<variable name="CPU.max-inst">
			<type>parameter</type>
			<data_type>unsigned long long</data_type>
			<value>0xffffffffffffffff</value>
			<description></description>
		</variable>
		<variable name="CPU.nice-time">
			<type>parameter</type>
			<data_type>unsigned long long</data_type>
			<value>0xffffffffff</value>
			<description></description>
		</variable>
		<variable name="CPU.cpu-cycle-time">
			<type>parameter</type>
			<data_type>unsigned long long</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="CPU.bus-cycle-time">
			<type>parameter</type>
			<data_type>unsigned long long</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-tlm-bus-synchronize">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-tlm-run-thread">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="CPU.verbose-tlm-commands">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="CRG">
		<variable name="CRG.oscillator-clock">
			<type>parameter</type>
			<data_type>long</data_type>
			<value>125000</value>
			<description></description>
		</variable>
		<variable name="CRG.base-address">
			<type>parameter</type>
			<data_type>unsigned short</data_type>
			<value>0x34</value>
			<description></description>
		</variable>
		<variable name="CRG.interrupt-offset-rti">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xf0</value>
			<description></description>
		</variable>
		<variable name="CRG.interrupt-offset-pll-lock">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xc6</value>
			<description></description>
		</variable>
		<variable name="CRG.interrupt-offset-self-clock-mode">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xc4</value>
			<description></description>
		</variable>
		<variable name="CRG.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="ECT">
		<variable name="ECT.bus-cycle-time">
			<type>parameter</type>
			<data_type>long</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="ECT.base-address">
			<type>parameter</type>
			<data_type>unsigned short</data_type>
			<value>0x40</value>
			<description></description>
		</variable>
		<variable name="ECT.interrupt-offset-channel0">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xee</value>
			<description></description>
		</variable>
		<variable name="ECT.interrupt-offset-overflow">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0xde</value>
			<description></description>
		</variable>
		<variable name="ECT.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="external-memory">
		<variable name="external-memory.org">
			<type>parameter</type>
			<data_type>unsigned long long</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
		<variable name="external-memory.bytesize">
			<type>parameter</type>
			<data_type>unsigned int</data_type>
			<value>0x800000</value>
			<description></description>
		</variable>
		<variable name="external-memory.cycle-time">
			<type>parameter</type>
			<data_type>unsigned int</data_type>
			<value>250000</value>
			<description>memory cycle time in picoseconds</description>
		</variable>
		<variable name="external-memory.verbose">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="external_router">
		<variable name="external_router.cycle_time">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>250000</value>
			<description>Time to process a request/response by the router in SC_PS)</description>
		</variable>
		<variable name="external_router.port_buffer_size">
			<type>parameter</type>
			<data_type>unsigned int</data_type>
			<value>0x0</value>
			<description>Defines the size of the buffer for incomming requests in each of the input ports (0 = infinite)</description>
		</variable>
		<variable name="external_router.mapping_0">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x800&quot; range_end=&quot;0x7fffff&quot; output_port=&quot;0&quot; translation=&quot;800&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
	</object>
	<object name="internal-memory">
		<variable name="internal-memory.org">
			<type>parameter</type>
			<data_type>unsigned long long</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
		<variable name="internal-memory.bytesize">
			<type>parameter</type>
			<data_type>unsigned int</data_type>
			<value>0x10000</value>
			<description></description>
		</variable>
		<variable name="internal-memory.cycle-time">
			<type>parameter</type>
			<data_type>unsigned int</data_type>
			<value>250000</value>
			<description>memory cycle time in picoseconds</description>
		</variable>
		<variable name="internal-memory.verbose">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="internal_router">
		<variable name="internal_router.cycle_time">
			<type>parameter</type>
			<data_type>double</data_type>
			<value>250000</value>
			<description>Time to process a request/response by the router in SC_PS)</description>
		</variable>
		<variable name="internal_router.port_buffer_size">
			<type>parameter</type>
			<data_type>unsigned int</data_type>
			<value>0x0</value>
			<description>Defines the size of the buffer for incomming requests in each of the input ports (0 = infinite)</description>
		</variable>
		<variable name="internal_router.mapping_0">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x34&quot; range_end=&quot;0x40&quot; output_port=&quot;0&quot; translation=&quot;34&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="internal_router.mapping_1">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x40&quot; range_end=&quot;0x7f&quot; output_port=&quot;1&quot; translation=&quot;40&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="internal_router.mapping_2">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x80&quot; range_end=&quot;0xb0&quot; output_port=&quot;2&quot; translation=&quot;80&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="internal_router.mapping_3">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x120&quot; range_end=&quot;0x130&quot; output_port=&quot;3&quot; translation=&quot;120&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="internal_router.mapping_4">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x2c0&quot; range_end=&quot;0x2e0&quot; output_port=&quot;4&quot; translation=&quot;2c0&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="internal_router.mapping_5">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x300&quot; range_end=&quot;0x328&quot; output_port=&quot;5&quot; translation=&quot;300&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
		<variable name="internal_router.mapping_6">
			<type>parameter</type>
			<data_type>unisim::component::tlm2::interconnect::generic_router::Mapping</data_type>
			<value>range_start=&quot;0x800&quot; range_end=&quot;0xffff&quot; output_port=&quot;6&quot; translation=&quot;800&quot;</value>
			<description>Defined a mapping of the router with format &quot;[range_start]&quot;,&quot;[range_end]&quot;,&quot;[outport_index]&quot; where [range_start], [range_end] and [outport_index] are to be replaced with the initial address, end address (= range_start + range_size - 1) and the output port index respectively</description>
		</variable>
	</object>
	<object name="kernel_logger">
		<variable name="kernel_logger.std_err">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description>Show logger output through the standard error output</description>
		</variable>
		<variable name="kernel_logger.std_out">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description>Show logger output through the standard output</description>
		</variable>
		<variable name="kernel_logger.std_err_color">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description>Colorize logger output through the standard error output (only works if std_err is active)</description>
		</variable>
		<variable name="kernel_logger.std_out_color">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description>Colorize logger output through the standard output (only works if std_out is active)</description>
		</variable>
		<variable name="kernel_logger.file">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description>Keep logger output in a file</description>
		</variable>
		<variable name="kernel_logger.filename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>logger_output.txt</value>
			<description>Filename to keep logger output (the option file must be activated)</description>
		</variable>
		<variable name="kernel_logger.xml_file">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>true</value>
			<description>Keep logger output in a file xml formatted</description>
		</variable>
		<variable name="kernel_logger.xml_filename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>logger_output.xml</value>
			<description>Filename to keep logger xml output (the option xml_file must be activated)</description>
		</variable>
		<variable name="kernel_logger.xml_file_gzipped">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description>If the xml_file option is active, the output file will be compressed (a .gz extension will be automatically added to the xml_filename option</description>
		</variable>
	</object>
	<object name="MMC">
		<variable name="MMC.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
		<variable name="MMC.mode">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0x80</value>
			<description></description>
		</variable>
		<variable name="MMC.mmcctl1">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0x5</value>
			<description></description>
		</variable>
		<variable name="MMC.address-encoding">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0x0</value>
			<description></description>
		</variable>
	</object>
	<object name="PWM">
		<variable name="PWM.bus-cycle-time">
			<type>parameter</type>
			<data_type>long</data_type>
			<value>250000</value>
			<description></description>
		</variable>
		<variable name="PWM.base-address">
			<type>parameter</type>
			<data_type>unsigned short</data_type>
			<value>0x300</value>
			<description></description>
		</variable>
		<variable name="PWM.interrupt-offset">
			<type>parameter</type>
			<data_type>unsigned char</data_type>
			<value>0x8c</value>
			<description></description>
		</variable>
		<variable name="PWM.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
	<object name="XINT">
		<variable name="XINT.debug-enabled">
			<type>parameter</type>
			<data_type>bool</data_type>
			<value>false</value>
			<description></description>
		</variable>
	</object>
</variables>
