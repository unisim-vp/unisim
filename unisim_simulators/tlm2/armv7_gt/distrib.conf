package unisim-armv7_gt
version 0.8.0
full_name 'UNISIM ARMv7-GT C++ simulator'
author 'Yves Lhuillier <yves.lhuillier@cea.fr>'
author 'Gilles Mouchard <gilles.mouchard@cea.fr>'
author 'Reda Nouacer <reda.nouacer@cea.fr>'

use genisslib genisslib
import genisslib

use unisim_lib

import unisim/component/tlm2/processor/arm/cortex_a9
import unisim/component/tlm2/memory/ram
import unisim/component/tlm2/interconnect/generic_router
import unisim/service/time/sc_time
import unisim/service/time/host_time
import unisim/service/loader/multiformat_loader
import unisim/service/trap_handler
import unisim/service/debug/gdb_server
import unisim/service/debug/inline_debugger
import unisim/service/debug/debugger
import unisim/service/profiling/addr_profiler
import unisim/kernel
import unisim/util/likely

import m4/scml2
import m4/ax_cflags_warn_all

import libc/stdio
import libc/stdlib
import libc/inttypes
import std/cstdlib
import std/iostream
import std/list
import std/sstream
import std/stdexcept
import std/string

copy source isa header template data m4 prog

UNISIM_LIB_SIMULATOR_SOURCE_FILES="$(files source)"

UNISIM_LIB_SIMULATOR_ISA_THUMB_FILES="$(files isa:unisim/component/cxx/processor/arm/isa/thumb)"

UNISIM_LIB_SIMULATOR_ISA_ARM32_FILES="$(files isa:unisim/component/cxx/processor/arm/isa/arm32)"

UNISIM_LIB_SIMULATOR_HEADER_FILES="\
${UNISIM_LIB_SIMULATOR_ISA_THUMB_FILES} \
${UNISIM_LIB_SIMULATOR_ISA_ARM32_FILES} \
$(files header) \
$(files template) \
"

UNISIM_LIB_SIMULATOR_M4_FILES="$(files m4)"

UNISIM_LIB_SIMULATOR_DATA_FILES="$(files data)"

UNISIM_SIMULATOR_SOURCE_FILES="\
main.cc \
simulator.cc \
GenericTimer.cc \
"

UNISIM_SIMULATOR_HEADER_FILES="\
simulator.hh \
GenericTimer.hh \
"

UNISIM_SIMULATOR_DATA_FILES="\
COPYING \
NEWS \
ChangeLog \
AUTHORS \
README \
INSTALL \
"

UNISIM_SIMULATOR_FILES="\
${UNISIM_SIMULATOR_SOURCE_FILES} \
${UNISIM_SIMULATOR_HEADER_FILES} \
${UNISIM_SIMULATOR_DATA_FILES} \
"

dist_copy ${UNISIM_SIMULATOR_FILES}

# Simulator

output_configure_ac <(cat << EOF
$(lines ac_common_header)
$(lines ac)
AC_DEFINE([SIM_VERSION_MAJOR], [${SIM_VERSION_MAJOR}], [Version major number])
AC_DEFINE([SIM_VERSION_MINOR], [${SIM_VERSION_MINOR}], [Version minor number])
AC_DEFINE([SIM_VERSION_PATCH], [${SIM_VERSION_PATCH}], [Version patch number])
AC_DEFINE([SIM_VERSION], ["${SIM_VERSION}"], [Version])
AC_DEFINE([SIM_VERSION_CODENAME], ["${SIM_VERSION_CODENAME}"], [Version code name])
AC_DEFINE([SIM_AUTHOR], ["${SIM_AUTHOR}"], [Author])
AC_DEFINE([SIM_PROGRAM_NAME], ["${SIM_PROGRAM_NAME}"], [Program name])
AC_DEFINE([SIM_COPYRIGHT], ["${SIM_COPYRIGHT}"], [Copyright])
AC_DEFINE([SIM_LICENSE], ["${SIM_LICENSE}"], [License])
AC_DEFINE([SIM_DESCRIPTION], ["${SIM_DESCRIPTION}"], [Description])
AC_DEFINE([SIM_SCHEMATIC], ["${SIM_SCHEMATIC}"], [Schematic])
$(lines ac_common_footer)
EOF
)

output_makefile_am <(cat << EOF
$(lines am_common_header)

# Program
bin_PROGRAMS = $(package)-$(version)
$(am_package)_$(am_version)_SOURCES = ${UNISIM_SIMULATOR_SOURCE_FILES}
$(am_package)_$(am_version)_LDFLAGS = -static-libtool-libs
$(am_package)_$(am_version)_LDADD = lib$(package)-$(version).la

# Static Library
noinst_LTLIBRARIES = lib$(package)-$(version).la
lib$(am_package)_$(am_version)_la_SOURCES = ${UNISIM_LIB_SIMULATOR_SOURCE_FILES}
lib$(am_package)_$(am_version)_la_LDFLAGS = -static
nodist_lib$(am_package)_$(am_version)_la_SOURCES = $(files built_source)

noinst_HEADERS = ${UNISIM_LIB_SIMULATOR_HEADER_FILES} ${UNISIM_SIMULATOR_HEADER_FILES} $(files built_header)
EXTRA_DIST = ${UNISIM_LIB_SIMULATOR_M4_FILES}
sharedir = \$(prefix)/share/$(package)-$(version)
dist_share_DATA = ${UNISIM_SIMULATOR_DATA_FILES}
nobase_dist_share_DATA = ${UNISIM_LIB_SIMULATOR_DATA_FILES} ${UNISIM_SIMULATOR_DATA_FILES}

BUILT_SOURCES=$(files built)

CLEANFILES=$(files built)

$(lines am)
EOF
)

build_configure
