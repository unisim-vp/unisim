package unisim-can_testbench
version 0.1
full_name 'UNISIM CAN_TESTBENCH Standalone simulator'
author 'Gilles Mouchard <gilles.mouchard@cea.fr>'

import unisim/kernel/tlm2
import unisim/kernel/config/xml
import unisim/kernel/config/ini
import unisim/kernel/config/json
import unisim/kernel/logger/console
import unisim/kernel/logger/text_file
import unisim/kernel/logger/http
import unisim/kernel/logger/xml_file
import unisim/util/random
import unisim/service/time/host_time
import unisim/service/time/sc_time
import unisim/service/instrumenter
import unisim/service/http_server

import std/iostream
import std/queue
import std/vector

import m4/ax_cflags_warn_all

copy source header template data m4

UNISIM_LIB_SIMULATOR_SOURCE_FILES="$(files source)"

UNISIM_LIB_SIMULATOR_HEADER_FILES="\
$(files header) \
$(files template) \
"

UNISIM_LIB_SIMULATOR_M4_FILES="$(files m4)"

UNISIM_LIB_SIMULATOR_DATA_FILES="$(files data)"

UNISIM_SIMULATOR_SOURCE_FILES="\
"
UNISIM_SIMULATOR_HEADER_FILES="\
"

UNISIM_SIMULATOR_TEMPLATE_FILES="\
"

UNISIM_SIMULATOR_EXTRA_FILES="\
"

UNISIM_SIMULATOR_DATA_FILES="\
COPYING \
README \
INSTALL \
AUTHORS \
NEWS \
ChangeLog \
unisim.ico \
"

UNISIM_SIMULATOR_TESTBENCH_FILES="\
main.cc \
"

UNISIM_SIMULATOR_FILES="\
${UNISIM_SIMULATOR_SOURCE_FILES} \
${UNISIM_SIMULATOR_HEADER_FILES} \
${UNISIM_SIMULATOR_EXTRA_FILES} \
${UNISIM_SIMULATOR_TEMPLATE_FILES} \
${UNISIM_SIMULATOR_DATA_FILES} \
${UNISIM_SIMULATOR_TESTBENCH_FILES}"

dist_copy ${UNISIM_SIMULATOR_FILES}

# Top level

cat << EOF > "AUTHORS"
Gilles Mouchard <gilles.mouchard@cea.fr>
EOF

cat << EOF > "README"
This package contains:
  - UNISIM GenISSLib: an instruction set simulator generator
  - UNISIM CAN_TESTBENCH Simulator: a CAN_TESTBENCH SoC simulator.
See INSTALL for installation instructions.
EOF

cat << EOF > "INSTALL"
INSTALLATION
------------

Requirements:
  - GNU C++ compiler
  - GNU C++ standard library
  - GNU bash
  - GNU make
  - GNU autoconf
  - GNU automake
  - GNU flex
  - GNU bison
  - boost (http://www.boost.org) development package (libboost-devel for Redhat/Mandriva, libboost-graph-dev for Debian/Ubuntu)
  - libxml2 (http://xmlsoft.org/libxml2) development package (libxml2-devel for Redhat/Mandriva, libxml2-dev for Debian/Ubuntu)
  - zlib (http://www.zlib.net) development package (zlib1g-devel for Redhat/Mandriva, zlib1g-devel for Debian/Ubuntu)
  - libedit (http://www.thrysoee.dk/editline) development package (libedit-devel for Redhat/Mandriva, libedit-dev for Debian/Ubuntu)
  - Core SystemC Language >= 2.3 (http://www.systemc.org)

Building instructions:
  $ ./configure --with-systemc=<path-to-systemc-install-dir>
  $ make

Installing (optional):
  $ make install
EOF

output_configure_ac <(cat << EOF
$(lines ac_common_header)
$(lines ac)
$(lines ac_common_footer)
EOF
)

output_makefile_am <(cat << EOF
$(lines am_common_header)

# Program
bin_PROGRAMS = $(package)-$(version)
$(am_package)_$(am_version)_SOURCES = ${UNISIM_SIMULATOR_TESTBENCH_FILES} ${UNISIM_SIMULATOR_SOURCE_FILES}
#$(am_package)_$(am_version)_LDFLAGS = -static-libtool-libs
$(am_package)_$(am_version)_LDADD = lib$(package)-$(version).la

# Static Library
noinst_LTLIBRARIES = lib$(package)-$(version).la
lib$(am_package)_$(am_version)_la_SOURCES = ${UNISIM_LIB_SIMULATOR_SOURCE_FILES}
lib$(am_package)_$(am_version)_la_LDFLAGS = -static

noinst_HEADERS = ${UNISIM_LIB_SIMULATOR_HEADER_FILES} ${UNISIM_LIB_SIMULATOR_TEMPLATE_FILES} ${UNISIM_SIMULATOR_HEADER_FILES} ${UNISIM_SIMULATOR_TEMPLATE_FILES}
EXTRA_DIST = ${UNISIM_LIB_SIMULATOR_M4_FILES}
sharedir = \$(prefix)/share/$(package)-$(version)
nobase_dist_share_DATA = ${UNISIM_LIB_SIMULATOR_DATA_FILES} ${UNISIM_SIMULATOR_DATA_FILES}

$(lines am)
EOF
)

build_configure
